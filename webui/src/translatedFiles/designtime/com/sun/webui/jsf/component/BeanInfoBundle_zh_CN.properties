#@EN@ Panels
TablePanels_displayName=面板
#@EN@ Component that represents an embedded panel.    Note: Column headers and footers are rendered by TableRowGroupRenderer
TablePanels_shortDescription=表示嵌入式面板的组件。注意：列标题和脚注是由 TableRowGroupRenderer 呈现的
#@EN@ Width
TablePanels_width_displayName=宽度
#@EN@ Use the width attribute to specify the width of the cells of the   column
TablePanels_width_shortDescription=使用 width 属性可指定列单元格的宽度
#@EN@ Double Click Script
TablePanels_onDblClick_displayName=双击脚本
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
TablePanels_onDblClick_shortDescription=用鼠标双击此组件时执行的脚本代码。
#@EN@ Key Press Script
TablePanels_onKeyPress_displayName=按键脚本
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
TablePanels_onKeyPress_shortDescription=当组件具有焦点且用户按下并释放某个键时执行的脚本代码。
#@EN@ Columns Spanned By the Cell
TablePanels_colSpan_displayName=单元格所跨列数
#@EN@ The COLSPAN attribute of TD specifies the number of columns that are  spanned by the cell
TablePanels_colSpan_shortDescription=TD 的 COLSPAN 属性可指定单元格所跨越的列数
#@EN@ Cell Background Color
TablePanels_bgColor_displayName=单元格背景颜色
#@EN@ The BGCOLOR attribute suggests a background color for the cell
TablePanels_bgColor_shortDescription=BGCOLOR 属性建议单元格的背景颜色
#@EN@ Key Up Script
TablePanels_onKeyUp_displayName=释放键脚本
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
TablePanels_onKeyUp_shortDescription=当组件具有焦点且用户释放某个键时执行的脚本代码。
#@EN@ Mouse Up Script
TablePanels_onMouseUp_displayName=释放鼠标脚本
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
TablePanels_onMouseUp_shortDescription=当鼠标指针位于组件上且用户释放鼠标按钮时执行的脚本代码。
#@EN@ CSS Style Class(es)
TablePanels_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
TablePanels_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Alignment Character
TablePanels_char_displayName=对齐字符
#@EN@ Use the char attribute to specify a character to use for   horizontal alignment in each cell in the row
TablePanels_char_shortDescription=使用 char 属性可指定用于水平对齐行中每个单元格的字符
#@EN@ Height
TablePanels_height_displayName=高度
#@EN@ The number of pixels for the cell's height
TablePanels_height_shortDescription=单元格的高度（以像素为单位）
#@EN@ Horizontal Alignment
TablePanels_align_displayName=水平对齐
#@EN@ Use the align attribute to specify the horizontal alignment for   the content of each cell in the column
TablePanels_align_shortDescription=使用 align 属性可指定列中每个单元格内容水平对齐
#@EN@ Cells Covered By Header Cell
TablePanels_scope_displayName=标题单元格所涉及的单元格
#@EN@ Use the scope attribute to specify that the data cells of the   column are also acting as headers for rows or other columns of the table
TablePanels_scope_shortDescription=使用 scope 属性可指定列数据单元格也用作表行或其他列的标题
#@EN@ CSS Style(s)
TablePanels_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
TablePanels_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Abbreviation for Header Cell
TablePanels_abbr_displayName=标题单元格的缩写
#@EN@ ABBR gives an abbreviated version of the cell's content
TablePanels_abbr_shortDescription=ABBR 提供单元格内容的缩写版本
#@EN@ Alignment Character Offset
TablePanels_charOff_displayName=对齐字符偏移量
#@EN@ Use the charOff attribute to specify the offset of the first   occurrence of the alignment character that is specified with the   char attribute
TablePanels_charOff_shortDescription=使用 charOff 属性可指定由 char 属性指定的对齐字符第一次出现时的偏移量
#@EN@ onClick
TablePanels_onClick_displayName=onClick
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
TablePanels_onClick_shortDescription=用鼠标单击此组件时执行的脚本代码。
#@EN@ Tool Tip
TablePanels_toolTip_displayName=工具提示
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
TablePanels_toolTip_shortDescription=为 HTML 元素设置 title 属性的值。如果将鼠标光标悬停在该 HTML 元素上，则指定的文本将作为工具提示进行显示。
#@EN@ Mouse Down Script
TablePanels_onMouseDown_displayName=按下鼠标脚本
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
TablePanels_onMouseDown_shortDescription=当鼠标指针位于组件上且用户按下鼠标按钮时执行的脚本代码。
#@EN@ List of Header Cells for Current Cell
TablePanels_headers_displayName=当前单元格的标题单元格列表
#@EN@ The HEADERS attribute specifies the header cells that apply to the  TD
TablePanels_headers_shortDescription=HEADERS 属性指定应用于 TD 的标题单元格
#@EN@ Category of Header Cell
TablePanels_axis_displayName=标题单元格的类别
#@EN@ The AXIS attribute provides a method of categorizing cells
TablePanels_axis_shortDescription=AXIS 属性提供单元格的分类方法
#@EN@ Extra HTML
TablePanels_extraHtml_displayName=附加 HTML
#@EN@ Extra HTML to be appended to the tag output by this renderer. 
TablePanels_extraHtml_shortDescription=要附加到由呈现器输出的标记之后的额外 HTML。
#@EN@ Vertical Position
TablePanels_valign_displayName=垂直位置
#@EN@ Use the valign attribute to specify the vertical alignment for the   content of each cell in the column
TablePanels_valign_shortDescription=使用 valign 属性可指定列中每个单元格内容垂直对齐
#@EN@ Suppress Word Wrap
TablePanels_noWrap_displayName=禁止自动换行
#@EN@ Use the noWrap attribute to disable word wrapping of this column's   cells in visual browsers
TablePanels_noWrap_shortDescription=使用 noWrap 属性可禁止此列的单元格在可视浏览器中自动换行
#@EN@ Rows Spanned By the Cell
TablePanels_rowSpan_displayName=单元格所跨行数
#@EN@ The ROWSPAN attribute of TD specifies the number of rows that are  spanned by the cell
TablePanels_rowSpan_shortDescription=TD 的 ROWSPAN 属性指定单元格所跨越的行数
#@EN@ Mouse Out Script
TablePanels_onMouseOut_displayName=移开鼠标脚本
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
TablePanels_onMouseOut_shortDescription=将鼠标指针从此组件上方移开时执行的脚本代码。
#@EN@ Mouse In Script
TablePanels_onMouseOver_displayName=移入鼠标脚本
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
TablePanels_onMouseOver_shortDescription=当用户将鼠标指针移入此组件的边界内时执行的脚本代码。
#@EN@ Mouse Move Script
TablePanels_onMouseMove_displayName=移动鼠标脚本
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
TablePanels_onMouseMove_shortDescription=当用户将鼠标指针移动到组件上方时执行的脚本代码。
#@EN@ Is Filter Panel
TablePanels_filterPanel_displayName=过滤面板
#@EN@ Flag indicating this component should also render a filter panel, in addition to  the sort and preferences panels
TablePanels_filterPanel_shortDescription=该标志指示此组件除了呈现排序和首选项面板外，还应该呈现过滤面板
#@EN@ Visible
TablePanels_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be   viewable by the user in the rendered HTML page. 
TablePanels_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件。
#@EN@ Key Down Script
TablePanels_onKeyDown_displayName=按下键脚本
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
TablePanels_onKeyDown_shortDescription=当组件具有焦点且用户按下某个键时执行的脚本代码。
#@EN@ Is Preferences Panel
TablePanels_preferencesPanel_displayName=首选项面板
#@EN@ Flag indicating this component should also render a preferences panel, in   addition to the sort and filter panels
TablePanels_preferencesPanel_shortDescription=该标志指示此组件除了呈现排序和过滤面板外，还应该呈现首选项面板
#@EN@ Rendered Flag
UIComponentBase_rendered_displayName=呈现标志
#@EN@ Indicates whether the HTML code for the component should be included in the rendered HTML page
UIComponentBase_rendered_shortDescription=指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Component Identifier
UIComponentBase_id_displayName=组件标识符
#@EN@ This component's unique identifier
UIComponentBase_id_shortDescription=此组件的唯一标识符
#@EN@ Table2RowGroup
Table2RowGroup_displayName=Table2RowGroup
#@EN@ Component that represents a group of table rows.    The Table2RowGroup component provides a layout mechanism for displaying rows   of data
Table2RowGroup_shortDescription=表示一组表行的组件。Table2RowGroup 组件提供用于显示数据行的布局机制
#@EN@ HTML Template
Table2RowGroup_htmlTemplate_displayName=HTML 模板
#@EN@ Alternative HTML template to be used by this component. 
Table2RowGroup_htmlTemplate_shortDescription=此组件使用的替代 HTML 模板。
#@EN@ Double Click Script
TableRowGroupBase_onDblClick_displayName=双击脚本
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
TableRowGroupBase_onDblClick_shortDescription=用鼠标双击此组件时执行的脚本代码。
#@EN@ Table Data Sorter
TableRowGroupBase_tableDataSorter_displayName=表数据排序器
#@EN@ The tableDataSorter attribute is used to define sort critera and   the mechanism for sorting the contents of a TableDataProvider
TableRowGroupBase_tableDataSorter_shortDescription=tableDataSorter 属性用于为排序 TableDataProvider 内容而定义排序条件和机制
#@EN@ Key Press Script
TableRowGroupBase_onKeyPress_displayName=按键脚本
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
TableRowGroupBase_onKeyPress_shortDescription=当组件具有焦点且用户按下并释放某个键时执行的脚本代码。
#@EN@ Rendered Flag
WebuiComponent_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
WebuiComponent_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Source Data
TableRowGroupBase_sourceData_displayName=源数据
#@EN@ The sourceData attribute is used to specify the data source to   populate the table
TableRowGroupBase_sourceData_shortDescription=sourceData 属性用于指定数据源以填充表
#@EN@ Component Identifier
WebuiComponent_id_displayName=组件标识符
#@EN@ The component identifier for this component
WebuiComponent_id_shortDescription=此组件的组件标识符
#@EN@ Row Background Color
TableRowGroupBase_bgColor_displayName=行背景颜色
#@EN@ The deprecated BGCOLOR attribute suggests a background color for the  row
TableRowGroupBase_bgColor_shortDescription=过时的 BGCOLOR 属性建议行的背景颜色
#@EN@ Key Up Script
TableRowGroupBase_onKeyUp_displayName=释放键脚本
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
TableRowGroupBase_onKeyUp_shortDescription=当组件具有焦点且用户释放某个键时执行的脚本代码。
#@EN@ Mouse Up Script
TableRowGroupBase_onMouseUp_displayName=释放鼠标脚本
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
TableRowGroupBase_onMouseUp_shortDescription=当鼠标指针位于组件上且用户释放鼠标按钮时执行的脚本代码。
#@EN@ Alignment Character For Cells
TableRowGroupBase_char_displayName=单元格的对齐字符
#@EN@ Use the char attribute to specify a character to use for   horizontal alignment in each cell in the row
TableRowGroupBase_char_shortDescription=使用 char 属性可指定用于水平对齐行中每个单元格的字符
#@EN@ Horizontal Alignment Cells In Group
TableRowGroupBase_align_displayName=组中的水平对齐单元格
#@EN@ Use the align attribute to specify the horizontal alignment for   the content of each cell in the row
TableRowGroupBase_align_shortDescription=使用 align 属性可指定行中每个单元格内容水平对齐
#@EN@ Show Select Multiple Button
TableRowGroupBase_selectMultipleToggleButton_displayName=显示“选中多个”按钮
#@EN@ Use the selectMultipleToggleButton attribute to display a button   in the group header to allow users to select all rows of the group at once
TableRowGroupBase_selectMultipleToggleButton_shortDescription=使用 selectMultipleToggleButton 属性可在组标题中显示一个按钮，以便允许用户能够一次选择所有组行
#@EN@ Alignment Character Offset
TableRowGroupBase_charOff_displayName=对齐字符偏移量
#@EN@ Use the charOff attribute to specify the offset of the first   occurrence of the alignment character that is specified with the   char attribute
TableRowGroupBase_charOff_shortDescription=使用 charOff 属性可指定由 char 属性指定的对齐字符第一次出现时的偏移量
#@EN@ Click Script
TableRowGroupBase_onClick_displayName=单击脚本
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
TableRowGroupBase_onClick_shortDescription=用鼠标单击此组件时执行的脚本代码。
#@EN@ Show Group Toggle Button
TableRowGroupBase_groupToggleButton_displayName=显示组切换按钮
#@EN@ Use the groupToggleButton attribute to display a button in the   group header to allow users to collapse and expand the group of rows. 
TableRowGroupBase_groupToggleButton_shortDescription=使用 groupToggleButton 属性可在组标题中显示一个按钮，以使用户能够折叠和展开行组。
#@EN@ Tool Tip
TableRowGroupBase_toolTip_displayName=工具提示
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
TableRowGroupBase_toolTip_shortDescription=为 HTML 元素设置 title 属性的值。如果将鼠标光标悬停在该 HTML 元素上，则指定的文本将作为工具提示进行显示。
#@EN@ Mouse Down Script
TableRowGroupBase_onMouseDown_displayName=按下鼠标脚本
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
TableRowGroupBase_onMouseDown_shortDescription=当鼠标指针位于组件上且用户按下鼠标按钮时执行的脚本代码。
#@EN@ Table Data Filter
TableRowGroupBase_tableDataFilter_displayName=表数据过滤器
#@EN@ The tableDataFilter attribute is used to define filter critera and   mechanism for filtering the contents of a TableDataProvider
TableRowGroupBase_tableDataFilter_shortDescription=tableDataFilter 属性用于为过滤 TableDataProvider 内容而定义过滤条件和机制
#@EN@ Paginated rows
TableRowGroupBase_rows_displayName=分页行数
#@EN@ The number of rows per page to be displayed for a paginated table
TableRowGroupBase_rows_shortDescription=每页按分页表显示的行数
#@EN@ Source Variable
TableRowGroupBase_sourceVar_displayName=源变量
#@EN@ Use the sourceVar attribute to specify the name of the   request-scope attribute under which model data for the current row will be   exposed when iterating
TableRowGroupBase_sourceVar_shortDescription=使用 sourceVar 属性可指定在迭代时公开当前行的模型数据所使用的请求范围属性名称
#@EN@ Vertical Alignment Of Cells In Group
TableRowGroupBase_valign_displayName=组中单元格的垂直对齐
#@EN@ Use the valign attribute to specify the vertical alignment for the   content of each cell in the column
TableRowGroupBase_valign_shortDescription=使用 valign 属性可指定列中每个单元格内容垂直对齐
#@EN@ First Row
TableRowGroupBase_first_displayName=第一行
#@EN@ Use the first attribute to specify which row should be the first   to be displayed
TableRowGroupBase_first_shortDescription=使用 first 属性可指定应首先显示的行
#@EN@ Mouse Out Script
TableRowGroupBase_onMouseOut_displayName=移开鼠标脚本
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
TableRowGroupBase_onMouseOut_shortDescription=将鼠标指针从此组件上方移开时执行的脚本代码。
#@EN@ Mouse In Script
TableRowGroupBase_onMouseOver_displayName=移入鼠标脚本
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
TableRowGroupBase_onMouseOver_shortDescription=当用户将鼠标指针移入此组件的边界内时执行的脚本代码。
#@EN@ Mouse Move Script
TableRowGroupBase_onMouseMove_displayName=移动鼠标脚本
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
TableRowGroupBase_onMouseMove_shortDescription=当用户将鼠标指针移动到组件上方时执行的脚本代码。
#@EN@ Empty Data Message
TableRowGroupBase_emptyDataMsg_displayName=空数据消息
#@EN@ The text to be displayed when the table does not contain data
TableRowGroupBase_emptyDataMsg_shortDescription=表中不包含数据时显示的文本
#@EN@ Is Selected
TableRowGroupBase_selected_displayName=选定
#@EN@ Flag indicating that the current row is selected
TableRowGroupBase_selected_shortDescription=该标志指示已选定当前行
#@EN@ Is Collapsed
TableRowGroupBase_collapsed_displayName=折叠
#@EN@ Use the collapsed attribute to initially render the group as collapsed, so that   the data rows are hidden and only the header row is visible
TableRowGroupBase_collapsed_shortDescription=使用 collapsed 属性可最初以折叠状态呈现组，以此来隐藏数据行并且只显示标题行
#@EN@ Visible
TableRowGroupBase_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
TableRowGroupBase_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ Key Down Script
TableRowGroupBase_onKeyDown_displayName=按下键脚本
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
TableRowGroupBase_onKeyDown_shortDescription=当组件具有焦点且用户按下某个键时执行的脚本代码。
#@EN@ header Text
TableRowGroupBase_headerText_displayName=标题文本
#@EN@ The text to be displayed in the group header. 
TableRowGroupBase_headerText_shortDescription=要在组标题中显示的文本。
#@EN@ CSS Style Class(es)
TableRowGroupBase_styleClasses_displayName=CSS 样式类
#@EN@ Use the styleClasses attribute to specify a list of CSS style   classes to apply to the rows of the group
TableRowGroupBase_styleClasses_shortDescription=使用 styleClasses 属性可指定要应用于组行的 CSS 样式类的列表
#@EN@ Page Separator
PageSeparator_displayName=页面分隔符
#@EN@ The PageSeparator component creates a horizontal line. 
PageSeparator_shortDescription=PageSeparator 组件用于创建一条水平线。
#@EN@ CSS Style Class(es)
PageSeparator_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
PageSeparator_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Value
PageSeparator_value_displayName=值
#@EN@ The current value of this component
PageSeparator_value_shortDescription=此组件的当前值
#@EN@ Converter
PageSeparator_converter_displayName=转换器
#@EN@ Converter instance registered with this component.
PageSeparator_converter_shortDescription=与此组件一起注册的转换器实例。
#@EN@ Visible
PageSeparator_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
PageSeparator_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ CSS Style(s)
PageSeparator_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
PageSeparator_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Rendered Flag
PageSeparator_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
PageSeparator_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Component Identifier
PageSeparator_id_displayName=组件标识符
#@EN@ The component identifier for this component
PageSeparator_id_shortDescription=此组件的组件标识符
#@EN@ Message Group
MessageGroup_displayName=消息组
#@EN@ The MessageGroup component is used to display a list of messages for the page  and all its components. 
MessageGroup_shortDescription=MessageGroup 组件用于显示页面及其所有组件的消息列表。
#@EN@ Tool Tip
MessageGroup_toolTip_displayName=工具提示
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
MessageGroup_toolTip_shortDescription=为 HTML 元素设置 title 属性的值。如果将鼠标光标悬停在该 HTML 元素上，则指定的文本将作为工具提示进行显示。
#@EN@ CSS Style Class(es)
MessageGroup_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
MessageGroup_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ title
MessageGroup_title_displayName=title
#@EN@ Sets the title of the message group
MessageGroup_title_shortDescription=设置消息组的标题
#@EN@ Show Summary Message
MessageGroup_showSummary_displayName=显示摘要消息
#@EN@ Set this attribute to true to display the summary message. 
MessageGroup_showSummary_shortDescription=将此属性设置为 true 可显示摘要消息。
#@EN@ Visible
MessageGroup_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
MessageGroup_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ CSS Style(s)
MessageGroup_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
MessageGroup_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Show Global Messages Only
MessageGroup_showGlobalOnly_displayName=仅显示全局消息
#@EN@ Use the showGlobalOnly attribute to display only those messages that   are not associated with a component id
MessageGroup_showGlobalOnly_shortDescription=使用 showGlobalOnly 属性可以仅显示那些与组件 id 不关联的消息
#@EN@ Rendered Flag
MessageGroup_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
MessageGroup_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Show Detail Message
MessageGroup_showDetail_displayName=显示详细消息
#@EN@ Set this attribute to true to display the detailed message. 
MessageGroup_showDetail_shortDescription=将此属性设置为 true 可显示详细消息。
#@EN@ Component Identifier
MessageGroup_id_displayName=组件标识符
#@EN@ The component identifier for this component
MessageGroup_id_shortDescription=此组件的组件标识符
#@EN@ Frame Set
FrameSet_displayName=框架集
#@EN@ The FrameSet component defines a set of frames. 
FrameSet_shortDescription=FrameSet 组件用于定义一组框架。
#@EN@ Tool Tip
FrameSet_toolTip_displayName=工具提示
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
FrameSet_toolTip_shortDescription=为 HTML 元素设置 title 属性的值。如果将鼠标光标悬停在该 HTML 元素上，则指定的文本将作为工具提示进行显示。
#@EN@ Number of Columns
FrameSet_cols_displayName=列数
#@EN@ Defines the number and size of columns in a frameset
FrameSet_cols_shortDescription=定义框架集中的列数和列大小
#@EN@ Border Color
FrameSet_borderColor_displayName=边框颜色
#@EN@ The bordercolor attribute allows you to set the color of the frame   borders using a hex value or a color name. 
FrameSet_borderColor_shortDescription=通过 bordercolor 属性，可以使用十六进制值或颜色名称来设置框架边框的颜色。
#@EN@ CSS Style Class(es)
FrameSet_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
FrameSet_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Number of Rows
FrameSet_rows_displayName=行数
#@EN@ Defines the number and size of rows in a frameset
FrameSet_rows_shortDescription=定义框架集中行的数目和大小
#@EN@ CSS Style(s)
FrameSet_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
FrameSet_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Frame Border
FrameSet_frameBorder_displayName=框架边框
#@EN@ Flag indicating whether frames should have borders or not
FrameSet_frameBorder_shortDescription=该标志指示框架是否应该具有边框。
#@EN@ border
FrameSet_border_displayName=边框
#@EN@ The width, in pixels, of the space around frames
FrameSet_border_shortDescription=框架周围空间的宽度（以像素为单位）
#@EN@ Rendered Flag
FrameSet_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
FrameSet_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Frame Spacing
FrameSet_frameSpacing_displayName=框架间距
#@EN@ The width, in pixels, of the space around frames
FrameSet_frameSpacing_shortDescription=框架周围空间的宽度（以像素为单位）
#@EN@ Component Identifier
FrameSet_id_displayName=组件标识符
#@EN@ The component identifier for this component
FrameSet_id_shortDescription=此组件的组件标识符
#@EN@ Wizard
Wizard_displayName=向导
#@EN@ Wizard
Wizard_shortDescription=向导
#@EN@ isPopup
Wizard_isPopup_displayName=isPopup
#@EN@ The wizard is being targeted to a popup window.  Default is true
Wizard_isPopup_shortDescription=向导的目标是弹出式窗口。缺省值为 true
#@EN@ Cancel Script
Wizard_onCancel_displayName=取消脚本
#@EN@ Scripting code executed when the Cancel button is clicked. 
Wizard_onCancel_shortDescription=单击“取消”按钮时执行的脚本代码。
#@EN@ Wizard Title
Wizard_title_displayName=向导标题
#@EN@ The text to be displayed as the title for the wizard.  The title is displayed in the top line, and extends the full width of  the wizard window.  @see #getTitle() 
Wizard_title_shortDescription=显示为向导标题的文本。标题显示在顶行，并扩展至整个向导窗口宽度。@see #getTitle() 
#@EN@ Wizard Steps
Wizard_steps_displayName=向导步骤
#@EN@ Use the steps attribute to specify the wizard steps programmatically,  instead of using the webuijsf:wizardStep tags in the JSP.  The steps attribute must be specified as an ArrayList or   List of WizardStep, WizardBranch,  WizardBranchSteps, or WizardSubstepBranch  components. 
Wizard_steps_shortDescription=使用 steps 属性可按编程方式指定向导步骤，而不是在 JSP 中使用 webuijsf:wizardStep 标记。必须将 steps 属性指定为 ArrayList 或 WizardStep、WizardBranch、WizardBranchSteps 或 WizardSubstepBranch 组件的列表。
#@EN@ Finish Script
Wizard_onFinish_displayName=完成脚本
#@EN@ Scripting code executed when the Finish button is clicked. 
Wizard_onFinish_shortDescription=单击“完成”按钮时执行的脚本代码。
#@EN@ Next Script
Wizard_onNext_displayName=下一步脚本
#@EN@ Scripting code executed when the Next button is clicked. 
Wizard_onNext_shortDescription=单击“下一步”按钮时执行的脚本代码。
#@EN@ Step Link Script
Wizard_onStepLink_displayName=步骤链接脚本
#@EN@ Scripting code executed when a Step link is clicked. 
Wizard_onStepLink_shortDescription=单击步骤链接时执行的脚本代码。
#@EN@ onPopupDismiss
Wizard_onPopupDismiss_displayName=onPopupDismiss
#@EN@ Scripting code that is invoked when the wizard popup is dismissed
Wizard_onPopupDismiss_shortDescription=关闭向导弹出式窗口时调用的脚本代码
#@EN@ Rendered Flag
Wizard_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Wizard_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Component Identifier
Wizard_id_displayName=组件标识符
#@EN@ The component identifier for this component
Wizard_id_shortDescription=此组件的组件标识符
#@EN@ Close Script
Wizard_onClose_displayName=关闭脚本
#@EN@ Scripting code executed when the Close button is clicked. 
Wizard_onClose_shortDescription=单击“关闭”按钮时执行的脚本代码。
#@EN@ Help Tab Script
Wizard_onHelpTab_displayName=“帮助”标签脚本
#@EN@ Scripting code executed when the Help tab is clicked. 
Wizard_onHelpTab_shortDescription=单击“帮助”标签时执行的脚本代码。
#@EN@ CSS Style Class(es)
Wizard_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element  when this component is rendered. 
Wizard_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Wizard Event Listener
Wizard_eventListener_displayName=向导事件侦听程序
#@EN@ The eventListener attribute is used to specify an object to   handle an event that is triggered when a user activates a   component in the wizard.  The eventListener attribute value must be a JavaServer Faces EL  expression that resolves to an instance of   com.sun.webui.jsf.event.WizardEventListener.      The return value of the wizard component's call to the event listener's    handleEvent() method controls the processing of the current step    that is being performed, and determines whether the next step or a    previous step, etc
Wizard_eventListener_shortDescription=eventListener 属性用于指定对象以处理用户在向导中激活组件时触发的事件。eventListener 属性值必须是一个结果为 com.sun.webui.jsf.event.WizardEventListener 实例的 JavaServer Faces EL 表达式。向导组件对事件侦听程序的 handleEvent() 方法调用时，其返回值将控制当前步骤的处理，并确定是执行下一步还是执行上一步等操作。
#@EN@ Steps Tab Script
Wizard_onStepsTab_displayName=“步骤”标签脚本
#@EN@ Scripting code executed when the Steps tab is clicked. 
Wizard_onStepsTab_shortDescription=单击“步骤”标签时执行的脚本代码。
#@EN@ Visible
Wizard_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
Wizard_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ CSS Style(s)
Wizard_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this  component is rendered. 
Wizard_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Wizard Model
Wizard_model_displayName=向导模型
#@EN@ The model property is a value binding that  resolves to an instance of WizardModel
Wizard_model_shortDescription=model 属性是结果为 WizardModel 实例的值绑定
#@EN@ Previous Script
Wizard_onPrevious_displayName=上一步脚本
#@EN@ Scripting code executed when the Previous button is clicked. 
Wizard_onPrevious_shortDescription=单击“上一步”按钮时，执行的脚本代码。
#@EN@ Add Remove List
AddRemove_displayName=添加删除列表
#@EN@ The AddRemove component is used to construct a list of selected items.    Use the AddRemove component when the web application user makes selections   from a list and they need to see the currently selected items displayed  together, and/or they need to reorder the selected items.   
AddRemove_shortDescription=AddRemove 组件用于构造选定项的列表。如果 Web 应用程序用户要从列表中进行选择，并且需要同时显示当前选定的项和/或需要对选定的项进行重新排序，请使用 AddRemove 组件。
#@EN@ Mouse Down Script
AddRemove_onMouseDown_displayName=按下鼠标脚本
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
AddRemove_onMouseDown_shortDescription=当鼠标指针位于组件上且用户按下鼠标按钮时执行的脚本代码。
#@EN@ Value
AddRemove_value_displayName=值
#@EN@ The current value of this component
AddRemove_value_shortDescription=此组件的当前值
#@EN@ Double Click Script
AddRemove_onDblClick_displayName=双击脚本
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
AddRemove_onDblClick_shortDescription=用鼠标双击此组件时执行的脚本代码。
#@EN@ Key Press Script
AddRemove_onKeyPress_displayName=按键脚本
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
AddRemove_onKeyPress_shortDescription=当组件具有焦点且用户按下并释放某个键时执行的脚本代码。
#@EN@ Text Selected Script
AddRemove_onSelect_displayName=文本选定脚本
#@EN@ Scripting code executed when some text in this  component value is selected. 
AddRemove_onSelect_shortDescription=当选定此组件值中的一些文本时执行的脚本代码。
#@EN@ Available Items label
AddRemove_availableItemsLabel_displayName=“可用项”标签
#@EN@ The label for the list of available items. 
AddRemove_availableItemsLabel_shortDescription=可用项列表的标签 
#@EN@ Focus Script
AddRemove_onFocus_displayName=焦点脚本
#@EN@ Scripting code executed when this component  receives focus
AddRemove_onFocus_shortDescription=此组件获取焦点时执行的脚本代码。
#@EN@ Selected Items label
AddRemove_selectedItemsLabel_displayName=“选定项”标签
#@EN@ The label for the list of selected items. 
AddRemove_selectedItemsLabel_shortDescription=选定项列表的标签。
#@EN@ Mouse Out Script
AddRemove_onMouseOut_displayName=移开鼠标脚本
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
AddRemove_onMouseOut_shortDescription=将鼠标指针从此组件上方移开时执行的脚本代码。
#@EN@ Sorted
AddRemove_sorted_displayName=排序
#@EN@ If sorted is set to true, the items on the available list are shown in  alphabetical order
AddRemove_sorted_shortDescription=如果将 sorted 设置为 true，则会按字母顺序显示可用列表中的项
#@EN@ Separators
AddRemove_separators_displayName=分隔符
#@EN@ Flag indicating that items corresponding to   com.sun.webui.jsf.model.Option that are defined   inside a com.sun.webui.jsf.model.OptionGroup should be  surrounded by separators inside the list
AddRemove_separators_shortDescription=该标志指示与 com.sun.webui.jsf.model.OptionGroup 内部定义的 com.sun.webui.jsf.model.Option 相对应的项应该在列表中使用分隔符进行分隔
#@EN@ Allow Duplicate Selections
AddRemove_duplicateSelections_displayName=允许重复选择
#@EN@ If duplicateSelections is set to true, items in the available  list are not removed when they are added to the selected list.  The user is permitted to add an available item more than once   to the list of selected items
AddRemove_duplicateSelections_shortDescription=如果将 duplicateSelections 设置为 true，则在将可用列表中的项添加到选定列表时不会删除这些项。允许用户将一个可用项多次添加到选定项的列表中
#@EN@ Select All Buttons
AddRemove_selectAll_displayName=全选按钮
#@EN@ Show the Add All and Remove All buttons. 
AddRemove_selectAll_shortDescription=显示“全部添加”和“全部删除”按钮。
#@EN@ Vertical layout
AddRemove_vertical_displayName=垂直布局
#@EN@ Use the vertical layout instead of the default horizontal layout
AddRemove_vertical_shortDescription=使用垂直布局，而不是缺省的水平布局
#@EN@ Mouse In Script
AddRemove_onMouseOver_displayName=移入鼠标脚本
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
AddRemove_onMouseOver_shortDescription=当用户将鼠标指针移入此组件的边界内时执行的脚本代码。
#@EN@ Mouse Move Script
AddRemove_onMouseMove_displayName=移动鼠标脚本
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
AddRemove_onMouseMove_shortDescription=当用户将鼠标指针移动到组件上方时执行的脚本代码。
#@EN@ Key Up Script
AddRemove_onKeyUp_displayName=释放键脚本
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
AddRemove_onKeyUp_shortDescription=当组件具有焦点且用户释放某个键时执行的脚本代码。
#@EN@ Mouse Up Script
AddRemove_onMouseUp_displayName=释放鼠标脚本
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
AddRemove_onMouseUp_shortDescription=当鼠标指针位于组件上且用户释放鼠标按钮时执行的脚本代码。
#@EN@ Move Buttons
AddRemove_moveButtons_displayName=移动按钮
#@EN@ Show the Move Up and Move Down buttons. 
AddRemove_moveButtons_shortDescription=显示“上移”和“下移”按钮。
#@EN@ Value Change Script
AddRemove_onChange_displayName=值更改脚本
#@EN@ Scripting code executed when the element  value of this component is changed. 
AddRemove_onChange_shortDescription=更改此组件的元素值时执行的脚本代码。
#@EN@ Key Down Script
AddRemove_onKeyDown_displayName=按下键脚本
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
AddRemove_onKeyDown_shortDescription=当组件具有焦点且用户按下某个键时执行的脚本代码。
#@EN@ Label Level
AddRemove_labelLevel_displayName=标签级别
#@EN@ Sets the style level for the generated label, provided the  label attribute has been set
AddRemove_labelLevel_shortDescription=为生成的标签设置样式级别，前提是已设置了 label 属性
#@EN@ Click Script
AddRemove_onClick_displayName=单击脚本
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
AddRemove_onClick_shortDescription=用鼠标单击此组件时执行的脚本代码。
#@EN@ Blur Script
AddRemove_onBlur_displayName=模糊脚本
#@EN@ Scripting code executed when this element loses focus. 
AddRemove_onBlur_shortDescription=此元素失去焦点时执行的脚本代码。
#@EN@ localValue
UIInput_localValue_displayName=本地值
#@EN@ localValue
UIInput_localValue_shortDescription=本地值
#@EN@ Number of Items to Display
ListSelector_rows_displayName=要显示的项数
#@EN@ The number of items to display
ListSelector_rows_shortDescription=要显示的项数
#@EN@ Converter
WebuiInput_converter_displayName=转换器
#@EN@ The converter attribute is used to specify a method to translate native  property values to String and back for this component
WebuiInput_converter_shortDescription=converter 属性用于指定一个转换方法，以便为此组件实现自身属性值与 String 属性值之间的转换
#@EN@ Required
WebuiInput_required_displayName=必需
#@EN@ Flag indicating that an input value for this field is mandatory, and   failure to provide one will trigger a validation error. 
WebuiInput_required_shortDescription=该标志指示此字段的输入值是必需的，如果未提供输入值，则会触发一个验证错误。
#@EN@ Label on Top
ListSelector_labelOnTop_displayName=标签置于顶部
#@EN@ If this attribute is true, the label is rendered above the  component
ListSelector_labelOnTop_shortDescription=如果此属性为 true，则标签呈现在组件的上方
#@EN@ Validator Expression
WebuiInput_validatorExpression_displayName=验证器表达式
#@EN@ The validator attribute is used to specify a method in a backing bean to  validate input to the component
WebuiInput_validatorExpression_shortDescription=validator 属性用于在支持 Bean 中指定一个方法，以此来验证对组件输入的内容
#@EN@ Rendered Flag
WebuiInput_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
WebuiInput_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ valueChangeListener
WebuiInput_valueChangeListener_displayName=valueChangeListener
#@EN@ {@inheritDoc} 
WebuiInput_valueChangeListener_shortDescription={@inheritDoc} 
#@EN@ Component Identifier
WebuiInput_id_displayName=组件标识符
#@EN@ The component identifier for this component
WebuiInput_id_shortDescription=此组件的组件标识符
#@EN@ Validator
WebuiInput_validator_displayName=验证器
#@EN@ {@inheritDoc} 
WebuiInput_validator_shortDescription={@inheritDoc} 
#@EN@ Immediate
WebuiInput_immediate_displayName=立即
#@EN@ Flag indicating that event handling for this component should be handled  immediately (in Apply Request Values phase) rather than waiting until   Invoke Application phase. 
WebuiInput_immediate_shortDescription=该标志指示应该立即执行此组件的事件处理（在“应用请求值”阶段），而不是一直等到“调用应用程序”阶段。
#@EN@ Visible
ListSelector_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
ListSelector_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ Value Change Listener Expression
WebuiInput_valueChangeListenerExpression_displayName=值更改侦听程序表达式
#@EN@ The valueChangeListener attribute is used to specify a  method to handle an value-change event that is triggered when the  user enters data in the input component
WebuiInput_valueChangeListenerExpression_shortDescription=valueChangeListener 属性用于指定一个处理值更改事件的方法，当用户在输入组件中输入数据时将触发此事件
#@EN@ submittedValue
UIInput_submittedValue_displayName=提交的值
#@EN@ submittedValue
UIInput_submittedValue_shortDescription=提交的值
#@EN@ Footer
TableFooter_displayName=脚注
#@EN@ Component that represents a table footer.    Note: Column headers and footers are rendered by TableRowGroupRenderer
TableFooter_shortDescription=表示表脚注的组件。注意：列标题和脚注是由 TableRowGroupRenderer 呈现的
#@EN@ Width
TableFooter_width_displayName=宽度
#@EN@ Use the width attribute to specify the width of the cells of the   column
TableFooter_width_shortDescription=使用 width 属性可指定列单元格的宽度
#@EN@ Double Click Script
TableFooter_onDblClick_displayName=双击脚本
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
TableFooter_onDblClick_shortDescription=用鼠标双击此组件时执行的脚本代码。
#@EN@ Key Press Script
TableFooter_onKeyPress_displayName=按键脚本
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
TableFooter_onKeyPress_shortDescription=当组件具有焦点且用户按下并释放某个键时执行的脚本代码。
#@EN@ Columns Spanned By the Cell
TableFooter_colSpan_displayName=单元格所跨列数
#@EN@ The COLSPAN attribute of TD specifies the number of columns that are  spanned by the cell
TableFooter_colSpan_shortDescription=TD 的 COLSPAN 属性可指定单元格所跨越的列数
#@EN@ Cell Background Color
TableFooter_bgColor_displayName=单元格背景颜色
#@EN@ The BGCOLOR attribute suggests a background color for the cell
TableFooter_bgColor_shortDescription=BGCOLOR 属性建议单元格的背景颜色
#@EN@ Is Table Footer
TableFooter_tableFooter_displayName=表脚注
#@EN@ Flag indicating this component should render a table footer
TableFooter_tableFooter_shortDescription=该标志指示此组件应该呈现表脚注
#@EN@ Key Up Script
TableFooter_onKeyUp_displayName=释放键脚本
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
TableFooter_onKeyUp_shortDescription=当组件具有焦点且用户释放某个键时执行的脚本代码。
#@EN@ Mouse Up Script
TableFooter_onMouseUp_displayName=释放鼠标脚本
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
TableFooter_onMouseUp_shortDescription=当鼠标指针位于组件上且用户释放鼠标按钮时执行的脚本代码。
#@EN@ CSS Style Class(es)
TableFooter_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
TableFooter_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Alignment Character
TableFooter_char_displayName=对齐字符
#@EN@ Use the char attribute to specify a character to use for   horizontal alignment in each cell in the row
TableFooter_char_shortDescription=使用 char 属性可指定用于水平对齐行中每个单元格的字符
#@EN@ Is Table Column Footer
TableFooter_tableColumnFooter_displayName=表列脚注
#@EN@ Flag indicating this component should render a table column footer
TableFooter_tableColumnFooter_shortDescription=该标志指示此组件应该呈现表列脚注
#@EN@ Height
TableFooter_height_displayName=高度
#@EN@ The number of pixels for the cell's height
TableFooter_height_shortDescription=单元格的高度（以像素为单位）
#@EN@ Horizontal Alignment
TableFooter_align_displayName=水平对齐
#@EN@ Use the align attribute to specify the horizontal alignment for   the content of each cell in the column
TableFooter_align_shortDescription=使用 align 属性可指定列中每个单元格内容水平对齐
#@EN@ Cells Covered By Header Cell
TableFooter_scope_displayName=标题单元格所涉及的单元格
#@EN@ Use the scope attribute to specify that the data cells of the   column are also acting as headers for rows or other columns of the table
TableFooter_scope_shortDescription=使用 scope 属性可指定列数据单元格也用作表行或其他列的标题
#@EN@ Abbreviation for Header Cell
TableFooter_abbr_displayName=标题单元格的缩写
#@EN@ ABBR gives an abbreviated version of the cell's content
TableFooter_abbr_shortDescription=ABBR 提供单元格内容的缩写版本
#@EN@ CSS Style(s)
TableFooter_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
TableFooter_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Click Script
TableFooter_onClick_displayName=单击脚本
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
TableFooter_onClick_shortDescription=用鼠标单击此组件时执行的脚本代码。
#@EN@ Alignment Character Offset
TableFooter_charOff_displayName=对齐字符偏移量
#@EN@ Use the charOff attribute to specify the offset of the first   occurrence of the alignment character that is specified with the   char attribute
TableFooter_charOff_shortDescription=使用 charOff 属性可指定由 char 属性指定的对齐字符第一次出现时的偏移量
#@EN@ Tool Tip
TableFooter_toolTip_displayName=工具提示
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
TableFooter_toolTip_shortDescription=为 HTML 元素设置 title 属性的值。如果将鼠标光标悬停在该 HTML 元素上，则指定的文本将作为工具提示进行显示。
#@EN@ Mouse Down Script
TableFooter_onMouseDown_displayName=按下鼠标脚本
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
TableFooter_onMouseDown_shortDescription=当鼠标指针位于组件上且用户按下鼠标按钮时执行的脚本代码。
#@EN@ List of Header Cells for Current Cell
TableFooter_headers_displayName=当前单元格的标题单元格列表
#@EN@ The HEADERS attribute specifies the header cells that apply to the  TD
TableFooter_headers_shortDescription=HEADERS 属性指定应用于 TD 的标题单元格
#@EN@ Category of Header Cell
TableFooter_axis_displayName=标题单元格的类别
#@EN@ The AXIS attribute provides a method of categorizing cells
TableFooter_axis_shortDescription=AXIS 属性提供单元格的分类方法
#@EN@ Extra HTML
TableFooter_extraHtml_displayName=附加 HTML
#@EN@ Extra HTML to be appended to the tag output by this renderer. 
TableFooter_extraHtml_shortDescription=要附加到由呈现器输出的标记之后的额外 HTML。
#@EN@ Vertical Position
TableFooter_valign_displayName=垂直位置
#@EN@ Use the valign attribute to specify the vertical alignment for the   content of each cell in the column
TableFooter_valign_shortDescription=使用 valign 属性可指定列中每个单元格内容垂直对齐
#@EN@ Suppress Word Wrap
TableFooter_noWrap_displayName=禁止自动换行
#@EN@ Use the noWrap attribute to disable word wrapping of this column's   cells in visual browsers
TableFooter_noWrap_shortDescription=使用 noWrap 属性可禁止此列的单元格在可视浏览器中自动换行
#@EN@ Rows Spanned By the Cell
TableFooter_rowSpan_displayName=单元格所跨行数
#@EN@ The ROWSPAN attribute of TD specifies the number of rows that are  spanned by the cell
TableFooter_rowSpan_shortDescription=TD 的 ROWSPAN 属性指定单元格所跨越的行数
#@EN@ Mouse Out Script
TableFooter_onMouseOut_displayName=移开鼠标脚本
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
TableFooter_onMouseOut_shortDescription=将鼠标指针从此组件上方移开时执行的脚本代码。
#@EN@ Is Group Footer
TableFooter_groupFooter_displayName=组脚注
#@EN@ Flag indicating this component should render a group footer
TableFooter_groupFooter_shortDescription=该标志指示此组件应该呈现组脚注
#@EN@ Mouse In Script
TableFooter_onMouseOver_displayName=移入鼠标脚本
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
TableFooter_onMouseOver_shortDescription=当用户将鼠标指针移入此组件的边界内时执行的脚本代码。
#@EN@ Mouse Move Script
TableFooter_onMouseMove_displayName=移动鼠标脚本
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
TableFooter_onMouseMove_shortDescription=当用户将鼠标指针移动到组件上方时执行的脚本代码。
#@EN@ Visible
TableFooter_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
TableFooter_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ Key Down Script
TableFooter_onKeyDown_displayName=按下键脚本
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
TableFooter_onKeyDown_shortDescription=当组件具有焦点且用户按下某个键时执行的脚本代码。
#@EN@ Selector
Selector_displayName=选择器
#@EN@ Base component for UI components that allow the user to make a selection from  a set of options
Selector_shortDescription=  允许用户从一组选项中进行选择的 UI 组件的基本组件
#@EN@ Double Click Script
Selector_onDblClick_displayName=双击脚本
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
Selector_onDblClick_shortDescription=用鼠标双击此组件时执行的脚本代码。
#@EN@ Key Press Script
Selector_onKeyPress_displayName=按键脚本
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
Selector_onKeyPress_shortDescription=当组件具有焦点且用户按下并释放某个键时执行的脚本代码。
#@EN@ Text Selected Script
Selector_onSelect_displayName=文本选定脚本
#@EN@ Scripting code executed when some text in this  component value is selected. 
Selector_onSelect_shortDescription=当选定此组件值中的一些文本时执行的脚本代码。
#@EN@ Focus Script
Selector_onFocus_displayName=焦点脚本
#@EN@ Scripting code executed when this component  receives focus
Selector_onFocus_shortDescription=此组件获取焦点时执行的脚本代码。
#@EN@ Key Up Script
Selector_onKeyUp_displayName=释放键脚本
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
Selector_onKeyUp_shortDescription=当组件具有焦点且用户释放某个键时执行的脚本代码。
#@EN@ Mouse Up Script
Selector_onMouseUp_displayName=释放鼠标脚本
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
Selector_onMouseUp_shortDescription=当鼠标指针位于组件上且用户释放鼠标按钮时执行的脚本代码。
#@EN@ CSS Style Class(es)
Selector_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Selector_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Items
Selector_items_displayName=项
#@EN@ Specifies the options that the web application user can choose  from
Selector_items_shortDescription=指定 Web 应用程序用户可以从中进行选择的选项
#@EN@ CSS Style(s)
Selector_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Selector_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Click Script
Selector_onClick_displayName=单击脚本
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
Selector_onClick_shortDescription=用鼠标单击此组件时执行的脚本代码。
#@EN@ Blur Script
Selector_onBlur_displayName=模糊脚本
#@EN@ Scripting code executed when this element loses focus. 
Selector_onBlur_shortDescription=此元素失去焦点时执行的脚本代码。
#@EN@ Mouse Down Script
Selector_onMouseDown_displayName=按下鼠标脚本
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
Selector_onMouseDown_shortDescription=当鼠标指针位于组件上且用户按下鼠标按钮时执行的脚本代码。
#@EN@ Tool Tip
Selector_toolTip_displayName=工具提示
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
Selector_toolTip_shortDescription=为 HTML 元素设置 title 属性的值。如果将鼠标光标悬停在该 HTML 元素上，则指定的文本将作为工具提示进行显示。
#@EN@ Disabled
Selector_disabled_displayName=禁用
#@EN@ Flag indicating that the user is not permitted to activate this  component, and that the component's value will not be submitted with the  form. 
Selector_disabled_shortDescription=该标志指示不允许用户激活此组件，并且不会随表单一起提交该组件的值。
#@EN@ Mouse Out Script
Selector_onMouseOut_displayName=移开鼠标脚本
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
Selector_onMouseOut_shortDescription=将鼠标指针从此组件上方移开时执行的脚本代码。
#@EN@ Mouse In Script
Selector_onMouseOver_displayName=移入鼠标脚本
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
Selector_onMouseOver_shortDescription=当用户将鼠标指针移入此组件的边界内时执行的脚本代码。
#@EN@ Mouse Move Script
Selector_onMouseMove_displayName=移动鼠标脚本
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
Selector_onMouseMove_shortDescription=当用户将鼠标指针移动到组件上方时执行的脚本代码。
#@EN@ Selected
Selector_selected_displayName=选定
#@EN@ The object that represents the selections made from the  available options
Selector_selected_shortDescription=该对象表示从可用选项中选择的内容
#@EN@ Label
Selector_label_displayName=标签
#@EN@ If set, a label is rendered adjacent to the component with the  value of this attribute as the label text. 
Selector_label_shortDescription=如果设置此属性，则会在组件的旁边呈现一个标签，并将此属性的值作为标签文本。
#@EN@ Value Change Script
Selector_onChange_displayName=值更改脚本
#@EN@ Scripting code executed when the element  value of this component is changed. 
Selector_onChange_shortDescription=更改此组件的元素值时执行的脚本代码。
#@EN@ Visible
Selector_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
Selector_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ Key Down Script
Selector_onKeyDown_displayName=按下键脚本
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
Selector_onKeyDown_shortDescription=当组件具有焦点且用户按下某个键时执行的脚本代码。
#@EN@ Label Level
Selector_labelLevel_displayName=标签级别
#@EN@ Sets the style level for the generated label, provided the  label attribute has been set
Selector_labelLevel_shortDescription=为生成的标签设置样式级别，前提是已设置了 label 属性
#@EN@ Read-only
Selector_readOnly_displayName=只读
#@EN@ If this attribute is set to true, the value of the component is  rendered as text, preceded by the label if one was defined.   @deprecated The attribute is deprected starting from version 4.1 
Selector_readOnly_shortDescription=如果将此属性设置为 true，则组件的值将呈现为文本，并在前面显示标签（如果已定义）。@deprecated 此属性自版本 4.1 起已过时
#@EN@ Tab Index
Selector_tabIndex_displayName=Tab 键索引
#@EN@ Position of this element in the tabbing order of the current document
Selector_tabIndex_shortDescription=当使用 Tab 键依次浏览时，用于确定此元素在当前文档中所处的位置
#@EN@ Value
UIInput_value_displayName=值
#@EN@ The current value of this component
UIInput_value_shortDescription=此组件的当前值
#@EN@ Frame
Frame_displayName=框架
#@EN@ The Frame component is used inside a FrameSet component to denote a frame. 
Frame_shortDescription=在 FrameSet 组件内部使用框架组件来表示框架。
#@EN@ Tool Tip
Frame_toolTip_displayName=工具提示
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
Frame_toolTip_shortDescription=为 HTML 元素设置 title 属性的值。如果将鼠标光标悬停在该 HTML 元素上，则指定的文本将作为工具提示进行显示。
#@EN@ Rendered Flag
Frame_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Frame_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Component Identifier
Frame_id_displayName=组件标识符
#@EN@ The component identifier for this component
Frame_id_shortDescription=此组件的组件标识符
#@EN@ CSS Style Class(es)
Frame_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Frame_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Long Description
Frame_longDesc_displayName=详细描述
#@EN@ A URL to a long description of the frame contents
Frame_longDesc_shortDescription=指向框架内容详细描述的 URL
#@EN@ Margin Height
Frame_marginHeight_displayName=边距高度
#@EN@ Defines the top and bottom margins in the frame 
Frame_marginHeight_shortDescription=定义框架中的上边距和下边距 
#@EN@ No Resize
Frame_noResize_displayName=禁止调整大小
#@EN@ Set the value of the noResize attribute to &quot;true&quot; when  user   is not allowed to resize the frame. 
Frame_noResize_shortDescription=如果不允许用户调整框架大小，请将 noResize 属性的值设置为 &quot;true&quot;。
#@EN@ CSS Style(s)
Frame_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Frame_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Frame Border
Frame_frameBorder_displayName=框架边框
#@EN@ Set the value of the frameBorder attribute to &quot;true&quot; when a border is   needed around the frame. 
Frame_frameBorder_shortDescription=如果需要在框架周围显示边框，请将 frameBorder 属性的值设置为 &quot;true&quot;。
#@EN@ Scrolling
Frame_scrolling_displayName=滚动
#@EN@ Determines scrollbar action (valid values are: yes, no, auto) 
Frame_scrolling_shortDescription=确定滚动条操作（有效值为：是、否、自动） 
#@EN@ URL
Frame_url_displayName=URL
#@EN@ Defines the URL of the file to show in the frame. 
Frame_url_shortDescription=定义要在框架中显示的文件的 URL。
#@EN@ Margin Width
Frame_marginWidth_displayName=边距宽度
#@EN@ Defines the left and right margins in the frame 
Frame_marginWidth_shortDescription=定义框架中的左边距和右边距 
#@EN@ Name
Frame_name_displayName=名称
#@EN@ Defines a unique name for the frame (to use in scripts) 
Frame_name_shortDescription=定义框架的唯一名称（以便在脚本中使用） 
#@EN@ Property
Property_displayName=属性
#@EN@ The Property component was  written to be used within thePropertySheetSection component,  which is in turn used within the context of a PropertySheet  component
Property_shortDescription=编写的属性组件用于在 PropertySheetSection 组件内使用，而 PropertySheetSection 组件又在 PropertySheet 组件的上下文中使用
#@EN@ CSS Style Class(es)
Property_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Property_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Label
Property_label_displayName=标签
#@EN@ Use this attribute to specify the text of the label of this  property
Property_label_shortDescription=使用该属性可指定此属性的标签的文本
#@EN@ Disabled
Property_disabled_displayName=禁用
#@EN@ Flag indicating that the user is not permitted to activate this  component, and that the component's value will not be submitted with the  form. 
Property_disabled_shortDescription=该标志指示不允许用户激活此组件，并且不会随表单一起提交该组件的值。
#@EN@ Label Alignment
Property_labelAlign_displayName=标签对齐
#@EN@ Specifies the alignment for the property label
Property_labelAlign_shortDescription=指定属性标签的对齐方式
#@EN@ Visible
Property_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
Property_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ CSS Style(s)
Property_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Property_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Label No-Wrap
Property_noWrap_displayName=标签不换行
#@EN@ Specifies that the label should not wrap around to another line, if set to  true
Property_noWrap_shortDescription=如果设置为 true，则指定标签不应换到另一行
#@EN@ Rendered Flag
Property_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Property_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Overlap Label
Property_overlapLabel_displayName=与标签重叠
#@EN@ Specifies that the content of the property should occupy the label   area as well as the content area, if set to true
Property_overlapLabel_shortDescription=如果设置为 true，则指定属性的内容应占据标签区域以及内容区域
#@EN@ Component Identifier
Property_id_displayName=组件标识符
#@EN@ The component identifier for this component
Property_id_shortDescription=此组件的组件标识符
#@EN@ Help Text
Property_helpText_displayName=帮助文本
#@EN@ The text specified with this attribue is displayed below the content   of the property in a small font
Property_helpText_shortDescription=使用此属性指定的文本将以较小字体显示在属性内容下面
#@EN@ Content Area
ContentPageTitle_displayName=内容区域
#@EN@ The ContentPageTitle component is used to display a page title. 
ContentPageTitle_shortDescription=ContentPageTitle 组件用于显示页面标题。
#@EN@ CSS Style Class(es)
ContentPageTitle_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
ContentPageTitle_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Title
ContentPageTitle_title_displayName=标题
#@EN@ The text to display as the page title. 
ContentPageTitle_title_shortDescription=显示为页面标题的文本。
#@EN@ Separator
ContentPageTitle_separator_displayName=分隔符
#@EN@ Indicates that the page title separator should be displayed, when set   to true
ContentPageTitle_separator_shortDescription=如果设置为 true，则指示应该显示页面标题分隔符
#@EN@ Visible
ContentPageTitle_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
ContentPageTitle_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ CSS Style(s)
ContentPageTitle_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
ContentPageTitle_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Rendered Flag
ContentPageTitle_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
ContentPageTitle_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Component Identifier
ContentPageTitle_id_displayName=组件标识符
#@EN@ The component identifier for this component
ContentPageTitle_id_shortDescription=此组件的组件标识符
#@EN@ Help Text
ContentPageTitle_helpText_displayName=帮助文本
#@EN@ The help text to display just below the page title. 
ContentPageTitle_helpText_shortDescription=紧靠页面标题下面显示的帮助文本。
#@EN@ Calendar Month
CalendarMonth_displayName=日历月份
#@EN@ NOT FOR DEVELOPER USE - base renderer class for ui:calendar and ui:scheduler  Do not release as API. 
CalendarMonth_shortDescription=不适于开发者使用 - ui:calendar 和 ui:scheduler 的基本呈现器类不作为 API 发布。
#@EN@ dateFormatPattern
CalendarMonth_dateFormatPattern_displayName=dateFormatPattern
#@EN@ Return the locale dependent date format pattern.  If the parent DateManager has a non null dateFormatPattern  attribute, return that value.  If not, derive the date format pattern from a SimpleDateFormat  instance using the &quot;SHORT&quot; pattern
CalendarMonth_dateFormatPattern_shortDescription=返回与语言环境相关的日期格式模式。如果父 DateManager 具有非空的 dateFormatPattern 属性，则返回该值。否则，使用 &quot;SHORT&quot; 模式从 SimpleDateFormat 实例中派生日期格式模式
#@EN@ HTML Template
CalendarMonth_htmlTemplate_displayName=HTML 模板
#@EN@ Alternative HTML template to be used by this component. 
CalendarMonth_htmlTemplate_shortDescription=此组件使用的替代 HTML 模板。
#@EN@ timeZone
CalendarMonth_timeZone_displayName=timeZone
#@EN@ Return the TimeZone object for this CalendarMonth.  If the parent is a DateManager, return its TimeZone  property, else return the time zone from a java.util.Calendar  based on the locale. 
CalendarMonth_timeZone_shortDescription=返回此 CalendarMonth 的 TimeZone 对象。如果父项是 DateManager，则返回其 TimeZone 属性，否则，基于语言环境从 java.util.Calendar 中返回时区。
#@EN@ Popup Version
CalendarMonth_popup_displayName=弹出式版本
#@EN@ Flag determining whether the component should be rendered in its  popup version (as used by Calendar), or in the  inline version used by Scheduler. 
CalendarMonth_popup_shortDescription=该标志确定组件应该在弹出式版本（由日历使用）中呈现，还是在调度程序使用的内联版本中呈现。
#@EN@ Value
UIOutput_value_displayName=值
#@EN@ The current value of this component
UIOutput_value_shortDescription=此组件的当前值
#@EN@ Converter
UIOutput_converter_displayName=转换器
#@EN@ Converter instance registered with this component.
UIOutput_converter_shortDescription=与此组件一起注册的转换器实例。
#@EN@ Rendered Flag
UIOutput_rendered_displayName=呈现标志
#@EN@ Indicates whether the HTML code for the component should be included in the rendered HTML page
UIOutput_rendered_shortDescription=指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Component Identifier
UIOutput_id_displayName=组件标识符
#@EN@ This component's unique identifier
UIOutput_id_shortDescription=此组件的唯一标识符
#@EN@ Bubble Help
Bubble_displayName=气泡式帮助
#@EN@ The Bubble component is used to create a popup help window. 
Bubble_shortDescription=用于创建弹出式帮助窗口的气泡组件。
#@EN@ HTML Template
Bubble_htmlTemplate_displayName=HTML 模板
#@EN@ Alternative HTML template to be used by this component. 
Bubble_htmlTemplate_shortDescription=此组件使用的替代 HTML 模板。
#@EN@ Open Delay
Bubble_openDelay_displayName=打开延迟
#@EN@ Use the openDelay attribute to put a delay in ms before opening the bubble. 
Bubble_openDelay_shortDescription=使用 openDelay 属性可设置在打开气泡之前的延迟时间（以毫秒为单位）。
#@EN@ CSS Style Class(es)
Bubble_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Bubble_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Buuble Width
Bubble_width_displayName=气泡宽度
#@EN@ Number of pixels for the width of the bubble help window
Bubble_width_shortDescription=为气泡式帮助窗口指定宽度（以像素为单位）
#@EN@ Title
Bubble_title_displayName=标题
#@EN@ Text for popup help title
Bubble_title_shortDescription=弹出式帮助标题的文本
#@EN@ Auto Close
Bubble_autoClose_displayName=自动关闭
#@EN@ Use the autoClose attribute to close the bubble help automatically  
Bubble_autoClose_shortDescription=使用 autoClose 属性可自动关闭气泡式帮助
#@EN@ Visible
Bubble_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
Bubble_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ CSS Style(s)
Bubble_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Bubble_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Close Button
Bubble_closeButton_displayName=“关闭”按钮
#@EN@ Use the closeButton attribute to display close button for bubble
Bubble_closeButton_shortDescription=使用 closeButton 属性可为气泡显示“关闭”按钮
#@EN@ Duration for AutoClose
Bubble_duration_displayName=自动关闭的持续时间
#@EN@ Number of milli seconds after which popup help window should close.  The default is 2000
Bubble_duration_shortDescription=指定弹出式帮助窗口应在此时间后关闭（以毫秒为单位）。缺省值为 2000
#@EN@ Converter
WebuiOutput_converter_displayName=转换器
#@EN@ The converter attribute is used to specify a method to translate native  property values to String and back for this component
WebuiOutput_converter_shortDescription=converter 属性用于指定一个转换方法，以便为此组件实现自身属性值与 String 属性值之间的转换
#@EN@ Rendered Flag
WebuiOutput_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
WebuiOutput_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Component Identifier
WebuiOutput_id_displayName=组件标识符
#@EN@ The component identifier for this component
WebuiOutput_id_shortDescription=此组件的组件标识符
#@EN@ Common Task
CommonTask_displayName=常见任务
#@EN@ The CommonTask component is used to greate a single task within  a CommonTasksSection or CommonTasksGroup component. 
CommonTask_shortDescription=CommonTask 组件用于在 CommonTasksSection 或 CommonTasksGroup 组件内创建单个任务。
#@EN@ Double Click Script
CommonTask_onDblClick_displayName=双击脚本
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
CommonTask_onDblClick_shortDescription=用鼠标双击此组件时执行的脚本代码。
#@EN@ Title
CommonTask_title_displayName=标题
#@EN@ Title
CommonTask_title_shortDescription=标题
#@EN@ Key Press Script
CommonTask_onKeyPress_displayName=按键脚本
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
CommonTask_onKeyPress_shortDescription=当组件具有焦点且用户按下并释放某个键时执行的脚本代码。
#@EN@ Target
CommonTask_target_displayName=目标
#@EN@ The resource at the specified URL is displayed in the frame that is   specified with the target attribute
CommonTask_target_shortDescription=位于指定 URL 的资源将显示在使用 target 属性指定的框架中
#@EN@ Focus Script
CommonTask_onFocus_displayName=焦点脚本
#@EN@ Scripting code executed when this component  receives focus
CommonTask_onFocus_shortDescription=此组件获取焦点时执行的脚本代码。
#@EN@ infoTitle
CommonTask_infoTitle_displayName=infoTitle
#@EN@ Specify the title text to be displayed in the information panel for this task
CommonTask_infoTitle_shortDescription=指定在此任务的信息面板中显示的标题文本
#@EN@ Key Up Script
CommonTask_onKeyUp_displayName=释放键脚本
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
CommonTask_onKeyUp_shortDescription=当组件具有焦点且用户释放某个键时执行的脚本代码。
#@EN@ Mouse Up Script
CommonTask_onMouseUp_displayName=释放鼠标脚本
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
CommonTask_onMouseUp_shortDescription=当鼠标指针位于组件上且用户释放鼠标按钮时执行的脚本代码。
#@EN@ CSS Style Class(es)
CommonTask_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
CommonTask_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ icon
CommonTask_icon_displayName=icon
#@EN@ Specify a theme key for an image to be displayed in front of the text for  the task
CommonTask_icon_shortDescription=指定在任务文本前面显示的图像的主题键
#@EN@ CSS Style(s)
CommonTask_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
CommonTask_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Click Script
CommonTask_onClick_displayName=单击脚本
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
CommonTask_onClick_shortDescription=用鼠标单击此组件时执行的脚本代码。
#@EN@ infoLinkText
CommonTask_infoLinkText_displayName=infoLinkText
#@EN@ Specify the text for the link that is displayed at the bottom of the task's information  panel
CommonTask_infoLinkText_shortDescription=指定在任务的信息面板底部显示的链接文本
#@EN@ Blur Script
CommonTask_onBlur_displayName=模糊脚本
#@EN@ Scripting code executed when this element loses focus. 
CommonTask_onBlur_shortDescription=此元素失去焦点时执行的脚本代码。
#@EN@ Tool Tip
CommonTask_toolTip_displayName=工具提示
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
CommonTask_toolTip_shortDescription=为 HTML 元素设置 title 属性的值。如果将鼠标光标悬停在该 HTML 元素上，则指定的文本将作为工具提示进行显示。
#@EN@ Mouse Down Script
CommonTask_onMouseDown_displayName=按下鼠标脚本
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
CommonTask_onMouseDown_shortDescription=当鼠标指针位于组件上且用户按下鼠标按钮时执行的脚本代码。
#@EN@ Value
CommonTask_value_displayName=值
#@EN@ The current value of this component
CommonTask_value_shortDescription=此组件的当前值
#@EN@ imageHeight
CommonTask_imageHeight_displayName=imageHeight
#@EN@ Specify the height in pixels of the image that is specified with the imageUrl attribute   
CommonTask_imageHeight_shortDescription=指定使用 imageUrl 属性指定的图像的高度（以像素为单位）
#@EN@ imageURL
CommonTask_imageUrl_displayName=imageURL
#@EN@ The path to an image to be displayed in front of the text   for the task
CommonTask_imageUrl_shortDescription=在任务文本前面显示的图像的路径
#@EN@ Disabled
CommonTask_disabled_displayName=禁用
#@EN@ Disabled
CommonTask_disabled_shortDescription=禁用
#@EN@ Mouse Out Script
CommonTask_onMouseOut_displayName=移开鼠标脚本
#@EN@ Scripting code executed when the user moves the mouse pointer off this component. 
CommonTask_onMouseOut_shortDescription=当用户将鼠标指针从此组件上移开时执行的脚本代码。
#@EN@ Mouse In Script
CommonTask_onMouseOver_displayName=移入鼠标脚本
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
CommonTask_onMouseOver_shortDescription=当用户将鼠标指针移入此组件的边界内时执行的脚本代码。
#@EN@ infoText
CommonTask_infoText_displayName=infoText
#@EN@ Specify the text to be displayed in the information panel for this task
CommonTask_infoText_shortDescription=指定在此任务的信息面板中显示的文本
#@EN@ Mouse Move Script
CommonTask_onMouseMove_displayName=移动鼠标脚本
#@EN@ Scripting code executed when the user moves the mouse pointer while  it is over the component. 
CommonTask_onMouseMove_shortDescription=当用户将鼠标指针移动到组件上方时执行的脚本代码。
#@EN@ text
CommonTask_text_displayName=文本
#@EN@ The text to be displayed for the task. 
CommonTask_text_shortDescription=为任务显示的文本。
#@EN@ imageWidth
CommonTask_imageWidth_displayName=imageWidth
#@EN@ Specify the width in pixels of the image that is specified with the imageUrl attribute.   
CommonTask_imageWidth_shortDescription=指定使用 imageUrl 属性指定的图像的宽度（以像素为单位）。
#@EN@ Immediate
CommonTask_immediate_displayName=立即
#@EN@ Flag indicating that event handling for this component should be handled  immediately (in Apply Request Values phase) rather than waiting until   Invoke Application phase. 
CommonTask_immediate_shortDescription=该标志指示应该立即执行此组件的事件处理（在“应用请求值”阶段），而不是一直等到“调用应用程序”阶段。
#@EN@ Visible
CommonTask_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
CommonTask_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ infoLinkUrl
CommonTask_infoLinkUrl_displayName=infoLinkUrl
#@EN@ Specify the URL for the link that is displayed at the bottom of the task's   information panel.   
CommonTask_infoLinkUrl_shortDescription=指定在任务的信息面板底部显示的链接 URL。
#@EN@ Key Down Script
CommonTask_onKeyDown_displayName=按下键脚本
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
CommonTask_onKeyDown_shortDescription=当组件具有焦点且用户按下某个键时执行的脚本代码。
#@EN@ Tab Index
CommonTask_tabIndex_displayName=Tab 键索引
#@EN@ Position of this element in the tabbing order of the current document
CommonTask_tabIndex_shortDescription=当使用 Tab 键依次浏览时，用于确定此元素在当前文档中所处的位置
#@EN@ actionListener
WebuiCommand_actionListener_displayName=actionListener
#@EN@ {@inheritDoc} 
WebuiCommand_actionListener_shortDescription={@inheritDoc} 
#@EN@ action
WebuiCommand_action_displayName=操作
#@EN@ {@inheritDoc} 
WebuiCommand_action_shortDescription={@inheritDoc} 
#@EN@ Action Expression
WebuiCommand_actionExpression_displayName=操作表达式
#@EN@ MethodExpression representing the application action to invoke when this  component is activated by the user
WebuiCommand_actionExpression_shortDescription=方法表达式，用于表示在用户激活此组件时要调用的应用程序操作
#@EN@ Action Listener Expression
WebuiCommand_actionListenerExpression_displayName=操作侦听程序表达式
#@EN@ Use the actionListenerExpression attribute to cause the component to fire  an event
WebuiCommand_actionListenerExpression_shortDescription=使用 actionListenerExpression 属性可促使组件触发一个事件
#@EN@ Rendered Flag
WebuiCommand_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
WebuiCommand_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Component Identifier
WebuiCommand_id_displayName=组件标识符
#@EN@ The component identifier for this component
WebuiCommand_id_shortDescription=此组件的组件标识符
#@EN@ Iframe
IFrame_displayName=Iframe
#@EN@ The Iframe component is used to create an inline frame. 
IFrame_shortDescription=Iframe 组件用于创建内联框架。
#@EN@ Width
IFrame_width_displayName=宽度
#@EN@ Defines the width of the iframe in pixels or as a percentage of it's   container 
IFrame_width_shortDescription=定义 iframe 的宽度，以像素为单位进行定义或定义为占据容器的百分比 
#@EN@ Height
IFrame_height_displayName=高度
#@EN@ Defines the height of the iframe in pixels or as a percentage of it's   container 
IFrame_height_shortDescription=定义 iframe 的高度，以像素为单位进行定义或定义为占据容器的百分比 
#@EN@ Align
IFrame_align_displayName=对齐
#@EN@ Specifies how to align the iframe according to the surrounding text
IFrame_align_shortDescription=指定根据周围文本对齐 iframe 的方式
#@EN@ No Resize
IFrame_noResize_displayName=禁止调整大小
#@EN@ Set the value of the noResize attribute to &quot;true&quot; when  user   is not allowed to resize the frame. 
IFrame_noResize_shortDescription=如果不允许用户调整框架大小，请将 noResize 属性的值设置为 &quot;true&quot;。
#@EN@ Rendered Flag
IFrame_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
IFrame_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Component Identifier
IFrame_id_displayName=组件标识符
#@EN@ The component identifier for this component
IFrame_id_shortDescription=此组件的组件标识符
#@EN@ File Chooser
FileChooser_displayName=文件选择器
#@EN@ The FileChooser component allows the user to select files and folders. 
FileChooser_shortDescription=用户可以使用 FileChooser 组件来选择文件和文件夹。
#@EN@ Lookin
FileChooser_lookin_displayName=查找范围
#@EN@ Use this attribute to specify the initial folder to display in the  Look In text field
FileChooser_lookin_shortDescription=使用此属性可指定在“查找范围”文本字段中显示初始文件夹
#@EN@ Value
FileChooser_value_displayName=值
#@EN@ The current value of this component
FileChooser_value_shortDescription=此组件的当前值
#@EN@ Rows
FileChooser_rows_displayName=行数
#@EN@ The number of items to display in the listbox
FileChooser_rows_shortDescription=要在列表框中显示的项数
#@EN@ Required
FileChooser_required_displayName=必需
#@EN@ Flag indicating that an input value for this field is mandatory, and   failure to provide one will trigger a validation error. 
FileChooser_required_shortDescription=该标志指示此字段的输入值是必需的，如果未提供输入值，则会触发一个验证错误。
#@EN@ Multiple
FileChooser_multiple_displayName=多个
#@EN@ Set multiple to true to allow multiple files or folders  to be selected from the list
FileChooser_multiple_shortDescription=将 multiple 设置为 true 可允许从列表选择多个文件或文件夹
#@EN@ Disabled
FileChooser_disabled_displayName=禁用
#@EN@ Indicates  that activation of this component by the user is not   currently permitted. 
FileChooser_disabled_shortDescription=该标志指示当前不允许用户激活此组件。
#@EN@ Descending
FileChooser_descending_displayName=降序
#@EN@ Set this attribute to true to sort from the highest value to lowest value,  such as Z-A for alphabetic, or largest file to smallest for sorting  on file size
FileChooser_descending_shortDescription=将此属性设置为 true 可按从最高值到最低值的顺序进行排序，如按字母顺序 Z-A 进行排序，或按文件大小从最大文件到最小文件进行排序
#@EN@ CSS Style Class(es)
FileChooser_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this  component is rendered. 
FileChooser_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Selected
FileChooser_selected_displayName=选定
#@EN@ The selected file(s) or folder(s) name.
FileChooser_selected_shortDescription=选定文件或文件夹的名称。
#@EN@ Folder Chooser
FileChooser_folderChooser_displayName=文件夹选择器
#@EN@ Use this attribute to configure the file chooser as a folder chooser.  Set the value to true for a folder chooser or false for a file  chooser
FileChooser_folderChooser_shortDescription=使用此属性可将文件选择器配置为文件夹选择器。对于文件夹选择器，请将其值设置为 true；对于文件选择器，请将其值设置为 false
#@EN@ Visible
FileChooser_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
FileChooser_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ CSS Style(s)
FileChooser_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this  component is rendered. 
FileChooser_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Model
FileChooser_model_displayName=模型
#@EN@ The model associated with the filechooser
FileChooser_model_shortDescription=与 fileChooser 关联的模型
#@EN@ Read-only
FileChooser_readOnly_displayName=只读
#@EN@ If readOnly is set to true, the value of the component is  rendered as text, preceded by the label if one was defined. 
FileChooser_readOnly_shortDescription=如果将 readOnly 设置为 true，则组件的值将呈现为文本，并在前面显示标签（如果已定义）。
#@EN@ Sort Field
FileChooser_sortField_displayName=排序字段
#@EN@ Field to use to sort the list of files
FileChooser_sortField_shortDescription=用于对文件列表进行排序的字段
#@EN@ Tab Index
FileChooser_tabIndex_displayName=Tab 键索引
#@EN@ Position of this element in the tabbing order of the current document.  Tabbing order determines the sequence in which elements receive  focus when the tab key is pressed
FileChooser_tabIndex_shortDescription=当使用 Tab 键依次浏览时，用于确定此元素在当前文档中所处的位置。Tab 键浏览顺序确定了按下 Tab 键时元素获取焦点的顺序
#@EN@ File Upload
Upload_displayName=文件上载
#@EN@ The Upload component relies on the   {@link com.sun.webui.jsf.util.UploadFilter} and other  upload filter classes to upload the file from the client to the  server.    The file is uploaded in the request by the presence of an   HTML input element, rendered by the  UploadRenderer.      There is a problem processing errors
Upload_shortDescription=上载组件依据 {@link com.sun.webui.jsf.util.UploadFilter} 和其他上载过滤器类，将文件由客户端上载至服务器。文件是按照 HTML 输入元素状态的请求进行上载的，由 UploadRenderer 呈现。处理错误时出现问题
#@EN@ Maximum Length
Upload_maxLength_displayName=最大长度
#@EN@ The maximum number of characters that can be entered for this field. 
Upload_maxLength_shortDescription=可在此字段中输入的最多字符数。
#@EN@ Text
Upload_text_displayName=text
#@EN@ Literal value to be rendered in this input field.  If this property is specified by a value binding  expression, the corresponding value will be updated  if validation succeeds. 
Upload_text_shortDescription=在此输入字段中呈现的文字值。如果此属性是由值绑定表达式指定的，并且验证成功，则会更新相应的值。
#@EN@ Uploaded File
Upload_uploadedFile_displayName=上载的文件
#@EN@ The value of this attribute must be a JSF EL expression, and  it must resolve to an object of type  com.sun.webui.jsf.model.UploadedFile
Upload_uploadedFile_shortDescription=此属性的值必须为 JSF EL 表达式，并且其结果必须是类型为 com.sun.webui.jsf.model.UploadedFile 的对象
#@EN@ Converter
Upload_converter_displayName=转换器
#@EN@ The converter attribute is used to specify a method to translate native  property values to String and back for this component
Upload_converter_shortDescription=converter 属性用于指定一个转换方法，以便为此组件实现自身属性值与 String 属性值之间的转换
#@EN@ Trim
Upload_trim_displayName=截除
#@EN@ Flag indicating that any leading and trailing blanks will be  trimmed prior to conversion to the destination data type.  Default value is true. 
Upload_trim_shortDescription=该标志指示在转换为目标数据类型之前截除所有前导空格和结尾空格。缺省值为 true。
#@EN@ Required
Upload_required_displayName=必需
#@EN@ Flag indicating that an input value for this field is mandatory, and   failure to provide one will trigger a validation error. 
Upload_required_shortDescription=该标志指示此字段的输入值是必需的，如果未提供输入值，则会触发一个验证错误。
#@EN@ Columns
Upload_columns_displayName=列
#@EN@ Number of character character columns used to render this  field
Upload_columns_shortDescription=用于呈现此字段的字符列数
#@EN@ Preserve Path
Upload_preservePath_displayName=保留路径
#@EN@ If preservePath is true the upload   component will preserve the literal value of the file input element   as set by the user on the client.    Different browsers handle the value of an HTML input element   of type &quot;file&quot; differently
Upload_preservePath_shortDescription=如果 preservePath 为 true，则上载组件将保留客户端上用户设置的文件输入元素的文字值。不同的浏览器采用不同的方式处理 &quot;file&quot; 类型的 HTML 输入元素值
#@EN@ Group Panel
PanelGroup_displayName=组面板
#@EN@ The PanelGroup component is used to arrange a group of components. 
PanelGroup_shortDescription=PanelGroup 组件用于排列一组组件。
#@EN@ CSS Style Class(es)
PanelGroup_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
PanelGroup_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Separator
PanelGroup_separator_displayName=分隔符
#@EN@ The string of characters or HTML element that should be inserted between each  component that is a child of this component
PanelGroup_separator_shortDescription= 在此组件的子组件之间应插入的字符串或 HTML 元素
#@EN@ Visible
PanelGroup_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
PanelGroup_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ CSS Style(s)
PanelGroup_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
PanelGroup_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Rendered Flag
PanelGroup_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
PanelGroup_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Component Identifier
PanelGroup_id_displayName=组件标识符
#@EN@ The component identifier for this component
PanelGroup_id_shortDescription=此组件的组件标识符
#@EN@ Block
PanelGroup_block_displayName=块
#@EN@ By default, the panelGroup component is rendered on the same  line as the component that comes before it and the component  that follows, in a flow layout
PanelGroup_block_shortDescription=缺省情况下，panelGroup 组件与流布局中其前面和后面的组件呈现在同一行上
#@EN@ Image
ImageComponent_displayName=图像
#@EN@ The ImageComponent is used to display in inline graphic image
ImageComponent_shortDescription=图像组件用于显示内联图形图像
#@EN@ Double Click Script
ImageComponent_onDblClick_displayName=双击脚本
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
ImageComponent_onDblClick_shortDescription=用鼠标双击此组件时执行的脚本代码。
#@EN@ Width
ImageComponent_width_displayName=宽度
#@EN@ Image width override
ImageComponent_width_shortDescription=图像所覆盖的宽度
#@EN@ Rendered Flag
ImageComponent_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
ImageComponent_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Component Identifier
ImageComponent_id_displayName=组件标识符
#@EN@ The component identifier for this component
ImageComponent_id_shortDescription=此组件的组件标识符
#@EN@ Mouse Up Script
ImageComponent_onMouseUp_displayName=释放鼠标脚本
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
ImageComponent_onMouseUp_shortDescription=当鼠标指针位于组件上且用户释放鼠标按钮时执行的脚本代码。
#@EN@ CSS Style Class(es)
ImageComponent_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
ImageComponent_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Height
ImageComponent_height_displayName=高度
#@EN@ Image height override
ImageComponent_height_shortDescription=图像所覆盖的高度
#@EN@ Icon
ImageComponent_icon_displayName=图标
#@EN@ The identifier of the desired theme image. 
ImageComponent_icon_shortDescription=所需主题图像的标识符。
#@EN@ Align
ImageComponent_align_displayName=对齐
#@EN@ Specifies the position of the image with respect to its context.  Valid values are: bottom (the default); middle; top; left; right. 
ImageComponent_align_shortDescription=指定图像相对于其上下文的位置。有效值为：底部对齐（缺省值）、中部、顶部对齐、左对齐和右对齐。
#@EN@ Vertical Space
ImageComponent_vspace_displayName=垂直间距
#@EN@ Specifies the amount of white space in pixels to be inserted above and  below the image
ImageComponent_vspace_shortDescription=指定插入到图像上面和下面的空白区域的大小（以像素为单位）
#@EN@ CSS Style(s)
ImageComponent_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
ImageComponent_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Border
ImageComponent_border_displayName=边框
#@EN@ Specifies the width of the img border in pixels.  The default value for this attribute depends on the web browser. 
ImageComponent_border_shortDescription=指定图像边框的宽度（以像素为单位）。此属性的缺省值取决于 Web 浏览器。
#@EN@ Url
ImageComponent_url_displayName=Url
#@EN@ Absolute or relative URL to the image to be rendered. 
ImageComponent_url_shortDescription=要呈现的图像的绝对或相对 URL。
#@EN@ Click Script
ImageComponent_onClick_displayName=单击脚本
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
ImageComponent_onClick_shortDescription=用鼠标单击此组件时执行的脚本代码。
#@EN@ Mouse Down Script
ImageComponent_onMouseDown_displayName=按下鼠标脚本
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
ImageComponent_onMouseDown_shortDescription=当鼠标指针位于组件上且用户按下鼠标按钮时执行的脚本代码。
#@EN@ Tool Tip
ImageComponent_toolTip_displayName=工具提示
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
ImageComponent_toolTip_shortDescription=为 HTML 元素设置 title 属性的值。如果将鼠标光标悬停在该 HTML 元素上，则指定的文本将作为工具提示进行显示。
#@EN@ Value
ImageComponent_value_displayName=值
#@EN@ The current value of this component
ImageComponent_value_shortDescription=此组件的当前值
#@EN@ Mouse Out Script
ImageComponent_onMouseOut_displayName=移开鼠标脚本
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
ImageComponent_onMouseOut_shortDescription=将鼠标指针从此组件上方移开时执行的脚本代码。
#@EN@ Alt Text
ImageComponent_alt_displayName=替代文本
#@EN@ Alternative textual description of the image rendered by this  component
ImageComponent_alt_shortDescription=此组件呈现的图像的替代文本描述
#@EN@ Mouse In Script
ImageComponent_onMouseOver_displayName=移入鼠标脚本
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
ImageComponent_onMouseOver_shortDescription=当用户将鼠标指针移入此组件的边界内时执行的脚本代码。
#@EN@ Mouse Move Script
ImageComponent_onMouseMove_displayName=移动鼠标脚本
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
ImageComponent_onMouseMove_shortDescription=当用户将鼠标指针移动到组件上方时执行的脚本代码。
#@EN@ HTML Template
ImageComponent_htmlTemplate_displayName=HTML 模板
#@EN@ Alternative HTML template to be used by this component. 
ImageComponent_htmlTemplate_shortDescription=此组件使用的替代 HTML 模板。
#@EN@ Long Description
ImageComponent_longDesc_displayName=详细描述
#@EN@ A verbose description of this image. 
ImageComponent_longDesc_shortDescription=此图像的详细描述。
#@EN@ Horizontal Space
ImageComponent_hspace_displayName=水平间距
#@EN@ Specifies the amount of white space in pixels to be inserted to the  left and right of the image
ImageComponent_hspace_shortDescription=指定插入到图像左侧和右侧的空白区域的大小（以像素为单位）
#@EN@ Visible
ImageComponent_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
ImageComponent_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ Head
Head_displayName=头标
#@EN@ The Head component is used to provide information to be used in the head   element. 
Head_shortDescription=头标组件用于提供在头标元素中使用的信息。
#@EN@ Enable Dojo Debugging
Head_debug_displayName=启用 Dojo 调试
#@EN@ Flag (true or false) indicating that Dojo debugging is enabled
Head_debug_shortDescription=该标志（true 或 false）指示是否启用 Dojo 调试
#@EN@ Ajaxify
Head_ajaxify_displayName=Ajaxify
#@EN@ Flag indicating to turn off default Ajax functionality
Head_ajaxify_shortDescription=该标志指示关闭缺省的 Ajax 功能
#@EN@ title
Head_title_displayName=title
#@EN@ Title of the document to be displayed in the browser title bar. 
Head_title_shortDescription=要在浏览器标题栏中显示的文档标题。
#@EN@ Rendered Flag
Head_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Head_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Include Component JavaScript
Head_javaScript_displayName=包含组件 JavaScript
#@EN@ Flag (true or false) indicating that component JavaScript should be   output in page
Head_javaScript_shortDescription=该标志（true 或 false）指示组件 JavaScript 是否应在页面中输出
#@EN@ Profile
Head_profile_displayName=配置文件
#@EN@ A space separated list of URL's that contains meta data information   about the page 
Head_profile_shortDescription=URL 的以空格分隔的列表，包含有关页面的元数据信息 
#@EN@ Component Identifier
Head_id_displayName=组件标识符
#@EN@ The component identifier for this component
Head_id_shortDescription=此组件的组件标识符
#@EN@ Default Base
Head_defaultBase_displayName=缺省 Base 标记
#@EN@ Flag (true or false) indicating that a default html base tag should be  shown or not
Head_defaultBase_shortDescription=该标志（true 或 false）指示是否应显示缺省 html base 标记
#@EN@ Render Meta Data
Head_meta_displayName=呈现元数据
#@EN@ Flag (true or false) indicating if meta data should be rendered
Head_meta_shortDescription=该标志（true 或 false）指示是否呈现元数据
#@EN@ Scheduler
Scheduler_displayName=日程安排
#@EN@ The Scheduler component is used to display a calendar and the input controls  that are used for selecting a date and time. 
Scheduler_shortDescription=日程安排组件用于显示日历和输入控件以便从中选择日期和时间。
#@EN@ Repeat Interval Label
Scheduler_repeatIntervalLabel_displayName=“重复时间间隔”标签
#@EN@ Override the default value of the label for the repeat  interval menu. 
Scheduler_repeatIntervalLabel_shortDescription=覆盖“重复时间间隔”菜单标签的缺省值。
#@EN@ Repeat Interval Menu Items
Scheduler_repeatIntervalItems_displayName=“重复时间间隔”菜单项
#@EN@ Override the items that appear on the repeat interval menu
Scheduler_repeatIntervalItems_shortDescription=覆盖“重复时间间隔”菜单上显示的项
#@EN@ Required Legend
Scheduler_requiredLegend_displayName=必需图例
#@EN@ Flag indicating if the &quot;* indicates required field&quot; message should be  displayed - default value is true. 
Scheduler_requiredLegend_shortDescription=该标志指示是否应该显示“* 表示必填字段”消息 - 缺省值为 true。
#@EN@ Date Format Pattern Help
Scheduler_dateFormatPatternHelp_displayName=日期格式模式帮助
#@EN@ A message below the text field for the date, indicating the  string format to use when entering a date as text into the  Start Date text field.      The component internally relies on an instance of  java.text.SimpleDateFormat to produce the hint
Scheduler_dateFormatPatternHelp_shortDescription=日期文本字段下面的消息，指示在“开始日期”文本字段中将日期作为文本进行输入时使用的字符串格式。该组件在内部依靠 java.text.SimpleDateFormat 实例来生成提示
#@EN@ First selectable date
Scheduler_minDate_displayName=可选择的第一个日期
#@EN@ The first selectable date.
Scheduler_minDate_shortDescription=可选择的第一个日期。
#@EN@ Show End Time
Scheduler_endTime_displayName=显示结束时间
#@EN@ Flag indicating that an input field for the end time should be  shown
Scheduler_endTime_shortDescription=该标志指示应该显示结束时间的输入字段
#@EN@ Date Format Pattern
Scheduler_dateFormatPattern_displayName=日期格式模式
#@EN@ The date format pattern to use (e.g., yyyy-MM-dd).
Scheduler_dateFormatPattern_shortDescription=使用的日期格式模式（如 yyyy-MM-dd）。
#@EN@ Start Time Label
Scheduler_startTimeLabel_displayName=“开始时间”标签
#@EN@ This text replaces the &quot;Start Time&quot; label. 
Scheduler_startTimeLabel_shortDescription=此文本将替换“开始时间”标签。
#@EN@ Last selectable date
Scheduler_maxDate_displayName=可选择的最后一个日期
#@EN@ The last selectable date.
Scheduler_maxDate_shortDescription=可选择的最后一个日期。
#@EN@ CSS Style Class(es)
Scheduler_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Scheduler_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ CSS Style(s)
Scheduler_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Scheduler_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Show Start Time
Scheduler_startTime_displayName=显示开始时间
#@EN@ Flag indicating that an input field for the start time should be  shown
Scheduler_startTime_shortDescription=该标志指示应该显示开始时间的输入字段
#@EN@ Repeating Events
Scheduler_repeating_displayName=重复事件
#@EN@ Flag indicating that a control for scheduling a repeated event  should be shown
Scheduler_repeating_shortDescription=该标志指示应该显示用于安排重复事件的控件
#@EN@ Time Zone
Scheduler_timeZone_displayName=时区
#@EN@ The java.util.TimeZone used with this  component
Scheduler_timeZone_shortDescription=用于此组件的 java.util.TimeZone
#@EN@ Value
Scheduler_value_displayName=值
#@EN@ The current value of this component. 
Scheduler_value_shortDescription=此组件的当前值。
#@EN@ End Time Label
Scheduler_endTimeLabel_displayName=“结束时间”标签
#@EN@ This text replaces the &quot;End Time&quot; label. 
Scheduler_endTimeLabel_shortDescription=此文本将替换“结束时间”标签。
#@EN@ Converter
Scheduler_converter_displayName=转换器
#@EN@ The converter attribute is used to specify a method to translate native  property values to String and back for this component
Scheduler_converter_shortDescription=converter 属性用于指定一个转换方法，以便为此组件实现自身属性值与 String 属性值之间的转换
#@EN@ Required
Scheduler_required_displayName=必需
#@EN@ Flag indicating that the user must enter a value for this Scheduler.  Default value is true. 
Scheduler_required_shortDescription=该标志指示用户必须为此日程安排输入一个值。缺省值为 true。
#@EN@ Disabled
Scheduler_disabled_displayName=禁用
#@EN@ Standard HTML attribute which determines whether the web  application user can change the the value of this component.  NOT YET IMPLEMENTED. 
Scheduler_disabled_shortDescription=该标准 HTML 属性用于确定 Web 应用程序用户能否更改此组件的值。尚未实现。
#@EN@ Limit Repeating Events
Scheduler_limitRepeating_displayName=限制重复事件
#@EN@ Flag indicating that a control for setting a limit for repeating  events should be shown
Scheduler_limitRepeating_shortDescription=该标志指示应该显示用于为重复事件设置限制的控件
#@EN@ Preview Button
Scheduler_previewButton_displayName=“预览”按钮
#@EN@ Flag indicating that the &quot;Preview in Browser&quot; button should be  displayed - default value is true. 
Scheduler_previewButton_shortDescription=该标志指示应该显示“在浏览器中预览”按钮 - 缺省值为 true。
#@EN@ Repeat Limit Label
Scheduler_repeatLimitLabel_displayName=“重复限制”标签
#@EN@ Override the default value of the label for the repeat  limit menu. 
Scheduler_repeatLimitLabel_shortDescription=覆盖“重复限制”菜单标签的缺省值。
#@EN@ Repeat Limit Unit Items
Scheduler_repeatUnitItems_displayName=重复限制单位项
#@EN@ Override the items that appear on the repeat limit unit menu
Scheduler_repeatUnitItems_shortDescription=覆盖“重复限制单位”菜单上显示的项
#@EN@ Visible
Scheduler_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
Scheduler_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ Read-only
Scheduler_readOnly_displayName=只读
#@EN@ If this attribute is set to true, the value of the component is  rendered as text, preceded by the label if one was defined
Scheduler_readOnly_shortDescription=如果将此属性设置为 true，则组件的值将呈现为文本，并在前面显示标签（如果已定义）
#@EN@ Date Label
Scheduler_dateLabel_displayName=“日期”标签
#@EN@ This text replaces the &quot;Start Date&quot; label. 
Scheduler_dateLabel_shortDescription=此文本将替换“开始日期”标签。
#@EN@ Tab Index
Scheduler_tabIndex_displayName=Tab 键索引
#@EN@ Position of this element in the tabbing order of the current document
Scheduler_tabIndex_shortDescription=当使用 Tab 键依次浏览时，用于确定此元素在当前文档中所处的位置
#@EN@ ImageHyperlink
IconHyperlink_displayName=ImageHyperlink
#@EN@ The Icon component is used to display a clickable icon image from the current  theme in the rendered HTML page. 
IconHyperlink_shortDescription=图标组件用于在呈现的 HTML 页中显示可从当前主题中单击的图标图像。
#@EN@ Immediate
WebuiCommand_immediate_displayName=立即
#@EN@ Flag indicating that event handling for this component should be handled  immediately (in Apply Request Values phase) rather than waiting until   Invoke Application phase. 
WebuiCommand_immediate_shortDescription=该标志指示应该立即执行此组件的事件处理（在“应用请求值”阶段），而不是一直等到“调用应用程序”阶段。
#@EN@ Password Field
PasswordField_displayName=口令字段
#@EN@ The PasswordField component is used to create a password textfield. 
PasswordField_shortDescription=PasswordField 组件用于创建口令文本字段。
#@EN@ Password
PasswordField_password_displayName=口令
#@EN@ Value binding
PasswordField_password_shortDescription=值绑定
#@LC@ ### New message ###
#@EN@ Submit Form
PasswordField_submitForm_displayName=提交表单
#@LC@ ### New message ###
#@EN@ Flag indicating whether pressing enter in this text field would allow  browser to submit the enclosing form ( for all input fields with the exception of TextArea  which uses enter key to open a new line)        If set to false, the browser will be prevented from submitting the form on enter in all circumstances.  If set to true, the form will be submitted on enter in all circumstances.  The default value for this attribute is &quot;false&quot;, i.e.  default browser auto submit feature will be disabled
PasswordField_submitForm_shortDescription=该标志指示在此文本字段中按 Enter 键后是否允许浏览器提交包含的表单（用于除 TextArea 以外的所有输入字段，TextArea 输入字段使用 Enter 键打开一个新行）。如果设置为 false，则在任何情况下按 Enter 键时，浏览器将禁止提交表单。如果设置为 true，则在任何情况下按 Enter 键时，浏览器将提交表单。该属性的缺省值为 &quot;false&quot;，即禁用缺省浏览器自动提交功能
#@EN@ Value
PasswordField_value_displayName=值
#@EN@ The current value of this component
PasswordField_value_shortDescription=此组件的当前值
#@EN@ Text
PasswordField_text_displayName=text
#@EN@ Literal value to be rendered in this input field.  If this property is specified by a value binding  expression, the corresponding value will be updated  if validation succeeds. 
PasswordField_text_shortDescription=在此输入字段中呈现的文字值。如果此属性是由值绑定表达式指定的，并且验证成功，则会更新相应的值。
#@EN@ ThemeLinks
ThemeLinks_displayName=主题链接
#@EN@ The ThemeLicnks component is used to create references to theme resources on   a page in a portlet environment, where the Head component cannot be used. 
ThemeLinks_shortDescription=ThemeLinks 组件用于在 Portlet 环境中创建对页面上的主题资源的引用（无法在其中使用头标组件）。
#@EN@ Include StyleSheet Definitions Inline
ThemeLinks_styleSheetInline_displayName=包含内联的样式表定义
#@EN@ If set to true, the theme stylesheet contents will be rendered inline   instead of being linked to. 
ThemeLinks_styleSheetInline_shortDescription=如果设置为 true，则呈现内联的主题样式表内容，而不使用链接方式。
#@EN@ Enable Dojo Debugging
ThemeLinks_debug_displayName=启用 Dojo 调试
#@EN@ Flag (true or false) indicating that Dojo debugging is enabled
ThemeLinks_debug_shortDescription=该标志（true 或 false）指示是否启用 Dojo 调试
#@EN@ Ajaxify
ThemeLinks_ajaxify_displayName=Ajaxify
#@EN@ Flag indicating to turn off default Ajax functionality
ThemeLinks_ajaxify_shortDescription=该标志指示关闭缺省的 Ajax 功能
#@EN@ Include StyleSheet Link
ThemeLinks_styleSheet_displayName=包含样式表链接
#@EN@ If set to true, a link element with a reference to the theme  stylesheet resource is rendered. 
ThemeLinks_styleSheet_shortDescription=如果设置为 true，则呈现一个引用主题样式表资源的链接元素。
#@EN@ Rendered Flag
ThemeLinks_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
ThemeLinks_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Include Component JavaScript
ThemeLinks_javaScript_displayName=包含组件 JavaScript
#@EN@ Flag (true or false) indicating that component JavaScript should be   output in page
ThemeLinks_javaScript_shortDescription=该标志（true 或 false）指示组件 JavaScript 是否应在页面中输出
#@EN@ Component Identifier
ThemeLinks_id_displayName=组件标识符
#@EN@ The component identifier for this component
ThemeLinks_id_shortDescription=此组件的组件标识符
#@EN@ Accordion
Accordion_displayName=可折叠面板的集合
#@EN@ An accordion container
Accordion_shortDescription=一个可折叠面板的集合容器
#@LC@ ### New message ###
#@EN@ Display Refresh Icon
Accordion_refreshIcon_displayName=显示刷新图标
#@LC@ ### New message ###
#@EN@ Should be set to true if the accordion container is to display  a refresh icon
Accordion_refreshIcon_shortDescription=如果可折叠面板的集合容器要显示刷新图标，则应将其设置为 true
#@EN@ Multiple tab selected
Accordion_multipleSelect_displayName=选择多个标签
#@EN@ Returns true if multiple tabs can be selected at the same time.  By default this is set to false and only one accordion tab can be  selected at any given time
Accordion_multipleSelect_shortDescription=如果可以同时选择多个标签，则返回 true。缺省情况下，该值被设置为 false 并且在任何指定的时间内，只能选择一个可折叠面板集合的标签
#@EN@ Set expand and colapse controls
Accordion_toggleControls_displayName=设置展开和折叠控件
#@EN@ Should be set to true if the accordion container should display  expandAll and collapseAll control features
Accordion_toggleControls_shortDescription=如果可折叠面板的集合容器要显示 expandAll 和 collapseAll 控件功能，则应将其值设置为 true
#@EN@ HTML Template
TabContainer_htmlTemplate_displayName=HTML 模板
#@EN@ Alternative HTML template to be used by this component. 
TabContainer_htmlTemplate_shortDescription=此组件使用的替代 HTML 模板。
#@EN@ Load on select
TabContainer_loadOnSelect_displayName=选择时装入
#@EN@ Returns true if the tabs should be loaded when first selected.  Once loaded the tabs would not be reloaded until the container is  refreshed or the user performs some action on tab in question
TabContainer_loadOnSelect_shortDescription=如果在首次选择标签时执行装入操作，则返回 true。一旦装入了这些标签，则不会再次装入，直至容器刷新或者用户对当前标签执行了某个操作
#@EN@ CSS Style Class(es)
TabContainer_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this  component is rendered. 
TabContainer_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Array of Selected Tabs
TabContainer_selectedTabs_displayName=选定标签的阵列
#@EN@ An array of selected tabs
TabContainer_selectedTabs_shortDescription=选定标签的阵列
#@EN@ CSS Style(s)
TabContainer_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this  component is rendered. 
TabContainer_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Visible
TabContainer_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
TabContainer_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ Property Sheet Section
PropertySheetSection_displayName=属性表单部分
#@EN@ The PropertySheetSection component was written to be used  within the PropertySheet component
PropertySheetSection_shortDescription=编写的且用在 PropertySheet 组件中的 PropertySheetSection 组件
#@EN@ CSS Style Class(es)
PropertySheetSection_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
PropertySheetSection_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Label
PropertySheetSection_label_displayName=标签
#@EN@ This attribute allows you to provide a label or title for the section  	this PropertySheetSection defines for thePropertySheet component
PropertySheetSection_label_shortDescription=此属性允许您为此部分提供标签或标题，该部分是由 PropertySheetSection 针对 PropertySheet 组件而定义的
#@EN@ Visible
PropertySheetSection_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
PropertySheetSection_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ CSS Style(s)
PropertySheetSection_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
PropertySheetSection_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Rendered Flag
PropertySheetSection_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
PropertySheetSection_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Component Identifier
PropertySheetSection_id_displayName=组件标识符
#@EN@ The component identifier for this component
PropertySheetSection_id_shortDescription=此组件的组件标识符
#@EN@ Html
Html_displayName=Html
#@EN@ The Html component is used to create the &lt;html&gt; element. 
Html_shortDescription=此 Html 组件用于创建 &lt;html&gt; 元素。
#@EN@ Lang
Html_lang_displayName=Lang
#@EN@ Sets the language code for this document 
Html_lang_shortDescription=设置此文档的语言代码 
#@EN@ XML Namespace
Html_xmlns_displayName=XML 名称空间
#@EN@ Defines the XML namespace attribute
Html_xmlns_shortDescription=定义 XML 名称空间属性
#@EN@ Rendered Flag
Html_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Html_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Component Identifier
Html_id_displayName=组件标识符
#@EN@ The component identifier for this component
Html_id_shortDescription=此组件的组件标识符
#@EN@ Listbox
Listbox_displayName=列表框
#@EN@ The Listbox component allows users to select one or more items from a list. 
Listbox_shortDescription=用户可以使用列表框组件从列表中选择一项或多项。
#@EN@ Tool Tip
Listbox_toolTip_displayName=工具提示
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
Listbox_toolTip_shortDescription=为 HTML 元素设置 title 属性的值。如果将鼠标光标悬停在该 HTML 元素上，则指定的文本将作为工具提示进行显示。
#@EN@ HTML Template
Listbox_htmlTemplate_displayName=HTML 模板
#@EN@ Alternative HTML template to be used by this component. 
Listbox_htmlTemplate_shortDescription=此组件使用的替代 HTML 模板。
#@EN@ Value
Listbox_value_displayName=值
#@EN@ The current value of this component
Listbox_value_shortDescription=此组件的当前值
#@EN@ Multiple
Listbox_multiple_displayName=多个
#@EN@ Flag indicating that the application user can make select  	more than one option at a time from the listbox. 
Listbox_multiple_shortDescription=该标志指示应用程序用户可以从列表框中一次选择多个选项。
#@EN@ Text Selected Script
Listbox_onSelect_displayName=文本选定脚本
#@EN@ Scripting code executed when some text in this  component value is selected. 
Listbox_onSelect_shortDescription=当选定此组件值中的一些文本时执行的脚本代码。
#@EN@ Use Monospace Space
Listbox_monospace_displayName=使用等宽空间
#@EN@ When set to true, this attribute causes the list items to be rendered   in a monospace font. 
Listbox_monospace_shortDescription=如果此属性设置为 true，将会以等宽字体呈现列表项。
#@EN@ Read-only
Listbox_readOnly_displayName=只读
#@EN@ If this attribute is set to true, the value of the component is  rendered as text, preceded by the label if one was defined.   Deprecated: The attribute is deprecated starting from version 4.1 
Listbox_readOnly_shortDescription=如果将此属性设置为 true，则组件的值将呈现为文本，并在前面显示标签（如果已定义）。@Deprecated：此属性自版本 4.1 起已过时
#@EN@ Separators
ListSelector_separators_displayName=分隔符
#@EN@ Flag indicating that items corresponding to   com.sun.webui.jsf.model.Option that are defined   inside a com.sun.webui.jsf.model.OptionGroup should be  surrounded by separators inside the list
ListSelector_separators_shortDescription=该标志指示与 com.sun.webui.jsf.model.OptionGroup 内部定义的 com.sun.webui.jsf.model.Option 相对应的项应该在列表中使用分隔符进行分隔
#@EN@ Radio Button Group
RadioButtonGroup_displayName=单选按钮组
#@EN@ The RadioButtonGroup component is used to display two or more radio buttons  in a grid layout in the rendered HTML page. 
RadioButtonGroup_shortDescription=RadioButtonGroup 组件用于在呈现的 HTML 页的网格布局中显示两个或多个单选按钮。
#@EN@ HTML Template
RadioButtonGroup_htmlTemplate_displayName=HTML 模板
#@EN@ Alternative HTML template to be used by this component. 
RadioButtonGroup_htmlTemplate_shortDescription=此组件使用的替代 HTML 模板。
#@EN@ Value
RadioButtonGroup_value_displayName=值
#@EN@ The current value of this component
RadioButtonGroup_value_shortDescription=此组件的当前值
#@EN@ Text Selected Script
RadioButtonGroup_onSelect_displayName=文本选定脚本
#@EN@ Scripting code executed when some text in this  component value is selected. 
RadioButtonGroup_onSelect_shortDescription=当选定此组件值中的一些文本时执行的脚本代码。
#@EN@ Value Change Script
RadioButtonGroup_onChange_displayName=值更改脚本
#@EN@ Scripting code executed when the element  value of this component is changed. 
RadioButtonGroup_onChange_shortDescription=更改此组件的元素值时执行的脚本代码。
#@EN@ Focus Script
RadioButtonGroup_onFocus_displayName=焦点脚本
#@EN@ Scripting code executed when this component  receives focus
RadioButtonGroup_onFocus_shortDescription=此组件获取焦点时执行的脚本代码。
#@EN@ Visible
RadioButtonGroup_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
RadioButtonGroup_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ Columns
RadioButtonGroup_columns_displayName=列
#@EN@ Defines how many columns may be used to layout the radio buttons
RadioButtonGroup_columns_shortDescription=定义布置单选按钮时使用的列数
#@EN@ Blur Script
RadioButtonGroup_onBlur_displayName=模糊脚本
#@EN@ Scripting code executed when this element loses focus. 
RadioButtonGroup_onBlur_shortDescription=此元素失去焦点时执行的脚本代码。
#@EN@ Image Hyperlink
ImageHyperlink_displayName=图像超级链接
#@EN@ Use the webuijsf:imageHyperlink tag to display a clickable   image in the rendered HTML page
ImageHyperlink_shortDescription=使用 webuijsf:imageHyperlink 标记在呈现的 HTML 页面中显示一个可单击的图像
#@EN@ Double Click Script
ImageHyperlink_onDblClick_displayName=双击脚本
#@EN@ Specifies the position of the image with respect to its context.  Valid values are: bottom (the default); middle; top; left; right. 
ImageHyperlink_onDblClick_shortDescription=指定图像相对于其上下文的位置。有效值为：底部对齐（缺省值）、中部、顶部对齐、左对齐和右对齐。
#@EN@ Width
ImageHyperlink_width_displayName=宽度
#@EN@ Image width override
ImageHyperlink_width_shortDescription=图像所覆盖的宽度
#@EN@ Image Url
ImageHyperlink_imageURL_displayName=图像 Url
#@EN@ Absolute or relative URL to the image to be rendered. 
ImageHyperlink_imageURL_shortDescription=要呈现的图像的绝对或相对 URL。
#@EN@ Height
ImageHyperlink_height_displayName=高度
#@EN@ When specified, the width and height attributes tell the client browser to override the natural image or object size in favor of these values, specified in pixels
ImageHyperlink_height_shortDescription=如果指定此属性，则 width 和 height 属性将通知客户端浏览器覆盖自然图像或对象的部分区域，具体大小由这些值来指定（以像素为单位）
#@EN@ Icon
ImageHyperlink_icon_displayName=图标
#@EN@ The identifier of the desired theme image. 
ImageHyperlink_icon_shortDescription=所需主题图像的标识符。
#@EN@ Horizontal Space
ImageHyperlink_hspace_displayName=水平间距
#@EN@ Specifies the amount of white space in pixels to be inserted to the left and   right of the image
ImageHyperlink_hspace_shortDescription=指定插入到图像左侧和右侧的空白区域的大小（以像素为单位）
#@EN@ Align
ImageHyperlink_align_displayName=对齐
#@EN@ Specifies the position of the image with respect to its context.  Valid values are: bottom (the default); middle; top; left; right. 
ImageHyperlink_align_shortDescription=指定图像相对于其上下文的位置。有效值为：底部对齐（缺省值）、中部、顶部对齐、左对齐和右对齐。
#@EN@ Vertical Space
ImageHyperlink_vspace_displayName=垂直间距
#@EN@ Specifies the amount of white space in pixels to be inserted above and below the   image
ImageHyperlink_vspace_shortDescription=指定插入到图像上面和下面的空白区域的大小（以像素为单位）
#@EN@ Visible
ImageHyperlink_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
ImageHyperlink_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ Border
ImageHyperlink_border_displayName=边框
#@EN@ Specifies the width of the img border in pixels.  The default value for this attribute depends on the client browser 
ImageHyperlink_border_shortDescription=指定图像边框的宽度（以像素为单位）。此属性的缺省值取决于客户端浏览器 
#@EN@ Alt Text
ImageHyperlink_alt_displayName=替代文本
#@EN@ Alternative textual description of the image rendered by this component
ImageHyperlink_alt_shortDescription=此组件呈现的图像的替代文本描述
#@EN@ Text Position
ImageHyperlink_textPosition_displayName=文本位置
#@EN@ Specifies where the text will be placed relative to the image
ImageHyperlink_textPosition_shortDescription=指定文本相对于图像的放置位置
#@EN@ Tree
Tree_displayName=树
#@EN@ The Tree component is used to display a tree structure in the rendered HTML  page. 
Tree_shortDescription=树组件用于在呈现的 HTML 页中显示树结构。
#@EN@ Image URL
Tree_imageURL_displayName=图像 URL
#@EN@ Absolute or relative URL to the image to be rendered for the tree node.  Note that you cannot use the imageURL to display a theme image in the  tree
Tree_imageURL_shortDescription=为树节点呈现的图像的绝对或相对 URL。请注意，无法使用 imageURL 显示树中的主题图像
#@EN@ required
Tree_required_displayName=必需
#@EN@ Flag indicating that the user must select a value for this tree.     Default value is false.  @deprecated: This attribute is deprecated from 4.1 and should not be used as it does not make much   sense in the context of the tree. 
Tree_required_shortDescription=该标志指示用户必须为此树选择一个值。缺省值为 false。@deprecated：此属性自版本 4.1 起已过时，由于它在树的上下文中没有太多意义，因此不应再使用。
#@EN@ Hyperlink Action
Tree_actionExpression_displayName=超级链接操作
#@EN@ The action attribute is used to specify the action to take when this  component is activated by the user
Tree_actionExpression_shortDescription=action 属性用于指定在用户激活此组件时执行的操作
#@EN@ ClientSide
Tree_clientSide_displayName=客户端
#@EN@ Set the clientSide attribute to true to specify that the Tree component          should run on the client
Tree_clientSide_shortDescription=          将 clientSide 属性设置为 true 可指定应该在客户端上运行树组件
#@EN@ Hyperlink Target
Tree_target_displayName=超级链接目标
#@EN@ The resource at the specified URL is displayed in the frame that is  specified with the target attribute
Tree_target_shortDescription=位于指定 URL 的资源将显示在使用 target 属性指定的框架中
#@EN@ Rendered Flag
Tree_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Tree_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Component Identifier
Tree_id_displayName=组件标识符
#@EN@ The component identifier for this component
Tree_id_shortDescription=此组件的组件标识符
#@EN@ CSS Style Class(es)
Tree_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this     component is rendered. 
Tree_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Selected
Tree_selected_displayName=选定
#@EN@ Returns the id of the selected tree node
Tree_selected_shortDescription=返回选定树节点的 id
#@EN@ Immediate
Tree_immediate_displayName=立即
#@EN@ Flag indicating that event handling for this component should be  	handled immediately (in Apply Request Values phase) rather than  	waiting until Invoke Application phase.  	May be desired for this component when required is true (although most  	likely not). 
Tree_immediate_shortDescription=该标志指示应该立即执行此组件的事件处理（在“应用请求值”阶段），而不是一直等到“调用应用程序”阶段。当 required 为 true 时（尽管大多数情况并非如此），该组件可能需要设置此标志。
#@EN@ Action Listener Expression
Tree_actionListenerExpression_displayName=操作侦听程序表达式
#@EN@ The actionListener attribute is used to specify a method to handle an  action event that is triggered when a component is activated by the user.  The actionListener attribute value must be a JavaServer Faces EL  expression that resolves to a method in a backing bean
Tree_actionListenerExpression_shortDescription=actionListener 属性用于指定方法以处理在用户激活组件时触发的操作事件。actionListener 属性值必须是一个 JavaServer Faces EL 表达式，其结果为支持 Bean 中的方法
#@EN@ Expanded
Tree_expanded_displayName=展开
#@EN@ Set the expanded attribute to true to display the tree node as expanded when      the component is initially rendered
Tree_expanded_shortDescription=将 expanded 属性设置为 true 可在最初呈现组件时将树节点显示为展开的节点
#@EN@ Expand On Select
Tree_expandOnSelect_displayName=选择时展开
#@EN@ Flag indicating that folder / container nodes will automatically expand  	when they are selected
Tree_expandOnSelect_shortDescription=该标志指示当选择文件夹/容器节点时，它们将自动展开
#@EN@ CSS Style(s)
Tree_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this     component is rendered. 
Tree_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Visible
Tree_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be      viewable by the user in the rendered HTML page
Tree_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ Hyperlink Url
Tree_url_displayName=超级链接 Url
#@EN@ Indicates that the text that is specified with the text attribute  should be rendered as a hyperlink that resolves to the specified URL.  If the imageURL attribute is used with the url attribute, the image is  hyperlinked
Tree_url_shortDescription=指示使用 text 属性指定的文本应该呈现为结果属于指定 URL 的超级链接。如果将 imageURL 属性与 url 属性结合使用，则对图像实现超级链接
#@EN@ Page
Page_displayName=页面
#@EN@ The Page component is used to indicate the beginning of the part of the JSP  page that is used by the Sun Java Web UI Components. 
Page_shortDescription=页面组件用于指示 JSP 页面部分的起始位置，该页面将在 Sun Java Web UI 组件中使用。
#@EN@ XHTML Transitional
Page_xhtml_displayName=XHTML 过渡
#@EN@ XHTML transitional page or HTML  transitional page
Page_xhtml_shortDescription=XHTML 过渡页或 HTML 过渡页
#@EN@ Needs Frame
Page_frame_displayName=需要框架
#@EN@ Use the frame attribute to  indicate whether the page should render frames
Page_frame_shortDescription=使用 frame 属性可指示页面是否应该呈现框架
#@EN@ Rendered Flag
Page_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Page_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Component Identifier
Page_id_displayName=组件标识符
#@EN@ The component identifier for this component
Page_id_shortDescription=此组件的组件标识符
#@EN@ Skip Hyperlink
SkipHyperlink_displayName=跳过超级链接
#@EN@ The SkipLink component is used to create a single-pixel transparent image  (not visible within the browser page) which is hyperlinked to an anchor   beyond the section to skip. 
SkipHyperlink_shortDescription=SkipLink 组件用于创建单像素透明图像（在浏览器页面中不可见），它通过超级链接转至要跳过的部分之外的锚点。
#@EN@ Value
SkipHyperlink_value_displayName=值
#@EN@ The current value of this component
SkipHyperlink_value_shortDescription=此组件的当前值
#@EN@ CSS Style Class(es)
SkipHyperlink_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
SkipHyperlink_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Immediate
SkipHyperlink_immediate_displayName=立即
#@EN@ Flag indicating that event handling for this component should be handled  immediately (in Apply Request Values phase) rather than waiting until   Invoke Application phase. 
SkipHyperlink_immediate_shortDescription=该标志指示应该立即执行此组件的事件处理（在“应用请求值”阶段），而不是一直等到“调用应用程序”阶段。
#@EN@ Action Expression
SkipHyperlink_actionExpression_displayName=操作表达式
#@EN@ MethodExpression representing the application action to invoke when this  component is activated by the user
SkipHyperlink_actionExpression_shortDescription=方法表达式，用于表示在用户激活此组件时要调用的应用程序操作
#@EN@ Action Listener Expression
SkipHyperlink_actionListenerExpression_displayName=操作侦听程序表达式
#@EN@ Use the actionListenerExpression attribute to cause the component to fire  an event
SkipHyperlink_actionListenerExpression_shortDescription=使用 actionListenerExpression 属性可促使组件触发一个事件
#@EN@ Description
SkipHyperlink_description_displayName=描述
#@EN@ Use the description attribute to provide text that describes the purpose   of the skip hyperlink
SkipHyperlink_description_shortDescription=使用 description 属性可提供用于描述跳过超级链接用途的文本
#@EN@ CSS Style(s)
SkipHyperlink_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
SkipHyperlink_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Tab Index
SkipHyperlink_tabIndex_displayName=Tab 键索引
#@EN@ Position of this element in the tabbing order of the current document
SkipHyperlink_tabIndex_shortDescription=当使用 Tab 键依次浏览时，用于确定此元素在当前文档中所处的位置
#@EN@ Version Page
VersionPage_displayName=版本页
#@EN@ The VersionPage component is used to display a version page. 
VersionPage_shortDescription=VersionPage 组件用于显示版本页。
#@EN@ Version Information File
VersionPage_versionInformationFile_displayName=版本信息文件
#@EN@ The name of version information file containing the formatted application version and copyright message. 
VersionPage_versionInformationFile_shortDescription=版本信息文件的名称，该文件包含设置了格式的应用程序版本和版权消息。
#@EN@ Value
VersionPage_value_displayName=值
#@EN@ The current value of this component
VersionPage_value_shortDescription=此组件的当前值
#@EN@ Converter
VersionPage_converter_displayName=转换器
#@EN@ Converter instance registered with this component.
VersionPage_converter_shortDescription=与此组件一起注册的转换器实例。
#@EN@ Rendered Flag
VersionPage_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
VersionPage_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Component Identifier
VersionPage_id_displayName=组件标识符
#@EN@ The component identifier for this component
VersionPage_id_shortDescription=此组件的组件标识符
#@EN@ CSS Style Class(es)
VersionPage_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
VersionPage_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Product Image Description
VersionPage_productImageDescription_displayName=产品图像描述
#@EN@ The description to use for the Product Name Image displayed in the version page. 
VersionPage_productImageDescription_shortDescription=用于在版本页中显示的产品名称图像的描述。
#@EN@ Product Image Height
VersionPage_productImageHeight_displayName=产品图像高度
#@EN@ The height to use for the Product Name Image 
VersionPage_productImageHeight_shortDescription=产品名称图像的高度 
#@EN@ Product Image URL
VersionPage_productImageURL_displayName=产品图像 URL
#@EN@ The url to use for the Product Name Image 
VersionPage_productImageURL_shortDescription=用于产品名称图像的 URL 
#@EN@ Copyright String
VersionPage_copyrightString_displayName=版权声明字符串
#@EN@ The application copyright information. 
VersionPage_copyrightString_shortDescription=应用程序版权声明信息。
#@EN@ CSS Style(s)
VersionPage_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
VersionPage_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Visible
VersionPage_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
VersionPage_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ Product Image Width
VersionPage_productImageWidth_displayName=产品图像宽度
#@EN@ The width to use for the Product Name Image 
VersionPage_productImageWidth_shortDescription=用于产品名称图像的宽度 
#@EN@ Version String
VersionPage_versionString_displayName=版本字符串
#@EN@ The application version. 
VersionPage_versionString_shortDescription=应用程序版本。
#@EN@ Row Group
TableRowGroup_displayName=行组
#@EN@ Component that represents a group of table rows.    The TableRowGroup component provides a layout mechanism for displaying rows   of data
TableRowGroup_shortDescription=表示一组表行的组件。TableRowGroup 组件提供用于显示数据行的布局机制
#@EN@ Extra Footer HTML
TableRowGroup_extraFooterHtml_displayName=附加脚注 HTML
#@EN@ Extra HTML code to be appended to the &lt;tr&gt; HTML element that   is rendered for the group footer
TableRowGroup_extraFooterHtml_shortDescription=附加在为组脚注呈现的 &lt;tr&gt; HTML 元素之后的额外 HTML 代码
#@EN@ Show Multiple Column Footers
TableRowGroup_multipleColumnFooters_displayName=显示多个列脚注
#@EN@ Use the multipleColumnFooters attribute when the   webuijsf:tableRowGroup contains nested webuijsf:tableColumn tags,   and you want the footers of all the webuijsf:tableColumn tags to be   shown
TableRowGroup_multipleColumnFooters_shortDescription=如果 webuijsf:tableRowGroup 包含嵌套的 webuijsf:tableColumn 标记，并且您希望显示所有 webuijsf:tableColumn 标记的脚注，请使用 multipleColumnFooters 属性
#@EN@ Extra Header HTML
TableRowGroup_extraHeaderHtml_displayName=附加标题 HTML
#@EN@ Extra HTML code to be appended to the &lt;tr&gt; HTML element that   is rendered for the group header
TableRowGroup_extraHeaderHtml_shortDescription=附加在为组标题呈现的 &lt;tr&gt; HTML 元素之后的额外 HTML 代码
#@LC@ ### New message ###
#@EN@ Footer Text
TableRowGroup_footerText_displayName=脚注文本
#@LC@ ### New message ###
#@EN@ The text to be displayed in the group footer. 
TableRowGroup_footerText_shortDescription=要在组脚注中显示的文本。
#@EN@ Is Above Column Header
TableRowGroup_aboveColumnHeader_displayName=在列标题上方
#@EN@ Set the aboveColumnHeader attribute to true to display the group   header bar above the column headers bar
TableRowGroup_aboveColumnHeader_shortDescription=将 aboveColumnHeader 属性设置为 true 可在列标题栏上面显示组标题栏
#@EN@ Show Nested Table Column Footers
TableRowGroup_multipleTableColumnFooters_displayName=显示嵌套的表列脚注
#@EN@ Use the multipleTableColumnFooters attribute when the   webuijsf:tableRowGroup contains nested webuijsf:tableColumn tags,   and you want the table footers of all the webuijsf:tableColumn tags to   be shown
TableRowGroup_multipleTableColumnFooters_shortDescription=如果 webuijsf:tableRowGroup 包含嵌套的 webuijsf:tableColumn 标记，并且您希望显示所有 webuijsf:tableColumn 标记的表脚注，请使用 multipleTableColumnFooters 属性
#@EN@ Is Above Column Footer
TableRowGroup_aboveColumnFooter_displayName=在列脚注上方
#@EN@ Set the aboveColumnFooter attribute to true to display the group   footer bar above the column footers bar
TableRowGroup_aboveColumnFooter_shortDescription=将 aboveColumnFooter 属性设置为 true 可在列脚注栏上面显示组脚注栏
#@EN@ Button
Button_displayName=按钮
#@EN@ The Button component is used to display an input button. 
Button_shortDescription=按钮组件用于显示输入按钮。
#@EN@ Double Click Script
Button_onDblClick_displayName=双击脚本
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
Button_onDblClick_shortDescription=用鼠标双击此组件时执行的脚本代码。
#@EN@ Image URL
Button_imageURL_displayName=图像 URL
#@EN@ Resource path of an image to be displayed to create the visual appearance of   this button instead of the standard button image
Button_imageURL_shortDescription=显示的图像的资源路径，该图像用于创建此按钮的可视化外观，而不是标准按钮图像
#@EN@ Key Press Script
Button_onKeyPress_displayName=按键脚本
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
Button_onKeyPress_shortDescription=当组件具有焦点且用户按下并释放某个键时执行的脚本代码。
#@EN@ Is Reset
Button_reset_displayName=重置
#@EN@ Indicates that the button should be a HTML reset button
Button_reset_shortDescription=指示按钮应该为 HTML 重置按钮
#@EN@ Focus Script
Button_onFocus_displayName=焦点脚本
#@EN@ Scripting code executed when this component  receives focus
Button_onFocus_shortDescription=此组件获取焦点时执行的脚本代码。
#@EN@ Escape
Button_escape_displayName=转义
#@EN@ Escape the html text so it won't be interpreted by the browser as HTML
Button_escape_shortDescription=对 html 文本进行转义，这样浏览器就不会将其解释为 HTML 标记
#@EN@ Key Up Script
Button_onKeyUp_displayName=释放键脚本
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
Button_onKeyUp_shortDescription=当组件具有焦点且用户释放某个键时执行的脚本代码。
#@EN@ Mouse Up Script
Button_onMouseUp_displayName=释放鼠标脚本
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
Button_onMouseUp_shortDescription=当鼠标指针位于组件上且用户释放鼠标按钮时执行的脚本代码。
#@EN@ CSS Style Class(es)
Button_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Button_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Icon
Button_icon_displayName=图标
#@EN@ The identifier key of a theme image to be used for the button
Button_icon_shortDescription=用于按钮的主题图像的标识符键
#@EN@ CSS Style(s)
Button_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Button_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Click Script
Button_onClick_displayName=单击脚本
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
Button_onClick_shortDescription=用鼠标单击此组件时执行的脚本代码。
#@EN@ Is Mini
Button_mini_displayName=迷你
#@EN@ Indicates that the button should be rendered using a different style   than normal buttons
Button_mini_shortDescription=指示应该使用与普通按钮不同的方式来呈现按钮
#@EN@ Blur Script
Button_onBlur_displayName=模糊脚本
#@EN@ Scripting code executed when this element loses focus. 
Button_onBlur_shortDescription=此元素失去焦点时执行的脚本代码。
#@EN@ Tool Tip
Button_toolTip_displayName=工具提示
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
Button_toolTip_shortDescription=为 HTML 元素设置 title 属性的值。如果将鼠标光标悬停在该 HTML 元素上，则指定的文本将作为工具提示进行显示。
#@EN@ Mouse Down Script
Button_onMouseDown_displayName=按下鼠标脚本
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
Button_onMouseDown_shortDescription=当鼠标指针位于组件上且用户按下鼠标按钮时执行的脚本代码。
#@EN@ Is Primary
Button_primary_displayName=主要
#@EN@ Indicates that the button is the most commonly used button within a group. 
Button_primary_shortDescription=指示按钮是组中最常用的按钮。
#@EN@ Value
Button_value_displayName=值
#@EN@ The current value of this component
Button_value_shortDescription=此组件的当前值
#@EN@ Disabled
Button_disabled_displayName=禁用
#@EN@ Indicates that activation of this component by the user is not currently   permitted
Button_disabled_shortDescription=指示当前不允许用户激活此组件
#@EN@ Mouse Out Script
Button_onMouseOut_displayName=移开鼠标脚本
#@EN@ Scripting code executed when the user moves the mouse pointer off this component. 
Button_onMouseOut_shortDescription=当用户将鼠标指针从此组件上移开时执行的脚本代码。
#@EN@ Alt Text
Button_alt_displayName=替代文本
#@EN@ Alternative textual description of the image rendered by this component
Button_alt_shortDescription=此组件呈现的图像的替代文本描述
#@EN@ Mouse In Script
Button_onMouseOver_displayName=移入鼠标脚本
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
Button_onMouseOver_shortDescription=当用户将鼠标指针移入此组件的边界内时执行的脚本代码。
#@EN@ HTML Template
Button_htmlTemplate_displayName=HTML 模板
#@EN@ Alternative HTML template to be used by this component. 
Button_htmlTemplate_shortDescription=此组件使用的替代 HTML 模板。
#@EN@ Mouse Move Script
Button_onMouseMove_displayName=移动鼠标脚本
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
Button_onMouseMove_shortDescription=当用户将鼠标指针移动到组件上方时执行的脚本代码。
#@EN@ No Text Padding
Button_noTextPadding_displayName=无文本填充
#@EN@ Indicates that padding should not be applied to the button text
Button_noTextPadding_shortDescription=指示不应将填充应用于按钮文本
#@EN@ Button Text
Button_text_displayName=按钮文本
#@EN@ Text to display on the button
Button_text_shortDescription=在按钮上显示的文本
#@EN@ Visible
Button_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
Button_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ Key Down Script
Button_onKeyDown_displayName=按下键脚本
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
Button_onKeyDown_shortDescription=当组件具有焦点且用户按下某个键时执行的脚本代码。
#@EN@ Tab Index
Button_tabIndex_displayName=Tab 键索引
#@EN@ Position of this element in the tabbing order of the current document
Button_tabIndex_shortDescription=当使用 Tab 键依次浏览时，用于确定此元素在当前文档中所处的位置
#@EN@ Job Status
JobStatus_displayName=作业状态
#@EN@ The JobStatus component is used to show the number of jobs currently running.    @deprecated See tld docs for more information on how to create a jobStatus  without using the jobStatus component 
JobStatus_shortDescription=JobStatus 组件用于显示当前运行的作业数。有关如何在不使用 jobStatus 组件的情况下创建 jobStatus 的更多信息，@deprecated @see tld 文档 
#@EN@ Double Click Script
JobStatus_onDblClick_displayName=双击脚本
#@EN@ Specifies the position of the image with respect to its context.  Valid values are: bottom (the default); middle; top; left; right. 
JobStatus_onDblClick_shortDescription=指定图像相对于其上下文的位置。有效值为：底部对齐（缺省值）、中部、顶部对齐、左对齐和右对齐。
#@EN@ Text Position
JobStatus_textPosition_displayName=文本位置
#@EN@ Specifies where the text will be placed relative to the image
JobStatus_textPosition_shortDescription=指定文本相对于图像的放置位置
#@EN@ Number of Jobs
JobStatus_numJobs_displayName=作业数
#@EN@ The number of currently executing jobs, displayed next to the job label. 
JobStatus_numJobs_shortDescription=在作业标签旁边显示的当前执行的作业数。
#@EN@ Column
TableColumn_displayName=列
#@EN@ Component that represents a table column.    The tableColumn component provides a layout mechanism for displaying columns   of data
TableColumn_shortDescription=表示表列的组件。tableColumn 组件提供用于显示数据列的布局机制
#@EN@ Extra Footer HTML
TableColumn_extraFooterHtml_displayName=附加脚注 HTML
#@EN@ Extra HTML code to be appended to the &lt;td&gt; HTML element that   is rendered for the column footer
TableColumn_extraFooterHtml_shortDescription=附加在为列脚注呈现的 &lt;td&gt; HTML 元素之后的额外 HTML 代码
#@EN@ Extra Header HTML
TableColumn_extraHeaderHtml_displayName=附加标题 HTML
#@EN@ Extra HTML code to be appended to the &lt;th&gt; HTML element that   is rendered for the column header
TableColumn_extraHeaderHtml_shortDescription=附加在为列标题呈现的 &lt;th&gt; HTML 元素之后的额外 HTML 代码
#@LC@ ### New message ###
#@EN@ Table Footer Text
TableColumn_tableFooterText_displayName=表脚注文本
#@LC@ ### New message ###
#@EN@ The text to be displayed in the table column footer
TableColumn_tableFooterText_shortDescription=要在表列脚注中显示的文本
#@EN@ Extra Table Footer HTML
TableColumn_extraTableFooterHtml_displayName=附加表脚注 HTML
#@EN@ Extra HTML code to be appended to the &lt;td&gt; HTML element that   is rendered for the table column footer
TableColumn_extraTableFooterHtml_shortDescription=附加在为表列脚注呈现的 &lt;td&gt; HTML 元素之后的额外 HTML 代码
#@EN@ Spacer Column
TableColumnBase_spacerColumn_displayName=分隔列
#@EN@ Use the spacerColumn attribute to use the column as a blank column   to enhance spacing in two or three column tables
TableColumnBase_spacerColumn_shortDescription=使用 spacerColumn 属性可将列用作空列，以便在包含两列或三列的表中增大间距
#@EN@ Double Click Script
TableColumnBase_onDblClick_displayName=双击脚本
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
TableColumnBase_onDblClick_shortDescription=用鼠标双击此组件时执行的脚本代码。
#@EN@ Width
TableColumnBase_width_displayName=宽度
#@EN@ Use the width attribute to specify the width of the cells of the   column
TableColumnBase_width_shortDescription=使用 width 属性可指定列单元格的宽度
#@EN@ Select Component Id
TableColumnBase_selectId_displayName=选择组件 ID
#@EN@ Use the selectId attribute in select columns, which contain   checkboxes or radio buttons for selecting table rows
TableColumnBase_selectId_shortDescription=请在选择列中使用 selectId 属性，这些列包含用于选择表行的复选框或单选按钮
#@EN@ Sort Key
TableColumnBase_sort_displayName=排序键
#@EN@ Use the sort attribute to specify a FieldKey id or SortCriteria   that defines the criteria to use for sorting the contents of a   TableDataProvider
TableColumnBase_sort_shortDescription=使用 sort 属性可指定 FieldKey id 或 SortCriteria，以定义用于对 TableDataProvider 的内容进行排序的条件
#@EN@ Key Press Script
TableColumnBase_onKeyPress_displayName=按键脚本
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
TableColumnBase_onKeyPress_shortDescription=当组件具有焦点且用户按下并释放某个键时执行的脚本代码。
#@EN@ Severity
TableColumnBase_severity_displayName=严重性
#@EN@ Use the severity attribute when including the webuijsf:alarm   component in a column, to match the severity of the alarm
TableColumnBase_severity_shortDescription=当在列中包含 webuijsf:alarm 组件时，可使用 severity 属性以便与警报的严重性相匹配
#@EN@ Columns Spanned By the Cell
TableColumnBase_colSpan_displayName=单元格所跨列数
#@EN@ The COLSPAN attribute of TD specifies the number of columns that are  spanned by the cell
TableColumnBase_colSpan_shortDescription=TD 的 COLSPAN 属性可指定单元格所跨越的列数
#@EN@ Row Header
TableColumnBase_rowHeader_displayName=行标题
#@EN@ Use the rowHeader attribute to specify that the cells of the   column are acting as row headers
TableColumnBase_rowHeader_shortDescription=使用 rowHeader 属性可指定用作行标题的列单元格
#@EN@ Cell Background Color
TableColumnBase_bgColor_displayName=单元格背景颜色
#@EN@ The BGCOLOR attribute suggests a background color for the cell
TableColumnBase_bgColor_shortDescription=BGCOLOR 属性建议单元格的背景颜色
#@EN@ Key Up Script
TableColumnBase_onKeyUp_displayName=释放键脚本
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
TableColumnBase_onKeyUp_shortDescription=当组件具有焦点且用户释放某个键时执行的脚本代码。
#@EN@ Mouse Up Script
TableColumnBase_onMouseUp_displayName=释放鼠标脚本
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
TableColumnBase_onMouseUp_shortDescription=当鼠标指针位于组件上且用户释放鼠标按钮时执行的脚本代码。
#@EN@ CSS Style Class(es)
TableColumnBase_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
TableColumnBase_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Is Descending
TableColumnBase_descending_displayName=降序
#@EN@ Use the descending attribute to specify that the first   user-applied sort is descending
TableColumnBase_descending_shortDescription=使用 descending 属性可指定用户应用的第一种排序为降序
#@EN@ Alignment Character
TableColumnBase_char_displayName=对齐字符
#@EN@ Use the char attribute to specify a character to use for   horizontal alignment in each cell in the row
TableColumnBase_char_shortDescription=使用 char 属性可指定用于水平对齐行中每个单元格的字符
#@EN@ Is Embedded Actions
TableColumnBase_embeddedActions_displayName=嵌入式操作
#@EN@ Set the embeddedActions attribute to true when the column includes   more than one embedded action
TableColumnBase_embeddedActions_shortDescription=如果列包含多个嵌入式操作，请将 embeddedActions 属性设置为 true
#@EN@ Height
TableColumnBase_height_displayName=高度
#@EN@ The number of pixels for the cell's height
TableColumnBase_height_shortDescription=单元格的高度（以像素为单位）
#@EN@ Footer Text
TableColumnBase_footerText_displayName=脚注文本
#@EN@ The text to be displayed in the column footer. 
TableColumnBase_footerText_shortDescription=要在列脚注中显示的文本。
#@EN@ Horizontal Alignment
TableColumnBase_align_displayName=水平对齐
#@EN@ Use the align attribute to specify the horizontal alignment for   the content of each cell in the column
TableColumnBase_align_shortDescription=使用 align 属性可指定列中每个单元格内容水平对齐
#@EN@ Cells Covered By Header Cell
TableColumnBase_scope_displayName=标题单元格所涉及的单元格
#@EN@ Use the scope attribute to specify that the data cells of the   column are also acting as headers for rows or other columns of the table
TableColumnBase_scope_shortDescription=使用 scope 属性可指定列数据单元格也用作表行或其他列的标题
#@EN@ CSS Style(s)
TableColumnBase_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
TableColumnBase_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Abbreviation for Header Cell
TableColumnBase_abbr_displayName=标题单元格的缩写
#@EN@ ABBR gives an abbreviated version of the cell's content
TableColumnBase_abbr_shortDescription=ABBR 提供单元格内容的缩写版本
#@EN@ Sort Image URL
TableColumnBase_sortImageURL_displayName=排序图像 URL
#@EN@ Absolute or relative URL to the image used for the sort button that is   displayed in the column header. 
TableColumnBase_sortImageURL_shortDescription=用于排序按钮（显示在列标题中）的图像的绝对或相对 URL。
#@EN@ Alignment Character Offset
TableColumnBase_charOff_displayName=对齐字符偏移量
#@EN@ Use the charOff attribute to specify the offset of the first   occurrence of the alignment character that is specified with the   char attribute
TableColumnBase_charOff_shortDescription=使用 charOff 属性可指定由 char 属性指定的对齐字符第一次出现时的偏移量
#@EN@ Click Script
TableColumnBase_onClick_displayName=单击脚本
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
TableColumnBase_onClick_shortDescription=用鼠标单击此组件时执行的脚本代码。
#@EN@ Sort Icon
TableColumnBase_sortIcon_displayName=排序图标
#@EN@ The theme identifier to use for the sort button that is displayed in the column   header
TableColumnBase_sortIcon_shortDescription=用于排序按钮（显示在列标题中）的主题标识符
#@EN@ Mouse Down Script
TableColumnBase_onMouseDown_displayName=按下鼠标脚本
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
TableColumnBase_onMouseDown_shortDescription=当鼠标指针位于组件上且用户按下鼠标按钮时执行的脚本代码。
#@EN@ Tool Tip
TableColumnBase_toolTip_displayName=工具提示
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
TableColumnBase_toolTip_shortDescription=为 HTML 元素设置 title 属性的值。如果将鼠标光标悬停在该 HTML 元素上，则指定的文本将作为工具提示进行显示。
#@EN@ Horizontal Alignment Key
TableColumnBase_alignKey_displayName=水平对齐键
#@EN@ Use the alignKey attribute to specify the FieldKey id or FieldKey   to be used as an identifier for a specific data element on which to align the   table cell data in the column
TableColumnBase_alignKey_shortDescription=使用 alignKey 属性可指定 FieldKey id 或 FieldKey 用作特定数据元素的标识符，在该元素上将对齐列中的表单元格数据
#@EN@ List of Header Cells for Current Cell
TableColumnBase_headers_displayName=当前单元格的标题单元格列表
#@EN@ The HEADERS attribute specifies the header cells that apply to the  TD
TableColumnBase_headers_shortDescription=HEADERS 属性指定应用于 TD 的标题单元格
#@EN@ Category of Header Cell
TableColumnBase_axis_displayName=标题单元格的类别
#@EN@ The AXIS attribute provides a method of categorizing cells
TableColumnBase_axis_shortDescription=AXIS 属性提供单元格的分类方法
#@EN@ Vertical Position
TableColumnBase_valign_displayName=垂直位置
#@EN@ Use the valign attribute to specify the vertical alignment for the   content of each cell in the column
TableColumnBase_valign_shortDescription=使用 valign 属性可指定列中每个单元格内容垂直对齐
#@EN@ Suppress Word Wrap
TableColumnBase_noWrap_displayName=禁止自动换行
#@EN@ Use the noWrap attribute to disable word wrapping of this column's   cells in visual browsers
TableColumnBase_noWrap_shortDescription=使用 noWrap 属性可禁止此列的单元格在可视浏览器中自动换行
#@EN@ Rows Spanned By the Cell
TableColumnBase_rowSpan_displayName=单元格所跨行数
#@EN@ The ROWSPAN attribute of TD specifies the number of rows that are  spanned by the cell
TableColumnBase_rowSpan_shortDescription=TD 的 ROWSPAN 属性指定单元格所跨越的行数
#@EN@ Mouse Out Script
TableColumnBase_onMouseOut_displayName=移开鼠标脚本
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
TableColumnBase_onMouseOut_shortDescription=将鼠标指针从此组件上方移开时执行的脚本代码。
#@EN@ Mouse In Script
TableColumnBase_onMouseOver_displayName=移入鼠标脚本
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
TableColumnBase_onMouseOver_shortDescription=当用户将鼠标指针移入此组件的边界内时执行的脚本代码。
#@EN@ Mouse Move Script
TableColumnBase_onMouseMove_displayName=移动鼠标脚本
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
TableColumnBase_onMouseMove_shortDescription=当用户将鼠标指针移动到组件上方时执行的脚本代码。
#@EN@ Empty Cell
TableColumnBase_emptyCell_displayName=空单元格
#@EN@ Use the emptyCell attribute to cause a theme-specific image to be   displayed when the content of a table cell is not applicable or is unexpectedly   empty
TableColumnBase_emptyCell_shortDescription=使用 emptyCell 属性可在表单元格内容不适用或意外为空时显示特定于主题的图像
#@EN@ Visible
TableColumnBase_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
TableColumnBase_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ Key Down Script
TableColumnBase_onKeyDown_displayName=按下键脚本
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
TableColumnBase_onKeyDown_shortDescription=当组件具有焦点且用户按下某个键时执行的脚本代码。
#@EN@ header Text
TableColumnBase_headerText_displayName=标题文本
#@EN@ The text to be displayed in the column header. 
TableColumnBase_headerText_shortDescription=要在列标题中显示的文本。
#@EN@ Alarm
Alarm_displayName=警报
#@EN@ The Alarm component is used to display a theme-specific image to indicate    the condition of an object. 
Alarm_shortDescription=  警报组件用于显示特定于主题的图像以指示对象条件。
#@EN@ Tool Tip
Alarm_toolTip_displayName=工具提示
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
Alarm_toolTip_shortDescription=为 HTML 元素设置 title 属性的值。如果将鼠标光标悬停在该 HTML 元素上，则指定的文本将作为工具提示进行显示。
#@EN@ Mouse Down Script
Alarm_onMouseDown_displayName=按下鼠标脚本
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
Alarm_onMouseDown_shortDescription=当鼠标指针位于组件上且用户按下鼠标按钮时执行的脚本代码。
#@EN@ Value
Alarm_value_displayName=值
#@EN@ The current value of this component
Alarm_value_shortDescription=此组件的当前值
#@EN@ Double Click Script
Alarm_onDblClick_displayName=双击脚本
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
Alarm_onDblClick_shortDescription=用鼠标双击此组件时执行的脚本代码。
#@EN@ Key Press Script
Alarm_onKeyPress_displayName=按键脚本
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
Alarm_onKeyPress_shortDescription=当组件具有焦点且用户按下并释放某个键时执行的脚本代码。
#@EN@ Severity
Alarm_severity_displayName=严重性
#@EN@ Specifies the severity of the alarm
Alarm_severity_shortDescription=指定警报的严重性
#@EN@ Indicators
Alarm_indicators_displayName=指示符
#@EN@ A developer define types of Alarm
Alarm_indicators_shortDescription=开发者定义的警报类型
#@EN@ Mouse Out Script
Alarm_onMouseOut_displayName=移开鼠标脚本
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
Alarm_onMouseOut_shortDescription=将鼠标指针从此组件上方移开时执行的脚本代码。
#@EN@ Rendered Flag
Alarm_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Alarm_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Alt Text
Alarm_alt_displayName=替代文本
#@EN@ Alternative textual description of the image rendered by this component
Alarm_alt_shortDescription=此组件呈现的图像的替代文本描述
#@EN@ Component Identifier
Alarm_id_displayName=组件标识符
#@EN@ The component identifier for this component
Alarm_id_shortDescription=此组件的组件标识符
#@EN@ Mouse In Script
Alarm_onMouseOver_displayName=移入鼠标脚本
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
Alarm_onMouseOver_shortDescription=当用户将鼠标指针移入此组件的边界内时执行的脚本代码。
#@EN@ HTML Template
Alarm_htmlTemplate_displayName=HTML 模板
#@EN@ Alternative HTML template to be used by this component. 
Alarm_htmlTemplate_shortDescription=此组件使用的替代 HTML 模板。
#@EN@ Key Up Script
Alarm_onKeyUp_displayName=释放键脚本
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
Alarm_onKeyUp_shortDescription=当组件具有焦点且用户释放某个键时执行的脚本代码。
#@EN@ Mouse Move Script
Alarm_onMouseMove_displayName=移动鼠标脚本
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
Alarm_onMouseMove_shortDescription=当用户将鼠标指针移动到组件上方时执行的脚本代码。
#@EN@ Mouse Up Script
Alarm_onMouseUp_displayName=释放鼠标脚本
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
Alarm_onMouseUp_shortDescription=当鼠标指针位于组件上且用户释放鼠标按钮时执行的脚本代码。
#@EN@ CSS Style Class(es)
Alarm_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Alarm_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Alarm Text
Alarm_text_displayName=警报文本
#@EN@ The text description of the alarm. 
Alarm_text_shortDescription=警报的文本描述。
#@EN@ Visible
Alarm_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
Alarm_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ CSS Style(s)
Alarm_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Alarm_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Key Down Script
Alarm_onKeyDown_displayName=按下键脚本
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
Alarm_onKeyDown_shortDescription=当组件具有焦点且用户按下某个键时执行的脚本代码。
#@EN@ Click Script
Alarm_onClick_displayName=单击脚本
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
Alarm_onClick_shortDescription=用鼠标单击此组件时执行的脚本代码。
#@EN@ Text Position
Alarm_textPosition_displayName=文本位置
#@EN@ Specifies where the text will be placed relative to the image
Alarm_textPosition_shortDescription=指定文本相对于图像的放置位置
#@EN@ Menu
Menu_displayName=Menu
#@EN@ This class represents a Menu component.  The class inherits from the com.sun.webui.jsf.component.WebUIInput  and implements javax.faces.component.ActionSource2.
Menu_shortDescription=  此类表示一个菜单组件。该类继承了 com.sun.webui.jsf.component.WebUIInput 并实现了 javax.faces.component.ActionSource2。
#@EN@ Submit the Page on Change
Menu_submitForm_displayName=更改时提交页
#@EN@ When the submitForm attribute is set to true,  the form is immediately submitted when the user changes the  selection in the menu. 
Menu_submitForm_shortDescription=如果将 submitForm 属性设置为 true，则在用户更改菜单中的选择内容时会立即提交表单。
#@EN@ Mouse Down Script
Menu_onMouseDown_displayName=按下鼠标脚本
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
Menu_onMouseDown_shortDescription=当鼠标指针位于组件上且用户按下鼠标按钮时执行的脚本代码。
#@EN@ Double Click Script
Menu_onDblClick_displayName=双击脚本
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
Menu_onDblClick_shortDescription=用鼠标双击此组件时执行的脚本代码。
#@EN@ Key Press Script
Menu_onKeyPress_displayName=按键脚本
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
Menu_onKeyPress_shortDescription=当组件具有焦点且用户按下并释放某个键时执行的脚本代码。
#@EN@ Mouse Out Script
Menu_onMouseOut_displayName=移开鼠标脚本
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
Menu_onMouseOut_shortDescription=将鼠标指针从此组件上方移开时执行的脚本代码。
#@EN@ Rendered Flag
Menu_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Menu_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Component Identifier
Menu_id_displayName=组件标识符
#@EN@ The component identifier for this component
Menu_id_shortDescription=此组件的组件标识符
#@EN@ Mouse In Script
Menu_onMouseOver_displayName=移入鼠标脚本
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
Menu_onMouseOver_shortDescription=当用户将鼠标指针移入此组件的边界内时执行的脚本代码。
#@EN@ HTML Template
Menu_htmlTemplate_displayName=HTML 模板
#@EN@ Alternative HTML template to be used by this component. 
Menu_htmlTemplate_shortDescription=此组件使用的替代 HTML 模板。
#@EN@ Key Up Script
Menu_onKeyUp_displayName=释放键脚本
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
Menu_onKeyUp_shortDescription=当组件具有焦点且用户释放某个键时执行的脚本代码。
#@EN@ Mouse Move Script
Menu_onMouseMove_displayName=移动鼠标脚本
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
Menu_onMouseMove_shortDescription=当用户将鼠标指针移动到组件上方时执行的脚本代码。
#@EN@ Mouse Up Script
Menu_onMouseUp_displayName=释放鼠标脚本
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
Menu_onMouseUp_shortDescription=当鼠标指针位于组件上且用户释放鼠标按钮时执行的脚本代码。
#@EN@ CSS Style Class(es)
Menu_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this  component is rendered. 
Menu_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Items
Menu_items_displayName=项
#@EN@ Specifies the items that the web application user can choose  from
Menu_items_shortDescription=指定 Web 应用程序用户可以从中选择的项
#@EN@ Value Change Script
Menu_onChange_displayName=值更改脚本
#@EN@ Scripting code executed when the element value of this component is changed. 
Menu_onChange_shortDescription=更改此组件的元素值时执行的脚本代码。
#@EN@ CSS Style(s)
Menu_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this  component is rendered. 
Menu_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Visible
Menu_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
Menu_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ Key Down Script
Menu_onKeyDown_displayName=按下键脚本
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
Menu_onKeyDown_shortDescription=当组件具有焦点且用户按下某个键时执行的脚本代码。
#@EN@ Click Script
Menu_onClick_displayName=单击脚本
#@EN@ Scripting code executed when a mouse click  occurs over this component.The Menu element has a function called  getSelectedOption which can be invoked by onClick function handlers  to know which option has been selected
Menu_onClick_shortDescription=用鼠标单击此组件时执行的脚本代码。Menu 元素有一个名为 getSelectedOption 的函数，onClick 函数处理程序可调用此函数以了解选定的选项
#@EN@ Immediate
EventSourceImpl_immediate_displayName=立即
#@EN@ The immediate flag. 
EventSourceImpl_immediate_shortDescription=立即标志。
#@LC@ ### New message ###
#@EN@ PhaseId
EventSourceImpl_phaseId_displayName=PhaseId
#@LC@ ### New message ###
#@EN@ The PhaseId in which events should be broadcast.  The default is PhaseId.INVOKE_APPLICATION or  PhaseId.ANY if isImmediate returns   true 
EventSourceImpl_phaseId_shortDescription=应在其中广播事件的 PhaseId。缺省值为 PhaseId.INVOKE_APPLICATION，或者如果 isImmediate 返回 true，则其值为 PhaseId.ANY
#@EN@ Menu Event Listener Expression
EventSourceImpl_eventListenerExpression_displayName=菜单事件侦听程序表达式
#@EN@ The EventListenerExpression attribute is used to specify a method to handle  an menu event that is triggered when this  component is activated by the user
EventSourceImpl_eventListenerExpression_shortDescription=EventListenerExpression 属性用于指定方法以处理在用户激活此组件时触发的菜单事件
#@EN@ Menu Event Expression
EventSourceImpl_eventExpression_displayName=菜单事件表达式
#@EN@ The {@link MethodExpression} that, when invoked, yields a  literal outcome value. 
EventSourceImpl_eventExpression_shortDescription=调用此表达式时，{@link MethodExpression} 将生成一个文字结果值。
#@EN@ Wizard Step
WizardStep_displayName=向导步骤
#@EN@ The WizardStep component represents a single step in a Wizard component  step sequence
WizardStep_shortDescription=WizardStep 组件表示向导组件步骤顺序中的单个步骤
#@EN@ summary
WizardStep_summary_displayName=summary
#@EN@ A brief description of this step, to be used in the numbered  list of steps in the Steps pane. 
WizardStep_summary_shortDescription=此步骤的简短描述，用于“步骤”窗格的步骤编号列表中。
#@EN@ Cancel Script
WizardStep_onCancel_displayName=取消脚本
#@EN@ Scripting code executed when the Cancel button is clicked. 
WizardStep_onCancel_shortDescription=单击“取消”按钮时执行的脚本代码。
#@EN@ title
WizardStep_title_displayName=title
#@EN@ A descriptive title to be displayed as the Step Title  in the Step Content pane
WizardStep_title_shortDescription=“步骤内容”窗格中显示为“步骤标题”的描述性标题
#@EN@ detail
WizardStep_detail_displayName=detail
#@EN@ The detail attribute supplies the text that is to be  displayed in the Step Instructions area, before the input components  of the Step Content pane
WizardStep_detail_shortDescription=detail 属性提供在“步骤说明”区域中显示的文本（位于“步骤内容”窗格的输入组件之前）
#@EN@ Finish Script
WizardStep_onFinish_displayName=完成脚本
#@EN@ Scripting code executed when the Finish button is clicked. 
WizardStep_onFinish_shortDescription=单击“完成”按钮时执行的脚本代码。
#@EN@ Next Script
WizardStep_onNext_displayName=下一步脚本
#@EN@ Scripting code executed when the Next button is clicked. 
WizardStep_onNext_shortDescription=单击“下一步”按钮时执行的脚本代码。
#@EN@ Step Link Script
WizardStep_onStepLink_displayName=步骤链接脚本
#@EN@ Scripting code executed when a Step link is clicked. 
WizardStep_onStepLink_shortDescription=单击步骤链接时执行的脚本代码。
#@EN@ Rendered Flag
WizardStep_rendered_displayName=呈现标志
#@EN@ Indicates whether the HTML code for the component should be included in the rendered HTML page
WizardStep_rendered_shortDescription=指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Component Identifier
WizardStep_id_displayName=组件标识符
#@EN@ The component identifier for this component
WizardStep_id_shortDescription=此组件的组件标识符
#@EN@ Close Script
WizardStep_onClose_displayName=关闭脚本
#@EN@ Scripting code executed when the Close button is clicked. 
WizardStep_onClose_shortDescription=单击“关闭”按钮时执行的脚本代码。
#@EN@ results
WizardStep_results_displayName=results
#@EN@ Set the results attribute to true when the wizard step  represents the View Results page
WizardStep_results_shortDescription=当向导步骤显示“查看结果”页时，将 results 属性设置为 true
#@EN@ help
WizardStep_help_displayName=help
#@EN@ Descriptive text that provides detailed help to the user  for this step
WizardStep_help_shortDescription=为用户提供此步骤详细帮助的描述性文本
#@EN@ Help Tab Script
WizardStep_onHelpTab_displayName=“帮助”标签脚本
#@EN@ Scripting code executed when the Help tab is clicked. 
WizardStep_onHelpTab_shortDescription=单击“帮助”标签时执行的脚本代码。
#@EN@ finish
WizardStep_finish_displayName=finish
#@EN@ Set the finish attribute to true when the wizard step  represents the Finish step
WizardStep_finish_shortDescription=当向导步骤显示“完成”步骤时，将 finish 属性设置为 true
#@EN@ Wizard Event Listener
WizardStep_eventListener_displayName=向导事件侦听程序
#@EN@ The eventListener attribute is used to specify an  object to handle an event that is triggered when a user activates a   component in the step.  The eventListener attribute value must be a   JavaServer Faces EL expression that resolves to an instance  of com.sun.webui.jsf.event.WizardEventListener.    The return value of the wizard component's call to the  event listener's handleEvent() method controls the   processing of the current step, and determines whether the next step   or a previous step, etc
WizardStep_eventListener_shortDescription=eventListener 属性用于指定对象以处理用户在步骤中激活组件时触发的事件。eventListener 属性值必须是一个结果为 com.sun.webui.jsf.event.WizardEventListener 实例的 JavaServer Faces EL 表达式。向导组件对事件侦听程序的 handleEvent() 方法调用时，其返回值将控制当前步骤的处理，并确定是执行下一步还是执行上一步等操作。
#@EN@ Steps Tab Script
WizardStep_onStepsTab_displayName=“步骤”标签脚本
#@EN@ Scripting code executed when the Steps tab is clicked. 
WizardStep_onStepsTab_shortDescription=单击“步骤”标签时执行的脚本代码。
#@EN@ Previous Script
WizardStep_onPrevious_displayName=上一步脚本
#@EN@ Scripting code executed when the Next button is clicked. 
WizardStep_onPrevious_shortDescription=单击“上一步”按钮时执行的脚本代码。
#@EN@ Page Alert
PageAlert_displayName=页面警报
#@EN@ The PageAlert component displays a full page alert. 
PageAlert_shortDescription=PageAlert 组件将显示完整的页面警报。
#@EN@ Summary Message
PageAlert_summary_displayName=摘要消息
#@EN@ Deprecated.Use the title attribute to display the message summary in the page title. 
PageAlert_summary_shortDescription=已过时。请使用 title 属性在页面标题中显示消息摘要。
#@EN@ CSS Style Class(es)
PageAlert_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
PageAlert_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Alert Type
PageAlert_type_displayName=警报类型
#@EN@ The type or category of alert
PageAlert_type_shortDescription=警报的类型或类别
#@EN@ Title
PageAlert_title_displayName=标题
#@EN@ The text to display as the page title 
PageAlert_title_shortDescription=显示为页面标题的文本 
#@EN@ Detail Message
PageAlert_detail_displayName=详细消息
#@EN@ Detailed message text for the alert
PageAlert_detail_shortDescription=警报的详细消息文本
#@EN@ Visible
PageAlert_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
PageAlert_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ CSS Style(s)
PageAlert_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
PageAlert_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Rendered Flag
PageAlert_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
PageAlert_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Escape
PageAlert_escape_displayName=转义
#@EN@ Flag indicating that the message text should be escaped so that it is   not interpreted by the browser. 
PageAlert_escape_shortDescription=该标志指示应转义消息文本以便浏览器不对其进行解释。
#@EN@ Alt Text
PageAlert_alt_displayName=替代文本
#@EN@ Alternative textual description of the image rendered by this component
PageAlert_alt_shortDescription=此组件呈现的图像的替代文本描述
#@EN@ Tab Index
PageAlert_tabIndex_displayName=Tab 键索引
#@EN@ Position of this element in the tabbing order of the current document
PageAlert_tabIndex_shortDescription=当使用 Tab 键依次浏览时，用于确定此元素在当前文档中所处的位置
#@EN@ Component Identifier
PageAlert_id_displayName=组件标识符
#@EN@ The component identifier for this component
PageAlert_id_shortDescription=此组件的组件标识符
#@EN@ Editable Field
EditableField_displayName=可编辑字段
#@EN@ The EditableField component renders input HTML element that is initially  rendered as readOnly field and becomes editable on certain client events  ( dblclick, space key)    EditableField Component class represents text input element, and it reuses  much of the TextField component functionality, as well as its renderers. 
EditableField_shortDescription=EditableField 组件呈现为输入 HTML 元素，该元素最初呈现为只读字段，当发生特定的客户端事件（例如双击、按空格键）时，它会变为可编辑字段。EditableField 组件类用于表示文本输入元素，它重用了 TextField 组件的大部分功能以及该组件的呈现器。
#@EN@ AutoValidate
EditableField_autoValidate_displayName=AutoValidate
#@EN@ Hide autoValidate.  EditableField provides submit logic on onBlur event,  and having autoValidate as well would be unnecessary  
EditableField_autoValidate_shortDescription=隐藏 autoValidate。由于 EditableField 提供了有关 onBlur 事件的提交逻辑，所以继续使用 autoValidate 是没有必要的
#@EN@ autoSave
EditableField_autoSave_displayName=autoSave
#@EN@ Attribute indicating to turn on/off the autoSave functionality of the EditableField.  When on, an Ajax submit event will be generated every time component looses   focus with modified data
EditableField_autoSave_shortDescription=该属性指示打开/关闭可编辑字段的自动保存功能。当处于打开状态时，每次组件释放所修改数据的焦点时都会生成一个 Ajax 提交事件
#@EN@ Tab
Tab_displayName=标签
#@EN@ The Tab component represents one tab in a tab set
Tab_shortDescription=标签组件表示标签集中的一个标签
#@EN@ Value
Tab_value_displayName=值
#@EN@ The current value of this component
Tab_value_shortDescription=此组件的当前值
#@EN@ text
Tab_text_displayName=文本
#@EN@ The display label for this tab
Tab_text_shortDescription=此标签的显示标签
#@EN@ Double Click Script
Tab_onDblClick_displayName=双击脚本
#@EN@ Scripting code executed when a mouse double click occurs over this  component. 
Tab_onDblClick_shortDescription=用鼠标双击此组件时执行的脚本代码。
#@EN@ selectedChildId
Tab_selectedChildId_displayName=selectedChildId
#@EN@ The id of this tab's currently selected Tab child or null if one is not  selected. 
Tab_selectedChildId_shortDescription=该标签的当前选定子标签的 id，如果未选定，则为 null。
#@EN@ Notification Phrase
NotificationPhrase_displayName=通知短语
#@EN@ The NotificationPhrase component is used to display a message in the   masthead.    @deprecated See tld docs for more information on how to create a   notificationPhrase without using the notificationPhrase component. 
NotificationPhrase_shortDescription=NotificationPhrase 组件用于在标题中显示消息。有关如何在不使用 notificationPhrase 组件的情况下创建 notificationPhrase 的更多信息，@deprecated @see tld 文档 
#@EN@ Double Click Script
NotificationPhrase_onDblClick_displayName=双击脚本
#@EN@ Scripting code executed when a mouse double click occurs over this component. 
NotificationPhrase_onDblClick_shortDescription=用鼠标双击此组件时执行的脚本代码。
#@EN@ Inline Help
HelpInline_displayName=内联帮助
#@EN@ The HelpInline component is used to display inline help at the page and field  level. 
HelpInline_shortDescription=HelpInline 组件用于在页面和字段级别显示内联帮助。
#@EN@ Value
HelpInline_value_displayName=值
#@EN@ The current value of this component
HelpInline_value_shortDescription=此组件的当前值
#@EN@ CSS Style Class(es)
HelpInline_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
HelpInline_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ text
HelpInline_text_displayName=文本
#@EN@ The inline help text to display. 
HelpInline_text_shortDescription=要显示的内联帮助文本。
#@EN@ Converter
HelpInline_converter_displayName=转换器
#@EN@ The converter attribute is used to specify a method to translate native  property values to String and back for this component
HelpInline_converter_shortDescription=converter 属性用于指定一个转换方法，以便为此组件实现自身属性值与 String 属性值之间的转换
#@EN@ Type of Help
HelpInline_type_displayName=帮助类型
#@EN@ The type of inline help to display
HelpInline_type_shortDescription=要显示的内联帮助类型
#@EN@ Visible
HelpInline_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
HelpInline_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ CSS Style(s)
HelpInline_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
HelpInline_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Rendered Flag
HelpInline_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
HelpInline_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Component Identifier
HelpInline_id_displayName=组件标识符
#@EN@ The component identifier for this component
HelpInline_id_shortDescription=此组件的组件标识符
#@EN@ Markup
Markup_displayName=标记
#@EN@ The Markup component allows HTML elements to be inserted into the JSP page   where HTML is not permitted inside a JSF tag. 
Markup_shortDescription=标记组件允许将 HTML 元素插入到 JSP 页中，该页不允许在 JSF 标记内使用 HTML。
#@EN@ CSS Style Class(es)
Markup_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Markup_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Single Tag
Markup_singleton_displayName=单个标记
#@EN@ Flag indicating that tag is a singleton tag and that it should end with  a trailing / 
Markup_singleton_shortDescription=该标志指示这是单个标记，并且应该以 &quot;/&quot; 结束 
#@EN@ Extra Attributes
Markup_extraAttributes_displayName=附加属性
#@EN@ Add the rest of the attribute name=&quot;value&quot; type pairs inside this   attribute
Markup_extraAttributes_shortDescription=可以在此属性中添加其他的“属性名称=值”类型对
#@EN@ Tag Name
Markup_tag_displayName=标记名称
#@EN@ Name of the HTML element to render. 
Markup_tag_shortDescription=要呈现的 HTML 元素的名称。
#@EN@ CSS Style(s)
Markup_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Markup_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Rendered Flag
Markup_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Markup_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Component Identifier
Markup_id_displayName=组件标识符
#@EN@ The component identifier for this component
Markup_id_shortDescription=此组件的组件标识符
#@EN@ Common Tasks Section
CommonTasksSection_displayName=常见任务部分
#@EN@ The CommonTasksSection component is used to present a number  of tasks that might commonly be performed by the user. 
CommonTasksSection_shortDescription=CommonTasksSection 组件用于表示用户通常可能会执行的一些任务。
#@EN@ CSS Style Class(es)
CommonTasksSection_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
CommonTasksSection_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Common Tasks section Text
CommonTasksSection_title_displayName=常见任务部分文本
#@EN@ The title text to be displayed for the common tasks section. 
CommonTasksSection_title_shortDescription=为常见任务部分显示的标题文本。
#@EN@ Visible
CommonTasksSection_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
CommonTasksSection_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ CSS Style(s)
CommonTasksSection_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
CommonTasksSection_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Rendered Flag
CommonTasksSection_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
CommonTasksSection_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ columns
CommonTasksSection_columns_displayName=列数
#@EN@ Specify the number of task columns to display in the common tasks section.   
CommonTasksSection_columns_shortDescription=指定在常见任务部分中显示的任务列数。
#@EN@ Component Identifier
CommonTasksSection_id_displayName=组件标识符
#@EN@ The component identifier for this component
CommonTasksSection_id_shortDescription=此组件的组件标识符
#@EN@ Inline help to be displayed
CommonTasksSection_helpText_displayName=要显示的内联帮助
#@EN@ The help text to be displayed for the common tasks section. 
CommonTasksSection_helpText_shortDescription=为常见任务部分显示的帮助文本。
#@EN@ Label
Label_displayName=标签
#@EN@ The Label component displays a label for a component and  implements methods to aid a Label renderer to   render error and required indicators  based on the state of the labeled component.    A distinction is made between the component that is identified as the  target of the for attribute and the component that is  used to determine the status of the indicators
Label_shortDescription=标签组件显示一个组件的标签并实现一些方法，这些方法将根据使用标签的组件的状态，帮助标签呈现器呈现错误的和必需的指示符。将区别对待被标识为 for 属性目标的组件与用于确定指示符状态的组件
#@EN@ Tool Tip
Label_toolTip_displayName=工具提示
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
Label_toolTip_shortDescription=为 HTML 元素设置 title 属性的值。如果将鼠标光标悬停在该 HTML 元素上，则指定的文本将作为工具提示进行显示。
#@EN@ Mouse Down Script
Label_onMouseDown_displayName=按下鼠标脚本
#@EN@ Scripting code executed when the user presses a mouse button   while the mouse pointer is on the component. 
Label_onMouseDown_shortDescription=当鼠标指针位于组件上且用户按下鼠标按钮时执行的脚本代码。
#@EN@ Value
Label_value_displayName=值
#@EN@ The current value of this component
Label_value_shortDescription=此组件的当前值
#@EN@ Hide the Required and Invalid icons
Label_hideIndicators_displayName=隐藏必需和无效的图标
#@EN@ Use the hideIndicators attribute to prevent display of the  required and invalid icons with the label
Label_hideIndicators_shortDescription=使用 hideIndicators 属性可防止显示带有标签的必需图标和无效图标
#@EN@ Mouse Out Script
Label_onMouseOut_displayName=移开鼠标脚本
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
Label_onMouseOut_shortDescription=将鼠标指针从此组件上方移开时执行的脚本代码。
#@EN@ Required Field Indicator
Label_requiredIndicator_displayName=必填字段指示符
#@EN@ Flag indicating that the labeled component should be marked as  required
Label_requiredIndicator_shortDescription=该标志指示应将带标签的组件标记为必需组件
#@EN@ indicatorComponent
Label_indicatorComponent_displayName=indicatorComponent
#@EN@ The component instance to be used to determine the status of the  required and error indicators. 
Label_indicatorComponent_shortDescription=此组件实例用于确定必需的和错误的指示符状态。
#@EN@ Mouse In Script
Label_onMouseOver_displayName=移入鼠标脚本
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
Label_onMouseOver_shortDescription=当用户将鼠标指针移入此组件的边界内时执行的脚本代码。
#@EN@ HTML Template
Label_htmlTemplate_displayName=HTML 模板
#@EN@ Alternative HTML template to be used by this component
Label_htmlTemplate_shortDescription=此组件使用的替代 HTML 模板
#@EN@ Mouse Move Script
Label_onMouseMove_displayName=移动鼠标脚本
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
Label_onMouseMove_shortDescription=当用户将鼠标指针移动到组件上方时执行的脚本代码。
#@EN@ Mouse Up Script
Label_onMouseUp_displayName=释放鼠标脚本
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
Label_onMouseUp_shortDescription=当鼠标指针位于组件上且用户释放鼠标按钮时执行的脚本代码。
#@EN@ CSS Style Class(es)
Label_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Label_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Label Text
Label_text_displayName=标签文本
#@EN@ The label text to be displayed for this label
Label_text_shortDescription=为此标签显示的标签文本
#@EN@ Visible
Label_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
Label_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ CSS Style(s)
Label_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Label_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Style Level
Label_labelLevel_displayName=样式级别
#@EN@ Style level for this label, where lower values typically specify  progressively larger font sizes, and/or bolder font weights.  Valid values are 1, 2, and 3
Label_labelLevel_shortDescription=此标签的样式级别，通常，值越小，指定的字体越大并且/或越粗。有效值是 1、2 和 3
#@EN@ Click Script
Label_onClick_displayName=单击脚本
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
Label_onClick_shortDescription=用鼠标单击此组件时执行的脚本代码。
#@EN@ Input Component
Label_for_displayName=输入组件
#@EN@ Use this attribute to specify the labeled component
Label_for_shortDescription=使用此属性可指定带标签的组件
#@EN@ Time
Time_displayName=时间
#@EN@ This component is for internal use only 
Time_shortDescription=此组件仅供内部使用 
#@EN@ Time Zone
Time_timeZone_displayName=时区
#@EN@ Time Zone
Time_timeZone_shortDescription=时区
#@EN@ CSS Style Class(es)
Time_styleClass_displayName=CSS 样式类
#@EN@ CSS Style Class(es)
Time_styleClass_shortDescription=CSS 样式类
#@EN@ Disabled
Time_disabled_displayName=禁用
#@EN@ Disabled
Time_disabled_shortDescription=禁用
#@EN@ Visible
Time_visible_displayName=可见
#@EN@ Visible
Time_visible_shortDescription=可见
#@EN@ CSS Style(s)
Time_style_displayName=CSS 样式
#@EN@ CSS Style(s)
Time_style_shortDescription=CSS 样式
#@EN@ Read-only
Time_readOnly_displayName=只读
#@EN@ Read-only
Time_readOnly_shortDescription=只读
#@EN@ Tab Index
Time_tabIndex_displayName=Tab 键索引
#@EN@ Tab Index
Time_tabIndex_shortDescription=Tab 键索引
#@EN@ Calendar
Calendar_displayName=日历
#@EN@ The Calendar component is used to allow a user to select a date. 
Calendar_shortDescription=用户可通过日历组件来选择日期。
#@EN@ Date Format Pattern
Calendar_dateFormatPattern_displayName=日期格式模式
#@EN@ The date format pattern to use (e.g., yyyy-MM-dd).
Calendar_dateFormatPattern_shortDescription=使用的日期格式模式（如 yyyy-MM-dd）。
#@EN@ Time Zone
Calendar_timeZone_displayName=时区
#@EN@ The java.util.TimeZone used with this  component
Calendar_timeZone_shortDescription=用于此组件的 java.util.TimeZone
#@EN@ Maximum Length
Calendar_maxLength_displayName=最大长度
#@EN@ The maximum number of characters that can be entered for this field. 
Calendar_maxLength_shortDescription=可在此字段中输入的最多字符数。
#@EN@ Last selectable date
Calendar_maxDate_displayName=可选择的最后一个日期
#@EN@ The last selectable date.
Calendar_maxDate_shortDescription=可选择的最后一个日期。
#@EN@ Text
Calendar_text_displayName=text
#@EN@ Literal value to be rendered in this input field.  If this property is specified by a value binding  expression, the corresponding value will be updated  if validation succeeds. 
Calendar_text_shortDescription=在此输入字段中呈现的文字值。如果此属性是由值绑定表达式指定的，并且验证成功，则会更新相应的值。
#@EN@ Trim
Calendar_trim_displayName=截除
#@EN@ Flag indicating that any leading and trailing blanks will be  trimmed prior to conversion to the destination data type.  Default value is true. 
Calendar_trim_shortDescription=该标志指示在转换为目标数据类型之前截除所有前导空格和结尾空格。缺省值为 true。
#@EN@ Required
Calendar_required_displayName=必需
#@EN@ Flag indicating that an input value for this field is mandatory, and   failure to provide one will trigger a validation error. 
Calendar_required_shortDescription=该标志指示此字段的输入值是必需的，如果未提供输入值，则会触发一个验证错误。
#@EN@ Selected Date
Calendar_selectedDate_displayName=选定日期
#@EN@ The date currently selected.
Calendar_selectedDate_shortDescription=当前选定的日期。
#@EN@ Date Format Pattern Help
Calendar_dateFormatPatternHelp_displayName=日期格式模式帮助
#@EN@ A message below the textfield for the date, indicating the  string format to use when entering a date as text into the  textfield.      The component internally relies on an instance of  java.text.SimpleDateFormat to produce the hint
Calendar_dateFormatPatternHelp_shortDescription=日期文本字段下面的消息，指示在文本字段中将日期作为文本进行输入时使用的字符串格式。该组件在内部依靠 java.text.SimpleDateFormat 实例来生成提示
#@EN@ First selectable date
Calendar_minDate_displayName=可选择的第一个日期
#@EN@ The first selectable date.
Calendar_minDate_shortDescription=可选择的第一个日期。
#@EN@ Tab Set
TabSet_displayName=标签集
#@EN@ A set of one or more tabs
TabSet_shortDescription=一个或多个标签的集合
#@EN@ Value
TabSet_value_displayName=值
#@EN@ The current value of this component. 
TabSet_value_shortDescription=此组件的当前值。
#@EN@ CSS Style Class(es)
TabSet_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this  component is rendered. 
TabSet_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Selected
TabSet_selected_displayName=选定
#@EN@ The id of the selected tab. 
TabSet_selected_shortDescription=选定标签的 id。
#@EN@ Converter
TabSet_converter_displayName=转换器
#@EN@ The converter attribute is used to specify a method to translate native  property values to String and back for this component
TabSet_converter_shortDescription=converter 属性用于指定一个转换方法，以便为此组件实现自身属性值与 String 属性值之间的转换
#@EN@ Required
TabSet_required_displayName=必需
#@EN@ Flag indicating that an input value for this field is mandatory, and   failure to provide one will trigger a validation error. 
TabSet_required_shortDescription=该标志指示此字段的输入值是必需的，如果未提供输入值，则会触发一个验证错误。
#@EN@ Action Listener Expression
TabSet_actionListenerExpression_displayName=操作侦听程序表达式
#@EN@ Set the method expression that identifies a method that handles  the action event fired when one of this tab set's tabs is used to submit  the page
TabSet_actionListenerExpression_shortDescription=设置标识方法的方法表达式，用以处理在使用此标签集的某个标签来提交页面时所触发的操作事件
#@EN@ Validator Expression
TabSet_validatorExpression_displayName=验证器表达式
#@EN@ The validator attribute is used to specify a method in a backing bean to  validate input to the component
TabSet_validatorExpression_shortDescription=validator 属性用于在支持 Bean 中指定一个方法，以此来验证对组件输入的内容
#@EN@ Lightweight Tab Set
TabSet_lite_displayName=轻量标签集
#@EN@ Returns true if the tabs should render in a visually lighter style, with reduced  shading and bolding
TabSet_lite_shortDescription=如果标签应该以更轻量的可视样式（减少了阴影和粗体）呈现，则返回 true
#@EN@ Visible
TabSet_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
TabSet_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ CSS Style(s)
TabSet_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this  component is rendered. 
TabSet_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Mini
TabSet_mini_displayName=迷你
#@EN@ Set this attribute to true in a first level tab set, to create tabs that  have the smaller &quot;mini&quot; tab style
TabSet_mini_shortDescription=如果在第一级别的标签集中将此属性设置为 true，则可创建具有更小“迷你”标签样式的标签
#@EN@ Last Selected Child Saved
TabSet_lastSelectedChildSaved_displayName=保存上次选定的子项
#@EN@ Returns true if the tabs in this tab set should remember  which of their tab children was last selected
TabSet_lastSelectedChildSaved_shortDescription=如果此标签集中的标签应记住上次选定的子标签，则返回 true
#@EN@ Alert
Alert_displayName=警报
#@EN@ The Alert component is used to render an inline alert message. 
Alert_shortDescription=警报组件用于呈现内联警报消息。
#@EN@ Summary Message
Alert_summary_displayName=摘要消息
#@EN@ Summary message text for the alert
Alert_summary_shortDescription=警报的摘要消息文本
#@EN@ Value
Alert_value_displayName=值
#@EN@ The current value of this component
Alert_value_shortDescription=此组件的当前值
#@EN@ Converter
Alert_converter_displayName=转换器
#@EN@ The converter attribute is used to specify a method to translate native  property values to String and back for this component
Alert_converter_shortDescription=converter 属性用于指定一个转换方法，以便为此组件实现自身属性值与 String 属性值之间的转换
#@EN@ Link Action Method Expression
Alert_linkActionExpression_displayName=链接操作方法表达式
#@EN@ The linkActionExpression attribute is used to specify the action to take when the   embedded hyperlink component is activated by the user
Alert_linkActionExpression_shortDescription=linkActionExpression 属性用于指定在用户激活嵌入式超级链接组件时执行的操作
#@EN@ Link Tooltip
Alert_linkToolTip_displayName=链接工具提示
#@EN@ Sets the value of the title attribute for the HTML element
Alert_linkToolTip_shortDescription=为 HTML 元素设置 title 属性的值
#@EN@ Alert Type
Alert_type_displayName=警报类型
#@EN@ The type or category of alert
Alert_type_shortDescription=警报的类型或类别
#@EN@ Detail Message
Alert_detail_displayName=详细消息
#@EN@ Optional detailed message text for the alert
Alert_detail_shortDescription=警报的详细消息文本（可选）
#@EN@ Indicators
Alert_indicators_displayName=指示符
#@EN@ A developer define types of Alert
Alert_indicators_shortDescription=开发者定义的警报类型
#@EN@ Link URL
Alert_linkURL_displayName=链接 URL
#@EN@ Absolute, relative, or context relative (starting with &quot;/&quot;) URL to the   resource to navigate to when the link that is specified with linkText is selected. 
Alert_linkURL_shortDescription=当选择 linkText 中指定的链接时，导航至指向资源的绝对、相对或上下文相对（以 &quot;/&quot; 开头）URL。
#@EN@ Alt Text
Alert_alt_displayName=替代文本
#@EN@ Alternative textual description of the image rendered by this component
Alert_alt_shortDescription=此组件呈现的图像的替代文本描述
#@EN@ HTML Template
Alert_htmlTemplate_displayName=HTML 模板
#@EN@ Alternative HTML template to be used by this component. 
Alert_htmlTemplate_shortDescription=此组件使用的替代 HTML 模板。
#@EN@ Link Target
Alert_linkTarget_displayName=链接目标
#@EN@ The window (target) in which to load the link that is specified with linkText. 
Alert_linkTarget_shortDescription=用于装入使用 linkText 指定的链接的窗口（目标）。
#@EN@ CSS Style Class(es)
Alert_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Alert_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Visible
Alert_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
Alert_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ CSS Style(s)
Alert_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Alert_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Link Text
Alert_linkText_displayName=链接文本
#@EN@ The text for an optional link that is appended to the detail message. 
Alert_linkText_shortDescription=附加到详细消息的可选链接的文本。
#@EN@ Tab Index
Alert_tabIndex_displayName=Tab 键索引
#@EN@ Position of this element in the tabbing order of the current document
Alert_tabIndex_shortDescription=当使用 Tab 键依次浏览时，用于确定此元素在当前文档中所处的位置
#@EN@ Common Tasks Group
CommonTasksGroup_displayName=常见任务组
#@EN@ The CommonTasksGroup component is used to group related CommonTasks  in a CommonTasksSection component. 
CommonTasksGroup_shortDescription=CommonTasksGroup 组件用于对 CommonTasksSection 组件中的相关 CommonTask 进行分组。
#@EN@ CSS Style Class(es)
CommonTasksGroup_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
CommonTasksGroup_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Common Tasks Group Text
CommonTasksGroup_title_displayName=常见任务组文本
#@EN@ The title text to be displayed for the common tasks group. 
CommonTasksGroup_title_shortDescription=为常见任务组显示的标题文本。
#@EN@ Visible
CommonTasksGroup_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
CommonTasksGroup_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ CSS Style(s)
CommonTasksGroup_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
CommonTasksGroup_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Rendered Flag
CommonTasksGroup_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
CommonTasksGroup_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Component Identifier
CommonTasksGroup_id_displayName=组件标识符
#@EN@ The component identifier for this component
CommonTasksGroup_id_shortDescription=此组件的组件标识符
#@EN@ Body
Body_displayName=主体
#@EN@ The Body component is used to contain the other components of the page. 
Body_shortDescription=主体组件用于包含页面的其他组件。
#@EN@ Mouse Down Script
Body_onMouseDown_displayName=按下鼠标脚本
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
Body_onMouseDown_shortDescription=当鼠标指针位于组件上且用户按下鼠标按钮时执行的脚本代码。
#@EN@ Image URL
Body_imageURL_displayName=图像 URL
#@EN@ The path to an image to be used as a background for the page
Body_imageURL_shortDescription=用作页面背景的图像的路径
#@EN@ Double Click Script
Body_onDblClick_displayName=双击脚本
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
Body_onDblClick_shortDescription=用鼠标双击此组件时执行的脚本代码。
#@EN@ Onload Script
Body_onLoad_displayName=装入脚本
#@EN@ Scripting code executed when when this page is loaded in a browser. 
Body_onLoad_shortDescription=在浏览器中装入此页面时执行的脚本代码。
#@EN@ Key Press Script
Body_onKeyPress_displayName=按键脚本
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
Body_onKeyPress_shortDescription=当组件具有焦点且用户按下并释放某个键时执行的脚本代码。
#@EN@ Unload Script
Body_onUnload_displayName=卸载脚本
#@EN@ Scripting code executed when this page is unloaded from a browser as a user exits the page. 
Body_onUnload_shortDescription=从浏览器中卸载此页面（用户退出该页面）时执行的脚本代码。
#@EN@ Focus Script
Body_onFocus_displayName=焦点脚本
#@EN@ Scripting code executed when this component  receives focus
Body_onFocus_shortDescription=此组件获取焦点时执行的脚本代码。
#@EN@ Mouse Out Script
Body_onMouseOut_displayName=移开鼠标脚本
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
Body_onMouseOut_shortDescription=将鼠标指针从此组件上方移开时执行的脚本代码。
#@EN@ Rendered Flag
Body_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Body_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Preserve Focus
Body_preserveFocus_displayName=保留焦点
#@EN@ Use the preserveFocus attribute to indicate whether the last   element to have the focus, receives the focus the  next time the page is rendered
Body_preserveFocus_shortDescription=使用 preserveFocus 属性指示在下次呈现页面时是否让最后一个元素拥有焦点、接收焦点
#@EN@ Component to receive focus
Body_focus_displayName=获取焦点的组件
#@EN@ Specify the ID of the component that should receive   focus when the page is loaded
Body_focus_shortDescription=指定在装入页面时应该获取焦点的组件的 ID
#@EN@ Component Identifier
Body_id_displayName=组件标识符
#@EN@ The component identifier for this component
Body_id_shortDescription=此组件的组件标识符
#@EN@ Mouse In Script
Body_onMouseOver_displayName=移入鼠标脚本
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
Body_onMouseOver_shortDescription=当用户将鼠标指针移入此组件的边界内时执行的脚本代码。
#@EN@ Key Up Script
Body_onKeyUp_displayName=释放键脚本
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
Body_onKeyUp_shortDescription=当组件具有焦点且用户释放某个键时执行的脚本代码。
#@EN@ Mouse Move Script
Body_onMouseMove_displayName=移动鼠标脚本
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
Body_onMouseMove_shortDescription=当用户将鼠标指针移动到组件上方时执行的脚本代码。
#@EN@ Mouse Up Script
Body_onMouseUp_displayName=释放鼠标脚本
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
Body_onMouseUp_shortDescription=当鼠标指针位于组件上且用户释放鼠标按钮时执行的脚本代码。
#@EN@ CSS Style Class(es)
Body_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Body_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@LC@ ### New message ###
#@EN@ Preserve Scroll Position
Body_preserveScroll_displayName=保留滚动条位置
#@LC@ ### New message ###
#@EN@ Use the preserveScroll attribute to indicate whether the page  should remember the scroll position when navigating to and from  the page
Body_preserveScroll_shortDescription=使用 preserveScroll 属性可以指示当您在该页面中导航时页面是否应记住滚动条位置
#@EN@ Visible
Body_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
Body_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ CSS Style(s)
Body_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Body_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Key Down Script
Body_onKeyDown_displayName=按下键脚本
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
Body_onKeyDown_shortDescription=当组件具有焦点且用户按下某个键时执行的脚本代码。
#@EN@ Click Script
Body_onClick_displayName=单击脚本
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
Body_onClick_shortDescription=用鼠标单击此组件时执行的脚本代码。
#@EN@ Blur Script
Body_onBlur_displayName=模糊脚本
#@EN@ Scripting code executed when this element loses focus. 
Body_onBlur_shortDescription=此元素失去焦点时执行的脚本代码。
#@EN@ Breadcrumbs
Breadcrumbs_displayName=Breadcrumbs
#@EN@ The Breadcrumbs component is used to display a list of hyperlinks, as an aid to  navigation.   Breadcrumbs show the user's location within an application, and the physical   or logical path to the current page
Breadcrumbs_shortDescription=Breadcrumbs 组件用于显示超级链接列表以帮助助导航。Breadcrumbs 可显示用户在应用程序中的位置，以及当前页的物理或逻辑路径
#@EN@ CSS Style Class(es)
Breadcrumbs_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Breadcrumbs_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Pages
Breadcrumbs_pages_displayName=页面
#@EN@ An array of zero or more Hyperlink components that constitute the current  path
Breadcrumbs_pages_shortDescription=构成当前路径的零个或多个超级链接组件的阵列
#@EN@ Immediate
Breadcrumbs_immediate_displayName=立即
#@EN@ Indicates whether actions should be handled immediately when generated by   hyperlinks that are part of this component
Breadcrumbs_immediate_shortDescription=指示作为此组件一部分的超级链接在生成操作时是否应该立即对该操作进行处理
#@EN@ Visible
Breadcrumbs_visible_displayName=可见
#@EN@ Indicates whether the component and its child components should be viewable   by the user in the rendered HTML page
Breadcrumbs_visible_shortDescription=指示用户在呈现的 HTML 页中能否看见组件及其子组件
#@EN@ CSS Style(s)
Breadcrumbs_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Breadcrumbs_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Rendered Flag
Breadcrumbs_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Breadcrumbs_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Tab Index
Breadcrumbs_tabIndex_displayName=Tab 键索引
#@EN@ Position of this element in the tabbing order of the current document
Breadcrumbs_tabIndex_shortDescription=当使用 Tab 键依次浏览时，用于确定此元素在当前文档中所处的位置
#@EN@ Component Identifier
Breadcrumbs_id_displayName=组件标识符
#@EN@ The component identifier for this component
Breadcrumbs_id_shortDescription=此组件的组件标识符
#@EN@ Message
Message_displayName=消息
#@EN@ The Message component is used to display error and warning messages for   another component. 
Message_shortDescription=消息组件用于显示其他组件的错误和警告消息。
#@EN@ CSS Style Class(es)
Message_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Message_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Show Summary Message
Message_showSummary_displayName=显示摘要消息
#@EN@ Set this attribute to true to display the summary message. 
Message_showSummary_shortDescription=将此属性设置为 true 可显示摘要消息。
#@EN@ Visible
Message_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
Message_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ CSS Style(s)
Message_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Message_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Rendered Flag
Message_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Message_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Show Detail Message
Message_showDetail_displayName=显示详细消息
#@EN@ Set this attribute to true to display the detailed message. 
Message_showDetail_shortDescription=将此属性设置为 true 可显示详细消息。
#@EN@ Alt Text
Message_alt_displayName=替代文本
#@EN@ Description of the image rendered by this component
Message_alt_shortDescription=此组件呈现的图像的替代文本描述
#@EN@ Tab Index
Message_tabIndex_displayName=Tab 键索引
#@EN@ Position of this element in the tabbing order of the current document
Message_tabIndex_shortDescription=当使用 Tab 键依次浏览时，用于确定此元素在当前文档中所处的位置
#@EN@ Component Identifier
Message_id_displayName=组件标识符
#@EN@ The component identifier for this component
Message_id_shortDescription=此组件的组件标识符
#@EN@ Input Component
Message_for_displayName=输入组件
#@EN@ Identifier for the component associated with this message component. 
Message_for_shortDescription=与此消息组件关联的组件的标识符。
#@EN@ Masthead
Masthead_displayName=标题
#@EN@ The Masthead component displays a masthead or page banner at the top of the  page. 
Masthead_shortDescription=标题组件在页面顶部显示标题或页面标题。
#@EN@ Alarm Counts
Masthead_alarmCounts_displayName=警报计数
#@EN@ A JavaServer Faces EL expression that resolves to a backing bean or a   backing bean property that is an array of integers that specify the   down, critical, major, and minor alarm counts. 
Masthead_alarmCounts_shortDescription=结果为支持 Bean 或支持 Bean 属性的 JavaServer Faces EL 表达式，它是一个用于指定关闭、紧急、重要和次要警报计数的整型数组。
#@EN@ Rendered Flag
Masthead_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Masthead_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Current User Info Label
Masthead_userInfoLabel_displayName=“当前用户信息”标签
#@EN@ The label text to display for the current User information. 
Masthead_userInfoLabel_shortDescription=显示当前用户信息的标签文本。
#@EN@ Component Identifier
Masthead_id_displayName=组件标识符
#@EN@ The component identifier for this component
Masthead_id_shortDescription=此组件的组件标识符
#@EN@ Date Time
Masthead_dateTime_displayName=日期时间
#@EN@ Set to true to display a date and time stamp in the status area. 
Masthead_dateTime_shortDescription=设置为 true 时可在状态区域中显示日期和时间戳。
#@EN@ Is Secondary
Masthead_secondary_displayName=辅助
#@EN@ Set to true to indicate that the masthead is to be used in a secondary/popup window. 
Masthead_secondary_shortDescription=设置为 true 时可指示在辅助/弹出式窗口中使用标题。
#@EN@ CSS Style Class(es)
Masthead_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Masthead_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Product Image Height
Masthead_productImageHeight_displayName=产品图像高度
#@EN@ The height to use for the Product Name Image, in pixels
Masthead_productImageHeight_shortDescription=产品名称图像的高度（以像素为单位）
#@EN@ Product Image URL
Masthead_productImageURL_displayName=产品图像 URL
#@EN@ The url to the image file to use for the Product Name Image. 
Masthead_productImageURL_shortDescription=产品名称图像的图像文件 URL。
#@EN@ CSS Style(s)
Masthead_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Masthead_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Current Server Info Label
Masthead_serverInfoLabel_displayName=“当前服务器信息”标签
#@EN@ The label text to display for the current Server information. 
Masthead_serverInfoLabel_shortDescription=显示当前服务器信息的标签文本。
#@EN@ Current Server Info
Masthead_serverInfo_displayName=当前服务器信息
#@EN@ Text to display for the current Server information, such as the name   of the server whose data is being displayed. 
Masthead_serverInfo_shortDescription=为当前服务器信息显示的文本，例如正在显示其数据的服务器的名称。
#@EN@ Notification Message
Masthead_notificationMsg_displayName=通知消息
#@EN@ Text to display for the notification info in the status area 
Masthead_notificationMsg_shortDescription=为状态区域中的通知信息显示的文本 
#@EN@ Value
Masthead_value_displayName=值
#@EN@ The current value of this component
Masthead_value_shortDescription=此组件的当前值
#@EN@ Converter
Masthead_converter_displayName=转换器
#@EN@ Converter instance registered with this component.
Masthead_converter_shortDescription=与此组件一起注册的转换器实例。
#@EN@ Current Role Info
Masthead_roleInfo_displayName=当前角色信息
#@EN@ Text to display for the current Role information, such as the name of   the user who is running the application. 
Masthead_roleInfo_shortDescription=为当前角色信息显示的文本，例如正在运行应用程序的用户的名称。
#@EN@ Current User Info
Masthead_userInfo_displayName=当前用户信息
#@EN@ Text to display for the current User information, such as the name of   the user who is running the application. 
Masthead_userInfo_shortDescription=为当前用户信息显示的文本，例如正在运行应用程序的用户的名称。
#@EN@ Brand Image URL
Masthead_brandImageURL_displayName=品牌图像 URL
#@EN@ The url to the image file to use as the Brand Image
Masthead_brandImageURL_shortDescription=用作品牌图像的图像文件 URL
#@EN@ Utility Bar Links
Masthead_utilities_displayName=实用程序栏链接
#@EN@ A JavaServer Faces EL expression that resolves to a backing bean or   a backing bean property that is an array of one or more custom   Hyperlink components to display in the utility bar
Masthead_utilities_shortDescription=结果为支持 Bean 或支持 Bean 属性的 JavaServer Faces EL 表达式，它是一个在实用程序栏中显示的包含一个或多个定制超级链接组件的阵列。
#@EN@ Product Image Description
Masthead_productImageDescription_displayName=产品图像描述
#@EN@ The description for the product name image, used as alt text for the image. 
Masthead_productImageDescription_shortDescription=产品图像的描述，用作图像的替代文本。
#@EN@ Brand Image Width
Masthead_brandImageWidth_displayName=品牌图像宽度
#@EN@ The width to use for the Brand Image, in pixels
Masthead_brandImageWidth_shortDescription=品牌图像的宽度（以像素为单位）
#@EN@ Visible
Masthead_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
Masthead_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ Current Role Info Label
Masthead_roleInfoLabel_displayName=“当前角色信息”标签
#@EN@ The label text to display for the current User information. 
Masthead_roleInfoLabel_shortDescription=显示当前用户信息的标签文本。
#@EN@ Product Image Width
Masthead_productImageWidth_displayName=产品图像宽度
#@EN@ The width to use for the Product Name Image, in pixels
Masthead_productImageWidth_shortDescription=产品名称图像的宽度（以像素为单位）
#@EN@ Brand Image Description
Masthead_brandImageDescription_displayName=品牌图像描述
#@EN@ The description to use for the Brand Image, used as alt text for the image. 
Masthead_brandImageDescription_shortDescription=品牌图像的描述，用作图像的替代文本。
#@EN@ Job Count
Masthead_jobCount_displayName=作业计数
#@EN@ The number of currently executing jobs or tasks
Masthead_jobCount_shortDescription=当前执行的作业或任务数
#@EN@ Brand Image Height
Masthead_brandImageHeight_displayName=品牌图像高度
#@EN@ The height to use for the Brand Image, in pixels
Masthead_brandImageHeight_shortDescription=品牌图像的高度（以像素为单位）
#@EN@ Drop Down List
DropDown_displayName=下拉列表
#@EN@ The DropDown component is used to display a drop down menu to allow  users to select one or more items from a list. 
DropDown_shortDescription=DropDown 组件用于显示一个下拉菜单，允许用户从列表中选择一项或多项。
#@EN@ Tool Tip
DropDown_toolTip_displayName=工具提示
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers  over the HTML element. 
DropDown_toolTip_shortDescription=为 HTML 元素设置 title 属性的值。如果将鼠标光标悬停在该 HTML 元素上，则指定的文本将作为工具提示进行显示。
#@EN@ Submit the Page on Change
DropDown_submitForm_displayName=更改时提交页
#@EN@ When the submitForm attribute is set to true,  the form is immediately submitted when the user changes the  selection in the drop down list. 
DropDown_submitForm_shortDescription=如果将 submitForm 属性设置为 true，则会在用户更改下拉列表中的选择内容时立即提交表单。
#@EN@ HTML Template
DropDown_htmlTemplate_displayName=HTML 模板
#@EN@ Alternative HTML template to be used by this component. 
DropDown_htmlTemplate_shortDescription=此组件使用的替代 HTML 模板。
#@EN@ Value
DropDown_value_displayName=值
#@EN@ The current value of this component
DropDown_value_shortDescription=此组件的当前值
#@EN@ Number of Items to Display
DropDown_rows_displayName=要显示的项数
#@EN@ The number of items to display
DropDown_rows_shortDescription=要显示的项数
#@EN@ Action Expression
DropDown_actionExpression_displayName=操作表达式
#@EN@ The actionExpression attribute is used to specify the action to take when this  component is activated by the user
DropDown_actionExpression_shortDescription=actionExpression 属性用于指定在用户激活此组件时执行的操作
#@EN@ Text Selected Script
DropDown_onSelect_displayName=文本选定脚本
#@EN@ Scripting code executed when some text in this  component value is selected. 
DropDown_onSelect_shortDescription=当选定此组件值中的一些文本时执行的脚本代码。
#@EN@ Action Listener Expression
DropDown_actionListenerExpression_displayName=操作侦听程序表达式
#@EN@ The actionListenerExpression attribute is used to specify a method to handle  an action event that is triggered when this  component is activated by the user
DropDown_actionListenerExpression_shortDescription=actionListenerExpression 属性用于指定方法以处理在用户激活此组件时触发的操作事件
#@EN@ Read-only
DropDown_readOnly_displayName=只读
#@EN@ If this attribute is set to true, the value of the component is  rendered as text, preceded by the label if one was defined.   Deprecated: The attribute is deprecated starting from version 4.1 
DropDown_readOnly_shortDescription=如果将此属性设置为 true，则组件的值将呈现为文本，并在前面显示标签（如果已定义）。@Deprecated：此属性自版本 4.1 起已过时
#@EN@ Navigate to Component Value
DropDown_navigateToValue_displayName=导航至组件值
#@EN@ When this attribute is set to true, the value of the menu selection  is used as the action, to determine which page is displayed next  according to the registered navigation rules
DropDown_navigateToValue_shortDescription=如果将此属性设置为 true，则会使用菜单选择的值作为操作，以便根据注册的导航规则来确定接下来显示的页面
#@EN@ Do not display selected value
DropDown_forgetValue_displayName=不显示选定值
#@EN@ If this flag is set to true, then the component is always  rendered with no initial selection
DropDown_forgetValue_shortDescription=如果将此标志设置为 true，则会始终呈现组件而无需进行初始选择
#@EN@ Checkbox
Checkbox_displayName=复选框
#@EN@ The Checkbox component is used to display a checkbox input element.    The Checkbox can be used as a single checkbox  or one checkbox among a group of checkboxes
Checkbox_shortDescription=复选框组件用于显示复选框输入元素。复选框可用作单个复选框或一组复选框中的某个复选框
#@EN@ HTML Template
Checkbox_htmlTemplate_displayName=HTML 模板
#@EN@ Alternative HTML template to be used by this component. 
Checkbox_htmlTemplate_shortDescription=此组件使用的替代 HTML 模板。
#@EN@ Value
Checkbox_value_displayName=值
#@EN@ The current value of this component
Checkbox_value_shortDescription=此组件的当前值
#@EN@ Required
Checkbox_required_displayName=必需
#@EN@ Flag indicating that an input value for this field is mandatory, and   failure to provide one will trigger a validation error. 
Checkbox_required_shortDescription=该标志指示此字段的输入值是必需的，如果未提供输入值，则会触发一个验证错误。
#@EN@ Items
Checkbox_items_displayName=项
#@EN@ Specifies the options that the web application user can choose  from
Checkbox_items_shortDescription=指定 Web 应用程序用户可以从中进行选择的选项
#@EN@ Label Level
Checkbox_labelLevel_displayName=标签级别
#@EN@ Sets the style level for the generated label, provided the  label attribute has been set
Checkbox_labelLevel_shortDescription=为生成的标签设置样式级别，前提是已设置了 label 属性
#@EN@ imageURL
RbCbSelector_imageURL_displayName=imageURL
#@EN@ A context relative path of an image to be displayed with  the control
RbCbSelector_imageURL_shortDescription=  与控件一起显示的图像的上下文相对路径
#@EN@ Group Name
RbCbSelector_name_displayName=组名
#@EN@ Identifies the control as participating as part  of a group
RbCbSelector_name_shortDescription=  将控件标识为属于组的一部分
#@EN@ selectedValue
RbCbSelector_selectedValue_displayName=selectedValue
#@EN@ Return the value of the selectedValue property.  If selectedValue is null, then a Boolean  true instance is returned and the control will behave as a  boolean control. 
RbCbSelector_selectedValue_shortDescription=返回 selectedValue 属性的值。如果 selectedValue 为 null，则返回一个布尔型 true 实例，控件的行为将等同于布尔控件。
#@EN@ Selected
RbCbSelector_selected_displayName=选定
#@EN@ The object that represents the selections made from the  available options
RbCbSelector_selected_shortDescription=该对象表示从可用选项中选择的内容
#@EN@ AccordionTab
AccordionTab_displayName=AccordionTab
#@EN@ An accordion tab component
AccordionTab_shortDescription=可折叠面板集合的标签组件
#@EN@ Multiple tab selected
AccordionTab_multipleSelect_displayName=选择多个标签
#@EN@ This attribute is to handle the case where the AccordionTab is itself  a container of AccordionTabs.  Returns true if multiple tabs can be selected at the same time.  By default this is set to false and only one accordion tab can be  selected at any given time
AccordionTab_multipleSelect_shortDescription=此属性用于处理 AccordionTab 本身是 AccordionTabs 容器的情况。如果可以同时选择多个标签，则返回 true。缺省情况下，该值被设置为 false 并且在任何指定的时间内，只能选择一个可折叠面板集合的标签
#@EN@ Tab Content Height
AccordionTab_contentHeight_displayName=标签内容高度
#@EN@ Height of each tab content
AccordionTab_contentHeight_shortDescription=每个标签内容的高度
#@EN@ HTML Template
TabContent_htmlTemplate_displayName=HTML 模板
#@EN@ Alternative HTML template to be used by this component. 
TabContent_htmlTemplate_shortDescription=此组件使用的替代 HTML 模板。
#@EN@ CSS Style Class(es)
TabContent_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element of the   TabContent. 
TabContent_styleClass_shortDescription=应用于 TabContent 最外层 HTML 元素的 CSS 样式类。
#@EN@ Is this tab selected
TabContent_selected_displayName=选择此标签
#@EN@ Returns true if this tab is selected
TabContent_selected_shortDescription=如果选择此标签，则返回 true
#@EN@ Tab Title
TabContent_title_displayName=标签标题
#@EN@ The title of this tab. 
TabContent_title_shortDescription=此标签的标题。
#@EN@ CSS Style(s) of the tabContent
TabContent_style_displayName=tabContent 的 CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this  component is rendered. 
TabContent_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Visible
TabContent_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
TabContent_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ Table2
Table2_displayName=Table2
#@EN@ Component that represents a table.   The Table2 component provides a layout mechanism for displaying table actions.  UI guidelines describe specific behavior that can applied to the rows and   columns of data such as sorting, filtering, pagination, selection, and custom   user actions
Table2_shortDescription=表示表的组件。Table2 组件提供用于显示表操作的布局机制。UI 指导规范描述了可应用于数据行和列的特定行为，如排序、过滤、分页、选择以及定制用户操作
#@EN@ HTML Template
Table2_htmlTemplate_displayName=HTML 模板
#@EN@ Alternative HTML template to be used by this component. 
Table2_htmlTemplate_shortDescription=此组件使用的替代 HTML 模板。
#@EN@ Double Click Script
TableBase_onDblClick_displayName=双击脚本
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
TableBase_onDblClick_shortDescription=用鼠标双击此组件时执行的脚本代码。
#@EN@ Table Width
TableBase_width_displayName=表宽度
#@EN@ Use the width attribute to specify the width of the table
TableBase_width_shortDescription=使用 width 属性可指定表的宽度
#@EN@ Table Title
TableBase_title_displayName=表标题
#@EN@ The text displayed for the table title. 
TableBase_title_shortDescription=为表标题显示的文本。
#@EN@ Key Press Script
TableBase_onKeyPress_displayName=按键脚本
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
TableBase_onKeyPress_shortDescription=当组件具有焦点且用户按下并释放某个键时执行的脚本代码。
#@EN@ Inner Borders
TableBase_rules_displayName=内边框
#@EN@ The RULES attribute, poorly supported by browsers, specifies the  borders between table cells
TableBase_rules_shortDescription=RULES 属性（浏览器不太支持该属性）用于指定表单元格之间的边框
#@EN@ Deselect Multiple Click Script
TableBase_deselectMultipleButtonOnClick_displayName=取消选中多个单击脚本
#@EN@ Scripting code that is executed when the user clicks the deselect multiple   button
TableBase_deselectMultipleButtonOnClick_shortDescription=用户单击“取消选中多个”按钮时执行的脚本代码
#@EN@ Show Clear Sort Button
TableBase_clearSortButton_displayName=显示“清除排序”按钮
#@EN@ In the View-Changing Controls area of the Action Bar, display a button that   clears any sorting of the table
TableBase_clearSortButton_shortDescription=在操作栏的视图更改控件区域中，显示一个用于清除任何表排序的按钮
#@EN@ Filter Component Id
TableBase_filterId_displayName=过滤组件 Id
#@EN@ The element id to be applied to the outermost HTML element that is rendered   for the dropDown component used to display filter options
TableBase_filterId_shortDescription=应用于最外层 HTML 元素的元素 id，该元素是为用于显示过滤选项的 dropDown 组件而呈现的
#@EN@ Is Hidden Selected Rows
TableBase_hiddenSelectedRows_displayName=隐藏选定行
#@EN@ Flag indicating that selected rows might be currently hidden from view
TableBase_hiddenSelectedRows_shortDescription=该标志指示当前从视图中隐藏了选定行
#@EN@ Table Background Color
TableBase_bgColor_displayName=表背景颜色
#@EN@ The deprecated BGCOLOR attribute suggests a background color for the  table
TableBase_bgColor_shortDescription=过时的 BGCOLOR 属性建议的表背景颜色
#@EN@ Key Up Script
TableBase_onKeyUp_displayName=释放键脚本
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
TableBase_onKeyUp_shortDescription=当组件具有焦点且用户释放某个键时执行的脚本代码。
#@EN@ Mouse Up Script
TableBase_onMouseUp_displayName=释放鼠标脚本
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
TableBase_onMouseUp_shortDescription=当鼠标指针位于组件上且用户释放鼠标按钮时执行的脚本代码。
#@EN@ CSS Style Class(es)
TableBase_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
TableBase_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Show Deselect Multiple Button
TableBase_deselectMultipleButton_displayName=显示“取消选中多个”按钮
#@EN@ In the Action Bar, display a deselect button for tables in which multiple rows   can be selected, to allow users to deselect all table rows that are currently   displayed
TableBase_deselectMultipleButton_shortDescription=在操作栏中为可选择多个行的表显示取消选中按钮，以使用户能够取消选中当前显示的所有表行
#@EN@ Filter Panel Focus ID
TableBase_filterPanelFocusId_displayName=过滤面板焦点 ID
#@EN@ The element id used to set focus when the filter panel is open. 
TableBase_filterPanelFocusId_shortDescription=元素 id，用于设置过滤面板打开时焦点所在的位置。
#@EN@ Show Augmented Title
TableBase_augmentTitle_displayName=显示扩增标题
#@EN@ Flag indicating that the table title should be augmented with the range of items   currently displayed and the total number of items in the table
TableBase_augmentTitle_shortDescription=该标志指示应该使用当前显示的项范围和表中的总项数来扩增表标题
#@EN@ Table Alignment
TableBase_align_displayName=表对齐
#@EN@ The deprecated ALIGN attribute suggests the horizontal alignment of  the table on visual browsers
TableBase_align_shortDescription=过时的 ALIGN 属性建议表在可视浏览器上水平对齐
#@EN@ Light Weight Table
TableBase_lite_displayName=轻量表
#@EN@ Renders the table in a style that makes the table look lighter weight, generally   by omitting the shading around the table and in the title bar. 
TableBase_lite_shortDescription=以某种方式呈现表，使表具有更轻量的外观，这通常是通过忽略表周围和标题栏中的阴影来实现的。
#@EN@ CSS Style(s)
TableBase_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
TableBase_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Spacing Between Cells
TableBase_cellSpacing_displayName=单元格间距
#@EN@ The amount of whitespace that should be placed between cells, and between the   edges of the table content area and the sides of the table
TableBase_cellSpacing_shortDescription=应该在单元格之间以及表内容区域边缘与表侧边之间设置的空白区域大小
#@EN@ Border Width
TableBase_border_displayName=边框宽度
#@EN@ The BORDER attribute specifies the width in pixels of the border around a table. 
TableBase_border_shortDescription=BORDER 属性指定表周围的边框宽度（以像素为单位）。
#@EN@ Click Script
TableBase_onClick_displayName=单击脚本
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
TableBase_onClick_shortDescription=用鼠标单击此组件时执行的脚本代码。
#@EN@ Filter Text
TableBase_filterText_displayName=过滤器文本
#@EN@ Text to be inserted into the table title bar when a filter is applied
TableBase_filterText_shortDescription=在应用过滤器时插入到表标题栏中的文本
#@EN@ Show Pagination Controls
TableBase_paginationControls_displayName=显示分页控件
#@EN@ Show the table pagination controls, which allow users to change which page is   displayed
TableBase_paginationControls_shortDescription=显示表分页控件，以便用户能够更改显示的页面
#@EN@ Mouse Down Script
TableBase_onMouseDown_displayName=按下鼠标脚本
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
TableBase_onMouseDown_shortDescription=当鼠标指针位于组件上且用户按下鼠标按钮时执行的脚本代码。
#@EN@ Tool Tip
TableBase_toolTip_displayName=工具提示
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
TableBase_toolTip_shortDescription=为 HTML 元素设置 title 属性的值。如果将鼠标光标悬停在该 HTML 元素上，则指定的文本将作为工具提示进行显示。
#@EN@ Sort Panel Focus ID
TableBase_sortPanelFocusId_displayName=排序面板焦点 ID
#@EN@ The element id used to set focus when the sort panel is open. 
TableBase_sortPanelFocusId_shortDescription=元素 id，用于设置排序面板打开时焦点所在的位置。
#@EN@ Purpose of Table
TableBase_summary_displayName=表的用途
#@EN@ Text that describes this table's purpose and structure, for user agents   rendering to non-visual media such as speech and Braille. 
TableBase_summary_shortDescription=描述此表的用途和结构的文本，由用户代理用来呈现给不可见媒体，如语音和盲文设备。
#@EN@ Show Sort Panel Toggle Button
TableBase_sortPanelToggleButton_displayName=显示“排序面板切换”按钮
#@EN@ Show the button that is used to open and close the sort panel. 
TableBase_sortPanelToggleButton_shortDescription=显示用于打开和关闭排序面板的按钮。
#@EN@ Show Select Multiple Button
TableBase_selectMultipleButton_displayName=显示“选中多个”按钮
#@EN@ Show the button that is used for selecting multiple rows
TableBase_selectMultipleButton_shortDescription=显示用于选择多个行的按钮
#@EN@ Preferences Panel Focus ID
TableBase_preferencesPanelFocusId_displayName=首选项面板焦点 ID
#@EN@ The element id used to set focus when the preferences panel is open. 
TableBase_preferencesPanelFocusId_shortDescription=元素 id，用于设置首选项面板打开时焦点所在的位置。
#@EN@ Mouse Out Script
TableBase_onMouseOut_displayName=移开鼠标脚本
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
TableBase_onMouseOut_shortDescription=将鼠标指针从此组件上方移开时执行的脚本代码。
#@EN@ Show Paginate Button
TableBase_paginateButton_displayName=显示分页按钮
#@EN@ Show table paginate button to allow users to switch between viewing all data on   a single page (unpaginated) or to see data in multiple pages (paginated). 
TableBase_paginateButton_shortDescription=显示表分页按钮，以便用户能够在查看单个页面（未分页）中的所有数据与查看多个页面（已分页）中的数据之间进行切换。
#@EN@ Select Multiple Click Script
TableBase_selectMultipleButtonOnClick_displayName=选中多个单击脚本
#@EN@ Scripting code executed when the user clicks the mouse on the select multiple   button. 
TableBase_selectMultipleButtonOnClick_shortDescription=用户单击“选中多个”按钮时执行的脚本代码。
#@EN@ Mouse In Script
TableBase_onMouseOver_displayName=移入鼠标脚本
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
TableBase_onMouseOver_shortDescription=当用户将鼠标指针移入此组件的边界内时执行的脚本代码。
#@EN@ Mouse Move Script
TableBase_onMouseMove_displayName=移动鼠标脚本
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
TableBase_onMouseMove_shortDescription=当用户将鼠标指针移动到组件上方时执行的脚本代码。
#@EN@ Outer Border
TableBase_frame_displayName=外边框
#@EN@ The BORDER attribute specifies the width in pixels of the border  around a table. 
TableBase_frame_shortDescription=BORDER 属性指定表周围的边框宽度（以像素为单位）。
#@EN@ Spacing Within Cells
TableBase_cellPadding_displayName=单元格内的间距
#@EN@ The amount of whitespace that should be placed between the cell contents and the   cell borders, on all four sides of the cell
TableBase_cellPadding_shortDescription=在单元格的四个边上，应该在单元格内容和单元格边框之间设置的空白区域大小
#@EN@ Deselect Single Click Script
TableBase_deselectSingleButtonOnClick_displayName=取消选中单个单击脚本
#@EN@ Scripting code that is executed when the user clicks the deselect single button.  You should use the JavaScript setTimeout() function to invoke the   script to ensure that the radio button is deselected immediately, instead of   waiting for the script to complete. 
TableBase_deselectSingleButtonOnClick_shortDescription=用户单击“取消选中单个”按钮时执行的脚本代码。应该使用 JavaScript setTimeout() 函数来调用脚本，以确保立即取消选中单选按钮，而不是等待脚本完成。
#@EN@ Items Text
TableBase_itemsText_displayName=项文本
#@EN@ Text to add to the title of an unpaginated table
TableBase_itemsText_shortDescription=要添加到非分页表的标题中的文本
#@EN@ Show Deselect Single Button
TableBase_deselectSingleButton_displayName=显示“取消选中单个”按钮
#@EN@ In the Action Bar, display a deselect button for tables in which only a single   table row can be selected at a time
TableBase_deselectSingleButton_shortDescription=在操作栏中，为每次只能选择一个表行的表显示取消选中按钮
#@EN@ Visible
TableBase_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
TableBase_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ Key Down Script
TableBase_onKeyDown_displayName=按下键脚本
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
TableBase_onKeyDown_shortDescription=当组件具有焦点且用户按下某个键时执行的脚本代码。
#@EN@ Tab Index
TableBase_tabIndex_displayName=Tab 键索引
#@EN@ Position of this element in the tabbing order of the current document
TableBase_tabIndex_shortDescription=当使用 Tab 键依次浏览时，用于确定此元素在当前文档中所处的位置
#@EN@ Editable List
EditableList_displayName=可编辑列表
#@EN@ The EditableList component allows users to create and modify a list of   strings.    Use this component when web application users need to create and modify a   list of strings
EditableList_shortDescription=用户可以使用 EditableList 组件来创建和修改字符串列表。当 Web 应用程序用户需要创建和修改字符串列表时，请使用此组件
#@EN@ List
EditableList_list_displayName=列表
#@EN@ The object that represents the list
EditableList_list_shortDescription=  表示列表的对象
#@EN@ Tool Tip
EditableList_toolTip_displayName=工具提示
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
EditableList_toolTip_shortDescription=为 HTML 元素设置 title 属性的值。如果将鼠标光标悬停在该 HTML 元素上，则指定的文本将作为工具提示进行显示。
#@EN@ Value
EditableList_value_displayName=值
#@EN@ The current value of this component
EditableList_value_shortDescription=此组件的当前值
#@EN@ Maximum String Length
EditableList_maxLength_displayName=最大字符串长度
#@EN@ The maximum number of characters allowed for each string in the list. 
EditableList_maxLength_shortDescription=允许列表中每个字符串包含的最多字符数。
#@EN@ Number of Items to Display
EditableList_rows_displayName=要显示的项数
#@EN@ The number of items to display, which determines the length of the   rendered listbox
EditableList_rows_shortDescription=要显示的项数，用于确定呈现的列表框长度
#@EN@ Converter
EditableList_converter_displayName=转换器
#@EN@ The converter attribute is used to specify a method to translate native  property values to String and back for this component
EditableList_converter_shortDescription=converter 属性用于指定一个转换方法，以便为此组件实现自身属性值与 String 属性值之间的转换
#@EN@ Multiple
EditableList_multiple_displayName=多个
#@EN@ Flag indicating that the application user can select  more than one option at a time in the listbox. 
EditableList_multiple_shortDescription=该标志指示应用程序用户可以在列表框中一次选择多个选项。
#@EN@ List Validator Expression
EditableList_listValidatorExpression_displayName=列表验证器表达式
#@EN@ A validator which will be applied to the contents of the list  (e.g
EditableList_listValidatorExpression_shortDescription=  将应用于列表内容的验证器
#@EN@ Disabled
EditableList_disabled_displayName=禁用
#@EN@ Flag indicating that the user is not permitted to activate this  component, and that the component's value will not be submitted with the  form. 
EditableList_disabled_shortDescription=该标志指示不允许用户激活此组件，并且不会随表单一起提交该组件的值。
#@EN@ Validator Expression
EditableList_validatorExpression_displayName=验证器表达式
#@EN@ The validator attribute is used to specify a method in a backing bean to  validate input to the component
EditableList_validatorExpression_shortDescription=validator 属性用于在支持 Bean 中指定一个方法，以此来验证对组件输入的内容
#@EN@ Sorted
EditableList_sorted_displayName=排序
#@EN@ Set sorted to true if the list items should be  sorted in locale-specific alphabetical order
EditableList_sorted_shortDescription=如果按特定于语言环境的字母顺序对列表项进行排序，请将 sorted 设置为 true
#@EN@ Field Validator Expression
EditableList_fieldValidatorExpression_displayName=字段验证器表达式
#@EN@ A validator that will be applied to entries made into the  textfield
EditableList_fieldValidatorExpression_shortDescription=  将应用于文本字段中的输入内容的验证器
#@EN@ CSS Style Class(es)
EditableList_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
EditableList_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Immediate
EditableList_immediate_displayName=立即
#@EN@ Flag indicating that event handling for this component should be handled  immediately (in Apply Request Values phase) rather than waiting until   Invoke Application phase. 
EditableList_immediate_shortDescription=该标志指示应该立即执行此组件的事件处理（在“应用请求值”阶段），而不是一直等到“调用应用程序”阶段。
#@EN@ Textfield Label
EditableList_fieldLabel_displayName=文本字段标签
#@EN@ Text to be used as the label next to the input text field. 
EditableList_fieldLabel_shortDescription=用作位于输入文本字段旁边的标签的文本。
#@EN@ List Label
EditableList_listLabel_displayName=列表标签
#@EN@ Text to be used as the label next to the list box. 
EditableList_listLabel_shortDescription=用作位于列表框旁边的标签的文本。
#@EN@ Visible
EditableList_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
EditableList_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ Show List On Top
EditableList_listOnTop_displayName=在顶部显示列表
#@EN@ Specifies the display order of the parts of this component
EditableList_listOnTop_shortDescription=指定此组件的组成部分的显示顺序
#@EN@ CSS Style(s)
EditableList_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
EditableList_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Label Level
EditableList_labelLevel_displayName=标签级别
#@EN@ Sets the style level for the generated labels
EditableList_labelLevel_shortDescription=为生成的标签设置样式级别
#@EN@ Read-only
EditableList_readOnly_displayName=只读
#@EN@ If this attribute is set to true, the value of the component is  rendered as text, preceded by the label if one was defined. 
EditableList_readOnly_shortDescription=如果将此属性设置为 true，则组件的值将呈现为文本，并在前面显示标签（如果已定义）。
#@EN@ Tab Index
EditableList_tabIndex_displayName=Tab 键索引
#@EN@ Position of this element in the tabbing order of the current document
EditableList_tabIndex_shortDescription=当使用 Tab 键依次浏览时，用于确定此元素在当前文档中所处的位置
#@EN@ Static Text
StaticText_displayName=静态文本
#@EN@ The StaticText component is used to display text that is not interactive in   the rendered HTML page. 
StaticText_shortDescription=StaticText 组件用于在呈现的 HTML 页中显示非交互式文本。
#@EN@ Mouse Down Script
StaticText_onMouseDown_displayName=按下鼠标脚本
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
StaticText_onMouseDown_shortDescription=当鼠标指针位于组件上且用户按下鼠标按钮时执行的脚本代码。
#@EN@ Tool Tip
StaticText_toolTip_displayName=工具提示
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
StaticText_toolTip_shortDescription=为 HTML 元素设置 title 属性的值。如果将鼠标光标悬停在该 HTML 元素上，则指定的文本将作为工具提示进行显示。
#@EN@ Value
StaticText_value_displayName=值
#@EN@ The current value of this component
StaticText_value_shortDescription=此组件的当前值
#@EN@ Double Click Script
StaticText_onDblClick_displayName=双击脚本
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
StaticText_onDblClick_shortDescription=用鼠标双击此组件时执行的脚本代码。
#@EN@ Converter
StaticText_converter_displayName=转换器
#@EN@ The converter attribute is used to specify a method to translate native  property values to String and back for this component
StaticText_converter_shortDescription=converter 属性用于指定一个转换方法，以便为此组件实现自身属性值与 String 属性值之间的转换
#@EN@ Mouse Out Script
StaticText_onMouseOut_displayName=移开鼠标脚本
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
StaticText_onMouseOut_shortDescription=将鼠标指针从此组件上方移开时执行的脚本代码。
#@EN@ Rendered Flag
StaticText_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
StaticText_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Escape
StaticText_escape_displayName=转义
#@EN@ Escape the html text so it won't be interpreted by the browser as HTML 
StaticText_escape_shortDescription=对 html 文本进行转义，这样浏览器就不会将其解释为 HTML 标记 
#@EN@ Component Identifier
StaticText_id_displayName=组件标识符
#@EN@ The component identifier for this component
StaticText_id_shortDescription=此组件的组件标识符
#@EN@ Mouse In Script
StaticText_onMouseOver_displayName=移入鼠标脚本
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
StaticText_onMouseOver_shortDescription=当用户将鼠标指针移入此组件的边界内时执行的脚本代码。
#@EN@ HTML Template
StaticText_htmlTemplate_displayName=HTML 模板
#@EN@ Alternative HTML template to be used by this component. 
StaticText_htmlTemplate_shortDescription=此组件使用的替代 HTML 模板。
#@EN@ Mouse Move Script
StaticText_onMouseMove_displayName=移动鼠标脚本
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
StaticText_onMouseMove_shortDescription=当用户将鼠标指针移动到组件上方时执行的脚本代码。
#@EN@ Mouse Up Script
StaticText_onMouseUp_displayName=释放鼠标脚本
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
StaticText_onMouseUp_shortDescription=当鼠标指针位于组件上且用户释放鼠标按钮时执行的脚本代码。
#@EN@ CSS Style Class(es)
StaticText_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
StaticText_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Text
StaticText_text_displayName=text
#@EN@ The text to be displayed for this component. 
StaticText_text_shortDescription=为此组件显示的文本。
#@EN@ CSS Style(s)
StaticText_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
StaticText_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Visible
StaticText_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
StaticText_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ Click Script
StaticText_onClick_displayName=单击脚本
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
StaticText_onClick_shortDescription=用鼠标单击此组件时执行的脚本代码。
#@EN@ WizardSubstepBranch
WizardSubstepBranch_displayName=WizardSubstepBranch
#@EN@ The WizardSubstepBranch component represents a conditional branch in a  wizard step sequence
WizardSubstepBranch_shortDescription=WizardSubstepBranch 组件表示向导步骤顺序中的条件分支
#@EN@ summary
WizardSubstepBranch_summary_displayName=summary
#@EN@ A brief description of this step, to be used in the numbered  list of steps in the Steps pane. 
WizardSubstepBranch_summary_shortDescription=此步骤的简短描述，用于“步骤”窗格的步骤编号列表中。
#@EN@ Cancel Script
WizardSubstepBranch_onCancel_displayName=取消脚本
#@EN@ Scripting code executed when the Cancel button is clicked. 
WizardSubstepBranch_onCancel_shortDescription=单击“取消”按钮时执行的脚本代码。
#@EN@ title
WizardSubstepBranch_title_displayName=title
#@EN@ A descriptive title to be displayed as the Step Title  in the Step Content pane
WizardSubstepBranch_title_shortDescription=“步骤内容”窗格中显示为“步骤标题”的描述性标题
#@EN@ detail
WizardSubstepBranch_detail_displayName=detail
#@EN@ The detail attribute supplies the text that is to be  displayed in the Step Instructions area, before the input components  of the Step Content pane
WizardSubstepBranch_detail_shortDescription=detail 属性提供在“步骤说明”区域中显示的文本（位于“步骤内容”窗格的输入组件之前）
#@EN@ Finish Script
WizardSubstepBranch_onFinish_displayName=完成脚本
#@EN@ Scripting code executed when the Finish button is clicked. 
WizardSubstepBranch_onFinish_shortDescription=单击“完成”按钮时执行的脚本代码。
#@EN@ Next Script
WizardSubstepBranch_onNext_displayName=下一步脚本
#@EN@ Scripting code executed when the Next button is clicked. 
WizardSubstepBranch_onNext_shortDescription=单击“下一步”按钮时执行的脚本代码。
#@EN@ Step Link Script
WizardSubstepBranch_onStepLink_displayName=步骤链接脚本
#@EN@ Scripting code executed when a Step link is clicked. 
WizardSubstepBranch_onStepLink_shortDescription=单击步骤链接时执行的脚本代码。
#@EN@ results
WizardSubstepBranch_results_displayName=results
#@EN@ Set the results attribute to true when the wizard step  represents the View Results page
WizardSubstepBranch_results_shortDescription=当向导步骤显示“查看结果”页时，将 results 属性设置为 true
#@EN@ taken
WizardSubstepBranch_taken_displayName=taken
#@EN@ The taken attribute is used to evaluate whether the  steps of this branch sequence are displayed
WizardSubstepBranch_taken_shortDescription=taken 属性用于评估是否显示此分支顺序的步骤
#@EN@ Component Identifier
WizardSubstepBranch_id_displayName=组件标识符
#@EN@ The component identifier for this component
WizardSubstepBranch_id_shortDescription=此组件的组件标识符
#@EN@ Close Script
WizardSubstepBranch_onClose_displayName=关闭脚本
#@EN@ Scripting code executed when the Close button is clicked. 
WizardSubstepBranch_onClose_shortDescription=单击“关闭”按钮时执行的脚本代码。
#@EN@ help
WizardSubstepBranch_help_displayName=help
#@EN@ Descriptive text that provides detailed help to the user  for this step
WizardSubstepBranch_help_shortDescription=为用户提供此步骤详细帮助的描述性文本
#@EN@ Help Tab Script
WizardSubstepBranch_onHelpTab_displayName=“帮助”标签脚本
#@EN@ Scripting code executed when the Help tab is clicked. 
WizardSubstepBranch_onHelpTab_shortDescription=单击“帮助”标签时执行的脚本代码。
#@EN@ finish
WizardSubstepBranch_finish_displayName=finish
#@EN@ Set the finish attribute to true when the wizard step  represents the Finish step
WizardSubstepBranch_finish_shortDescription=当向导步骤显示“完成”步骤时，将 finish 属性设置为 true
#@EN@ Wizard Event Listener
WizardSubstepBranch_eventListener_displayName=向导事件侦听程序
#@EN@ The eventListener attribute is used to specify an  object to handle an event that is triggered when a user activates a   component in the step.  The eventListener attribute value must be a   JavaServer Faces EL expression that resolves to an instance  of com.sun.webui.jsf.event.WizardEventListener.    The return value of the wizard component's call to the  event listener's handleEvent() method controls the   processing of the current step, and determines whether the next step   or a previous step, etc
WizardSubstepBranch_eventListener_shortDescription=eventListener 属性用于指定对象以处理用户在步骤中激活组件时触发的事件。eventListener 属性值必须是一个结果为 com.sun.webui.jsf.event.WizardEventListener 实例的 JavaServer Faces EL 表达式。向导组件对事件侦听程序的 handleEvent() 方法调用时，其返回值将控制当前步骤的处理，并确定是执行下一步还是执行上一步等操作。
#@EN@ Steps Tab Script
WizardSubstepBranch_onStepsTab_displayName=“步骤”标签脚本
#@EN@ Scripting code executed when the Steps tab is clicked. 
WizardSubstepBranch_onStepsTab_shortDescription=单击“步骤”标签时执行的脚本代码。
#@EN@ Previous Script
WizardSubstepBranch_onPrevious_displayName=上一步脚本
#@EN@ Scripting code executed when the Next button is clicked. 
WizardSubstepBranch_onPrevious_shortDescription=单击“上一步”按钮时执行的脚本代码。
#@EN@ Table2Column
Table2Column_displayName=Table2Column
#@EN@ Component that represents a table column.    The Table2Column component provides a layout mechanism for displaying columns   of data
Table2Column_shortDescription=表示表列的组件。Table2Column 组件提供用于显示数据列的布局机制
#@EN@ Property Sheet
PropertySheet_displayName=属性表单
#@EN@ The PropertySheet component is a NamingContainer    used to layout PropertySheetSection components on a page.  Each PropertySheetSection may in turn have any number of  Property components within it
PropertySheet_shortDescription=PropertySheet 组件是用于在页面上布置 PropertySheetSection 组件的 NamingContainer。每个 PropertySheetSection 又可以包含任意数量的属性组件
#@EN@ CSS Style Class(es)
PropertySheet_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
PropertySheet_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Required Field Legend
PropertySheet_requiredFields_displayName=必填字段图例
#@EN@ Specifies whether to display a required field legend in the   upper right area of the property sheet
PropertySheet_requiredFields_shortDescription=指定是否在属性表单的右上区域中显示必填字段图例
#@EN@ Show Jump Links
PropertySheet_jumpLinks_displayName=显示跳转链接
#@EN@ This boolean attribute allows you to control whether jump links  will be created at the top of this PropertySheet  or not
PropertySheet_jumpLinks_shortDescription=此布尔属性用于控制是否在此属性表单的顶部创建跳转链接
#@EN@ Visible
PropertySheet_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
PropertySheet_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ CSS Style(s)
PropertySheet_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
PropertySheet_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Rendered Flag
PropertySheet_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
PropertySheet_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Component Identifier
PropertySheet_id_displayName=组件标识符
#@EN@ The component identifier for this component
PropertySheet_id_shortDescription=此组件的组件标识符
#@EN@ WizardBranch
WizardBranch_displayName=向导分支
#@EN@ WizardBranch
WizardBranch_shortDescription=向导分支
#@EN@ summary
WizardBranch_summary_displayName=summary
#@EN@ A brief description of this step, to be used in the numbered  list of steps in the Steps pane. 
WizardBranch_summary_shortDescription=此步骤的简短描述，用于“步骤”窗格的步骤编号列表中。
#@EN@ Cancel Script
WizardBranch_onCancel_displayName=取消脚本
#@EN@ Scripting code executed when the Cancel button is clicked. 
WizardBranch_onCancel_shortDescription=单击“取消”按钮时执行的脚本代码。
#@EN@ title
WizardBranch_title_displayName=title
#@EN@ A descriptive title to be displayed as the Step Title  in the Step Content pane
WizardBranch_title_shortDescription=“步骤内容”窗格中显示为“步骤标题”的描述性标题
#@EN@ detail
WizardBranch_detail_displayName=detail
#@EN@ The detail attribute supplies the text that is to be  displayed in the Step Instructions area, before the input components  of the Step Content pane
WizardBranch_detail_shortDescription=detail 属性提供在“步骤说明”区域中显示的文本（位于“步骤内容”窗格的输入组件之前）
#@EN@ Finish Script
WizardBranch_onFinish_displayName=完成脚本
#@EN@ Scripting code executed when the Finish button is clicked. 
WizardBranch_onFinish_shortDescription=单击“完成”按钮时执行的脚本代码。
#@EN@ Next Script
WizardBranch_onNext_displayName=下一步脚本
#@EN@ Scripting code executed when the Next button is clicked. 
WizardBranch_onNext_shortDescription=单击“下一步”按钮时执行的脚本代码。
#@EN@ Step Link Script
WizardBranch_onStepLink_displayName=步骤链接脚本
#@EN@ Scripting code executed when a Step link is clicked. 
WizardBranch_onStepLink_shortDescription=单击步骤链接时执行的脚本代码。
#@EN@ results
WizardBranch_results_displayName=results
#@EN@ Set the results attribute to true when the wizard step  represents the View Results page
WizardBranch_results_shortDescription=当向导步骤显示“查看结果”页时，将 results 属性设置为 true
#@EN@ taken
WizardBranch_taken_displayName=taken
#@EN@ The taken attribute is used to evaluate whether the steps of  the branch are displayed
WizardBranch_taken_shortDescription=taken 属性用于评估是否显示此分支的步骤
#@EN@ Component Identifier
WizardBranch_id_displayName=组件标识符
#@EN@ The component identifier for this component
WizardBranch_id_shortDescription=此组件的组件标识符
#@EN@ Close Script
WizardBranch_onClose_displayName=关闭脚本
#@EN@ Scripting code executed when the Close button is clicked. 
WizardBranch_onClose_shortDescription=单击“关闭”按钮时执行的脚本代码。
#@EN@ help
WizardBranch_help_displayName=help
#@EN@ Descriptive text that provides detailed help to the user  for this step
WizardBranch_help_shortDescription=为用户提供此步骤详细帮助的描述性文本
#@EN@ placeholderText
WizardBranch_placeholderText_displayName=placeholderText
#@EN@ Text that describes to users what happens when they make a selection in   the step that sets up the branch
WizardBranch_placeholderText_shortDescription=向用户描述在设置分支的步骤中进行选择时所发生情况的文本
#@EN@ Help Tab Script
WizardBranch_onHelpTab_displayName=“帮助”标签脚本
#@EN@ Scripting code executed when the Help tab is clicked. 
WizardBranch_onHelpTab_shortDescription=单击“帮助”标签时执行的脚本代码。
#@EN@ finish
WizardBranch_finish_displayName=finish
#@EN@ Set the finish attribute to true when the wizard step  represents the Finish step
WizardBranch_finish_shortDescription=当向导步骤显示“完成”步骤时，将 finish 属性设置为 true
#@EN@ Wizard Event Listener
WizardBranch_eventListener_displayName=向导事件侦听程序
#@EN@ The eventListener attribute is used to specify an  object to handle an event that is triggered when a user activates a   component in the step.  The eventListener attribute value must be a   JavaServer Faces EL expression that resolves to an instance  of com.sun.webui.jsf.event.WizardEventListener.    The return value of the wizard component's call to the  event listener's handleEvent() method controls the   processing of the current step, and determines whether the next step   or a previous step, etc
WizardBranch_eventListener_shortDescription=eventListener 属性用于指定对象以处理用户在步骤中激活组件时触发的事件。eventListener 属性值必须是一个结果为 com.sun.webui.jsf.event.WizardEventListener 实例的 JavaServer Faces EL 表达式。向导组件对事件侦听程序的 handleEvent() 方法调用时，其返回值将控制当前步骤的处理，并确定是执行下一步还是执行上一步等操作。
#@EN@ Steps Tab Script
WizardBranch_onStepsTab_displayName=“步骤”标签脚本
#@EN@ Scripting code executed when the Steps tab is clicked. 
WizardBranch_onStepsTab_shortDescription=单击“步骤”标签时执行的脚本代码。
#@EN@ Previous Script
WizardBranch_onPrevious_displayName=上一步脚本
#@EN@ Scripting code executed when the Next button is clicked. 
WizardBranch_onPrevious_shortDescription=单击“上一步”按钮时执行的脚本代码。
#@EN@ Layout Panel
PanelLayout_displayName=布局面板
#@EN@ The PanelLayout component is used to display a group of related components. 
PanelLayout_shortDescription=PanelLayout 组件用于显示一组相关组件。
#@EN@ CSS Style Class(es)
PanelLayout_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
PanelLayout_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Visible
PanelLayout_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
PanelLayout_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ CSS Style(s)
PanelLayout_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
PanelLayout_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Rendered Flag
PanelLayout_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
PanelLayout_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Component Identifier
PanelLayout_id_displayName=组件标识符
#@EN@ The component identifier for this component
PanelLayout_id_shortDescription=此组件的组件标识符
#@EN@ Panel Layout
PanelLayout_panelLayout_displayName=面板布局
#@EN@ Use absolute grid positioning, or flow layout 
PanelLayout_panelLayout_shortDescription=使用绝对网格定位或流布局 
#@EN@ Header
TableHeader_displayName=标题
#@EN@ Component that represents various table headers, including sortable,   selection, and group headers.    Note: Column headers and footers are rendered by TableRowGroupRenderer
TableHeader_shortDescription=表示各种表标题的组件，其中包括可排序的标题、选定的标题以及组标题。注意：列标题和脚注是由 TableRowGroupRenderer 呈现的
#@EN@ Width
TableHeader_width_displayName=宽度
#@EN@ Use the width attribute to specify the width of the cells of the   column
TableHeader_width_shortDescription=使用 width 属性可指定列单元格的宽度
#@EN@ Double Click Script
TableHeader_onDblClick_displayName=双击脚本
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
TableHeader_onDblClick_shortDescription=用鼠标双击此组件时执行的脚本代码。
#@EN@ Key Press Script
TableHeader_onKeyPress_displayName=按键脚本
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
TableHeader_onKeyPress_shortDescription=当组件具有焦点且用户按下并释放某个键时执行的脚本代码。
#@EN@ Columns Spanned By the Cell
TableHeader_colSpan_displayName=单元格所跨列数
#@EN@ The COLSPAN attribute of TH specifies the number of columns that are  spanned by the cell
TableHeader_colSpan_shortDescription=TH 的 COLSPAN 属性指定单元格所跨越的列数
#@EN@ Is Sort Header
TableHeader_sortHeader_displayName=排序标题
#@EN@ Flag indicating this component should render a sortable column header
TableHeader_sortHeader_shortDescription=该标志指示此组件应该呈现可排序列标题
#@EN@ Cell Background Color
TableHeader_bgColor_displayName=单元格背景颜色
#@EN@ The BGCOLOR attribute suggests a background color for the cell
TableHeader_bgColor_shortDescription=BGCOLOR 属性建议单元格的背景颜色
#@EN@ Key Up Script
TableHeader_onKeyUp_displayName=释放键脚本
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
TableHeader_onKeyUp_shortDescription=当组件具有焦点且用户释放某个键时执行的脚本代码。
#@EN@ Mouse Up Script
TableHeader_onMouseUp_displayName=释放鼠标脚本
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
TableHeader_onMouseUp_shortDescription=当鼠标指针位于组件上且用户释放鼠标按钮时执行的脚本代码。
#@EN@ CSS Style Class(es)
TableHeader_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
TableHeader_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Alignment Character
TableHeader_char_displayName=对齐字符
#@EN@ Use the char attribute to specify a character to use for   horizontal alignment in each cell in the row
TableHeader_char_shortDescription=使用 char 属性可指定用于水平对齐行中每个单元格的字符
#@EN@ Height
TableHeader_height_displayName=高度
#@EN@ The number of pixels for the cell's height
TableHeader_height_shortDescription=单元格的高度（以像素为单位）
#@EN@ Horizontal Alignment
TableHeader_align_displayName=水平对齐
#@EN@ Use the align attribute to specify the horizontal alignment for   the content of each cell in the column
TableHeader_align_shortDescription=使用 align 属性可指定列中每个单元格内容水平对齐
#@EN@ Cells Covered By Header Cell
TableHeader_scope_displayName=标题单元格所涉及的单元格
#@EN@ Use the scope attribute to specify that the data cells of the   column are also acting as headers for rows or other columns of the table
TableHeader_scope_shortDescription=使用 scope 属性可指定列数据单元格也用作表行或其他列的标题
#@EN@ CSS Style(s)
TableHeader_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
TableHeader_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Abbreviation for Header Cell
TableHeader_abbr_displayName=标题单元格的缩写
#@EN@ ABBR gives an abbreviated version of the cell's content
TableHeader_abbr_shortDescription=ABBR 提供单元格内容的缩写版本
#@EN@ Click Script
TableHeader_onClick_displayName=单击脚本
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
TableHeader_onClick_shortDescription=用鼠标单击此组件时执行的脚本代码。
#@EN@ Alignment Character Offset
TableHeader_charOff_displayName=对齐字符偏移量
#@EN@ Use the charOff attribute to specify the offset of the first   occurrence of the alignment character that is specified with the   char attribute
TableHeader_charOff_shortDescription=使用 charOff 属性可指定由 char 属性指定的对齐字符第一次出现时的偏移量
#@EN@ Tool Tip
TableHeader_toolTip_displayName=工具提示
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
TableHeader_toolTip_shortDescription=为 HTML 元素设置 title 属性的值。如果将鼠标光标悬停在该 HTML 元素上，则指定的文本将作为工具提示进行显示。
#@EN@ Mouse Down Script
TableHeader_onMouseDown_displayName=按下鼠标脚本
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
TableHeader_onMouseDown_shortDescription=当鼠标指针位于组件上且用户按下鼠标按钮时执行的脚本代码。
#@EN@ List of Header Cells for Current Cell
TableHeader_headers_displayName=当前单元格的标题单元格列表
#@EN@ The HEADERS attribute specifies the header cells that apply to the  TH
TableHeader_headers_shortDescription=HEADERS 属性指定应用于 TH 的标题单元格
#@EN@ Category of Header Cell
TableHeader_axis_displayName=标题单元格的类别
#@EN@ The AXIS attribute provides a method of categorizing cells
TableHeader_axis_shortDescription=AXIS 属性提供单元格的分类方法
#@EN@ Is Group Header
TableHeader_groupHeader_displayName=组标题
#@EN@ Flag indicating this component should render a group header
TableHeader_groupHeader_shortDescription=该标志指示此组件应该呈现组标题
#@EN@ Extra HTML
TableHeader_extraHtml_displayName=附加 HTML
#@EN@ Extra HTML to be appended to the tag output by this renderer. 
TableHeader_extraHtml_shortDescription=要附加到由呈现器输出的标记之后的额外 HTML。
#@EN@ Vertical Position
TableHeader_valign_displayName=垂直位置
#@EN@ Use the valign attribute to specify the vertical alignment for the   content of each cell in the column
TableHeader_valign_shortDescription=使用 valign 属性可指定列中每个单元格内容垂直对齐
#@EN@ Suppress Word Wrap
TableHeader_noWrap_displayName=禁止自动换行
#@EN@ Use the noWrap attribute to disable word wrapping of this column's   cells in visual browsers
TableHeader_noWrap_shortDescription=使用 noWrap 属性可禁止此列的单元格在可视浏览器中自动换行
#@EN@ Rows Spanned By the Cell
TableHeader_rowSpan_displayName=单元格所跨行数
#@EN@ The ROWSPAN attribute of TH specifies the number of rows that are  spanned by the cell
TableHeader_rowSpan_shortDescription=TH 的 ROWSPAN 属性指定单元格所跨越的行数
#@EN@ Mouse Out Script
TableHeader_onMouseOut_displayName=移开鼠标脚本
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
TableHeader_onMouseOut_shortDescription=将鼠标指针从此组件上方移开时执行的脚本代码。
#@EN@ Mouse In Script
TableHeader_onMouseOver_displayName=移入鼠标脚本
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
TableHeader_onMouseOver_shortDescription=当用户将鼠标指针移入此组件的边界内时执行的脚本代码。
#@EN@ Is Select Header
TableHeader_selectHeader_displayName=选定标题
#@EN@ Flag indicating this component should render a selection column header
TableHeader_selectHeader_shortDescription=该标志指示此组件应该呈现选择列标题
#@EN@ Mouse Move Script
TableHeader_onMouseMove_displayName=移动鼠标脚本
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
TableHeader_onMouseMove_shortDescription=当用户将鼠标指针移动到组件上方时执行的脚本代码。
#@EN@ Visible
TableHeader_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
TableHeader_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ Key Down Script
TableHeader_onKeyDown_displayName=按下键脚本
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
TableHeader_onKeyDown_shortDescription=当组件具有焦点且用户按下某个键时执行的脚本代码。
#@EN@ Actions
TableActions_displayName=操作
#@EN@ Component that represents a table action bar.    Note: Column headers and footers are rendered by TableRowGroupRenderer
TableActions_shortDescription=表示表操作栏的组件。注意：列标题和脚注是由 TableRowGroupRenderer 呈现的
#@EN@ Width
TableActions_width_displayName=宽度
#@EN@ Use the width attribute to specify the width of the cells of the   column
TableActions_width_shortDescription=使用 width 属性可指定列单元格的宽度
#@EN@ Double Click Script
TableActions_onDblClick_displayName=双击脚本
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
TableActions_onDblClick_shortDescription=用鼠标双击此组件时执行的脚本代码。
#@EN@ Key Press Script
TableActions_onKeyPress_displayName=按键脚本
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
TableActions_onKeyPress_shortDescription=当组件具有焦点且用户按下并释放某个键时执行的脚本代码。
#@EN@ Columns Spanned By the Cell
TableActions_colSpan_displayName=单元格所跨列数
#@EN@ The COLSPAN attribute of TD specifies the number of columns that are  spanned by the cell
TableActions_colSpan_shortDescription=TD 的 COLSPAN 属性可指定单元格所跨越的列数
#@EN@ Cell Background Color
TableActions_bgColor_displayName=单元格背景颜色
#@EN@ The BGCOLOR attribute suggests a background color for the cell
TableActions_bgColor_shortDescription=BGCOLOR 属性建议单元格的背景颜色
#@EN@ Key Up Script
TableActions_onKeyUp_displayName=释放键脚本
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
TableActions_onKeyUp_shortDescription=当组件具有焦点且用户释放某个键时执行的脚本代码。
#@EN@ Mouse Up Script
TableActions_onMouseUp_displayName=释放鼠标脚本
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
TableActions_onMouseUp_shortDescription=当鼠标指针位于组件上且用户释放鼠标按钮时执行的脚本代码。
#@EN@ CSS Style Class(es)
TableActions_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
TableActions_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Alignment Character
TableActions_char_displayName=对齐字符
#@EN@ Use the char attribute to specify a character to use for   horizontal alignment in each cell in the row
TableActions_char_shortDescription=使用 char 属性可指定用于水平对齐行中每个单元格的字符
#@EN@ Height
TableActions_height_displayName=高度
#@EN@ The number of pixels for the cell's height
TableActions_height_shortDescription=单元格的高度（以像素为单位）
#@EN@ Horizontal Alignment
TableActions_align_displayName=水平对齐
#@EN@ Use the align attribute to specify the horizontal alignment for   the content of each cell in the column
TableActions_align_shortDescription=使用 align 属性可指定列中每个单元格内容水平对齐
#@EN@ Cells Covered By Header Cell
TableActions_scope_displayName=标题单元格所涉及的单元格
#@EN@ Use the scope attribute to specify that the data cells of the   column are also acting as headers for rows or other columns of the table
TableActions_scope_shortDescription=使用 scope 属性可指定列数据单元格也用作表行或其他列的标题
#@EN@ Abbreviation for Header Cell
TableActions_abbr_displayName=标题单元格的缩写
#@EN@ ABBR gives an abbreviated version of the cell's content
TableActions_abbr_shortDescription=ABBR 提供单元格内容的缩写版本
#@EN@ CSS Style(s)
TableActions_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
TableActions_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Click Script
TableActions_onClick_displayName=单击脚本
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
TableActions_onClick_shortDescription=用鼠标单击此组件时执行的脚本代码。
#@EN@ Alignment Character Offset
TableActions_charOff_displayName=对齐字符偏移量
#@EN@ Use the charOff attribute to specify the offset of the first   occurrence of the alignment character that is specified with the   char attribute
TableActions_charOff_shortDescription=使用 charOff 属性可指定由 char 属性指定的对齐字符第一次出现时的偏移量
#@EN@ Tool Tip
TableActions_toolTip_displayName=工具提示
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
TableActions_toolTip_shortDescription=为 HTML 元素设置 title 属性的值。如果将鼠标光标悬停在该 HTML 元素上，则指定的文本将作为工具提示进行显示。
#@EN@ Is Actions Bottom
TableActions_actionsBottom_displayName=底部操作
#@EN@ Flag indicating this component should render actions at the bottom of   the table
TableActions_actionsBottom_shortDescription=该标志指示此组件应该呈现表底部的操作
#@EN@ Mouse Down Script
TableActions_onMouseDown_displayName=按下鼠标脚本
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
TableActions_onMouseDown_shortDescription=当鼠标指针位于组件上且用户按下鼠标按钮时执行的脚本代码。
#@EN@ List of Header Cells for Current Cell
TableActions_headers_displayName=当前单元格的标题单元格列表
#@EN@ The HEADERS attribute specifies the header cells that apply to the  TD
TableActions_headers_shortDescription=HEADERS 属性指定应用于 TD 的标题单元格
#@EN@ Category of Header Cell
TableActions_axis_displayName=标题单元格的类别
#@EN@ The AXIS attribute provides a method of categorizing cells
TableActions_axis_shortDescription=AXIS 属性提供单元格的分类方法
#@EN@ Extra HTML
TableActions_extraHtml_displayName=附加 HTML
#@EN@ Extra HTML to be appended to the tag output by this renderer. 
TableActions_extraHtml_shortDescription=要附加到由呈现器输出的标记之后的额外 HTML。
#@EN@ Vertical Position
TableActions_valign_displayName=垂直位置
#@EN@ Use the valign attribute to specify the vertical alignment for the   content of each cell in the column
TableActions_valign_shortDescription=使用 valign 属性可指定列中每个单元格内容垂直对齐
#@EN@ Suppress Word Wrap
TableActions_noWrap_displayName=禁止自动换行
#@EN@ Use the noWrap attribute to disable word wrapping of this column's   cells in visual browsers
TableActions_noWrap_shortDescription=使用 noWrap 属性可禁止此列的单元格在可视浏览器中自动换行
#@EN@ Rows Spanned By the Cell
TableActions_rowSpan_displayName=单元格所跨行数
#@EN@ The ROWSPAN attribute of TD specifies the number of rows that are  spanned by the cell
TableActions_rowSpan_shortDescription=TD 的 ROWSPAN 属性指定单元格所跨越的行数
#@EN@ Mouse Out Script
TableActions_onMouseOut_displayName=移开鼠标脚本
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
TableActions_onMouseOut_shortDescription=将鼠标指针从此组件上方移开时执行的脚本代码。
#@EN@ Mouse In Script
TableActions_onMouseOver_displayName=移入鼠标脚本
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
TableActions_onMouseOver_shortDescription=当用户将鼠标指针移入此组件的边界内时执行的脚本代码。
#@EN@ Mouse Move Script
TableActions_onMouseMove_displayName=移动鼠标脚本
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
TableActions_onMouseMove_shortDescription=当用户将鼠标指针移动到组件上方时执行的脚本代码。
#@EN@ Visible
TableActions_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
TableActions_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ Key Down Script
TableActions_onKeyDown_displayName=按下键脚本
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
TableActions_onKeyDown_shortDescription=当组件具有焦点且用户按下某个键时执行的脚本代码。
#@EN@ Table
Table_displayName=表
#@EN@ Component that represents a table.   The table component provides a layout mechanism for displaying table actions.  UI guidelines describe specific behavior that can applied to the rows and   columns of data such as sorting, filtering, pagination, selection, and custom   user actions
Table_shortDescription=表示表的组件。表组件提供用于显示表操作的布局机制。UI 指导规范描述了可应用于数据行和列的特定行为，如排序、过滤、分页、选择以及定制用户操作
#@EN@ Extra Footer HTML
Table_extraFooterHtml_displayName=附加脚注 HTML
#@EN@ Extra HTML code to be appended to the &lt;td&gt; HTML element that   is rendered for the table footer
Table_extraFooterHtml_shortDescription=附加在为表脚注呈现的 &lt;td&gt; HTML 元素之后的额外 HTML 代码
#@EN@ Extra Title HTML
Table_extraTitleHtml_displayName=附加标题 HTML
#@EN@ Extra HTML code to be appended to the &lt;caption&gt; HTML element   that is rendered for the table title
Table_extraTitleHtml_shortDescription=附加在为表标题呈现的 &lt;caption&gt; HTML 元素之后的额外 HTML 代码
#@EN@ Extra Action (bottom) HTML
Table_extraActionBottomHtml_displayName=附加操作（底部）HTML
#@EN@ Extra HTML code to be appended to the &lt;td&gt; HTML element that    is rendered for the Action Bar (bottom)
Table_extraActionBottomHtml_shortDescription=附加在为操作栏（底部）呈现的 &lt;td&gt; HTML 元素之后的额外 HTML 代码
#@LC@ ### New message ###
#@EN@ Footer Text
Table_footerText_displayName=脚注文本
#@LC@ ### New message ###
#@EN@ The text to be displayed in the table footer, which expands across the width of   the table. 
Table_footerText_shortDescription=要在表脚注中显示的文本，它将沿着表的宽度方向扩展。
#@EN@ Extra Action (top) HTML
Table_extraActionTopHtml_displayName=附加操作（顶部）HTML
#@EN@ Extra HTML code to be appended to the &lt;td&gt; HTML element that   is rendered for the Action Bar (top)
Table_extraActionTopHtml_shortDescription=附加在为操作栏（顶部）呈现的 &lt;td&gt; HTML 元素之后的额外 HTML 代码
#@EN@ Is Internal Virtual Form
Table_internalVirtualForm_displayName=内部虚拟表单
#@EN@ Flag indicating that this component should use a virtual form
Table_internalVirtualForm_shortDescription=该标志指示此组件应使用虚拟表单
#@EN@ Extra Panel HTML
Table_extraPanelHtml_displayName=附加面板 HTML
#@EN@ Extra HTML code to be appended to the &lt;td&gt; HTML element that   is rendered for an embedded panel
Table_extraPanelHtml_shortDescription=附加在为嵌入式面板呈现的 &lt;td&gt; HTML 元素之后的额外 HTML 代码
#@EN@ Radio Button
RadioButton_displayName=单选按钮
#@EN@ A component that represents a radio button.    The RadioButton can be used as a single radio button  or one radio button among a group of radio button
RadioButton_shortDescription=表示单选按钮的组件。RadioButton 可用作单个单选按钮或一组单选按钮中的某个单选按钮
#@EN@ HTML Template
RadioButton_htmlTemplate_displayName=HTML 模板
#@EN@ Alternative HTML template to be used by this component. 
RadioButton_htmlTemplate_shortDescription=此组件使用的替代 HTML 模板。
#@EN@ Value
RadioButton_value_displayName=值
#@EN@ The current value of this component
RadioButton_value_shortDescription=此组件的当前值
#@EN@ Required
RadioButton_required_displayName=必需
#@EN@ Flag indicating that an input value for this field is mandatory, and   failure to provide one will trigger a validation error. 
RadioButton_required_shortDescription=该标志指示此字段的输入值是必需的，如果未提供输入值，则会触发一个验证错误。
#@EN@ Items
RadioButton_items_displayName=项
#@EN@ Specifies the options that the web application user can choose  from
RadioButton_items_shortDescription=指定 Web 应用程序用户可以从中进行选择的选项
#@EN@ Text Selected Script
RadioButton_onSelect_displayName=文本选定脚本
#@EN@ Scripting code executed when some text in this  component value is selected. 
RadioButton_onSelect_shortDescription=当选定此组件值中的一些文本时执行的脚本代码。
#@EN@ Label Level
RadioButton_labelLevel_displayName=标签级别
#@EN@ Sets the style level for the generated label, provided the  label attribute has been set
RadioButton_labelLevel_shortDescription=为生成的标签设置样式级别，前提是已设置了 label 属性
#@EN@ Form
Form_displayName=表单
#@EN@ The Form component is used to create a form element. 
Form_shortDescription=表单组件用于创建表单元素。
#@EN@ Mouse Down Script
Form_onMouseDown_displayName=按下鼠标脚本
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
Form_onMouseDown_shortDescription=当鼠标指针位于组件上且用户按下鼠标按钮时执行的脚本代码。
#@EN@ Double Click Script
Form_onDblClick_displayName=双击脚本
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
Form_onDblClick_shortDescription=用鼠标双击此组件时执行的脚本代码。
#@EN@ Content Type of the Request
Form_enctype_displayName=请求的内容类型
#@EN@ Use this attribute to set the content-type of the HTTP request  generated by this form
Form_enctype_shortDescription=使用该属性可设置此表单生成的 HTTP 请求的内容类型
#@EN@ Virtual Forms Configuration
Form_virtualFormsConfig_displayName=虚拟表单配置
#@EN@ The configuration of the virtual forms within this literal form, represented as a String.  Each virtual form is described by three parts, separated with pipe (&quot;|&quot;) characters:  the virtual form name, a space-separated list of component ids that participate in the   virtual form, and a space-separated list of component ids that submit the virtual form.  Multiple such virtual form &quot;descriptors&quot; are separated by commas
Form_virtualFormsConfig_shortDescription=此实际表单中的虚拟表单配置（以字符串表示）。每个虚拟表单的描述由以管道 (&quot;|&quot;) 字符分隔的三个部分组成：虚拟表单名称、参与虚拟表单的组件 id 的列表（以空格分隔）以及提交虚拟表单的组件 id 的列表（以空格分隔）。多个此类虚拟表单“描述符”使用逗号分隔
#@EN@ Key Press Script
Form_onKeyPress_displayName=按键脚本
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
Form_onKeyPress_shortDescription=当组件具有焦点且用户按下并释放某个键时执行的脚本代码。
#@EN@ Target
Form_target_displayName=目标
#@EN@ Use this attribute to set the target of the XHTML form tag. 
Form_target_shortDescription=使用此属性可设置 XHTML 表单标记的目标。
#@EN@ Mouse Out Script
Form_onMouseOut_displayName=移开鼠标脚本
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
Form_onMouseOut_shortDescription=将鼠标指针从此组件上方移开时执行的脚本代码。
#@EN@ Rendered Flag
Form_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Form_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Auto Complete
Form_autoComplete_displayName=自动完成
#@EN@ Use this non-XHTML compliant boolean attribute to turn off autocompletion   feature of Internet Explorer and Firefox browsers
Form_autoComplete_shortDescription=使用与 XHTML 不兼容的此布尔属性可关闭 Internet Explorer 和 Firefox 浏览器的自动完成功能
#@EN@ Component Identifier
Form_id_displayName=组件标识符
#@EN@ The component identifier for this component
Form_id_shortDescription=此组件的组件标识符
#@EN@ Mouse In Script
Form_onMouseOver_displayName=移入鼠标脚本
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
Form_onMouseOver_shortDescription=当用户将鼠标指针移入此组件的边界内时执行的脚本代码。
#@EN@ Key Up Script
Form_onKeyUp_displayName=释放键脚本
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
Form_onKeyUp_shortDescription=当组件具有焦点且用户释放某个键时执行的脚本代码。
#@EN@ Mouse Move Script
Form_onMouseMove_displayName=移动鼠标脚本
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
Form_onMouseMove_shortDescription=当用户将鼠标指针移动到组件上方时执行的脚本代码。
#@EN@ Mouse Up Script
Form_onMouseUp_displayName=释放鼠标脚本
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
Form_onMouseUp_shortDescription=当鼠标指针位于组件上且用户释放鼠标按钮时执行的脚本代码。
#@EN@ CSS Style Class(es)
Form_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Form_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Form Submit Script
Form_onSubmit_displayName=表单提交脚本
#@EN@ Scripting code executed when this form is submitted. 
Form_onSubmit_shortDescription=提交此表单时执行的脚本代码。
#@EN@ Form Reset Script
Form_onReset_displayName=表单重置脚本
#@EN@ Scripting code executed when this form is reset. 
Form_onReset_shortDescription=重置此表单时执行的脚本代码。
#@EN@ Internal Virtual Form Descriptors
Form_internalVirtualForms_displayName=内部虚拟表单描述符
#@EN@ The virtual forms used &quot;internally&quot; by components (such as Table).  Component authors can manipulate this set of virtual forms independent  of the set exposed to developers
Form_internalVirtualForms_shortDescription=由组件（如表）在“内部”使用的虚拟表单。组件编写者可以单独处理这组虚拟表单，而与向开发者公开的一组虚拟表单无关
#@EN@ Visible
Form_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be   viewable by the user in the rendered HTML page. 
Form_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件。
#@EN@ CSS Style(s)
Form_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Form_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Key Down Script
Form_onKeyDown_displayName=按下键脚本
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
Form_onKeyDown_shortDescription=当组件具有焦点且用户按下某个键时执行的脚本代码。
#@EN@ Click Script
Form_onClick_displayName=单击脚本
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
Form_onClick_shortDescription=用鼠标单击此组件时执行的脚本代码。
#@EN@ Virtual Form Descriptors
Form_virtualForms_displayName=虚拟表单描述符
#@EN@ The virtual forms within this literal form, represented as an  array of Form.VirtualFormDescriptor objects
Form_virtualForms_shortDescription=此实际表单中的虚拟表单，以 Form.VirtualFormDescriptor 对象数组表示
#@EN@ Hidden Field
HiddenField_displayName=隐藏字段
#@EN@ The HiddenField component is used to create a hidden input field. 
HiddenField_shortDescription=HiddenField 组件用于创建隐藏的输入字段。
#@EN@ HTML Template
HiddenField_htmlTemplate_displayName=HTML 模板
#@EN@ Alternative HTML template to be used by this component. 
HiddenField_htmlTemplate_shortDescription=此组件使用的替代 HTML 模板。
#@EN@ Value
HiddenField_value_displayName=值
#@EN@ The current value of this component
HiddenField_value_shortDescription=此组件的当前值
#@EN@ Text
HiddenField_text_displayName=text
#@EN@ Literal value to be rendered in this hidden field.  If this property is specified by a value binding  expression, the corresponding value will be updated  if validation succeeds. 
HiddenField_text_shortDescription=在此隐藏的字段中呈现的文字值。如果此属性是由值绑定表达式指定的，并且验证成功，则会更新相应的值。
#@EN@ Required
HiddenField_required_displayName=必需
#@EN@ Flag indicating that an input value for this field is mandatory, and   failure to provide one will trigger a validation error. 
HiddenField_required_shortDescription=该标志指示此字段的输入值是必需的，如果未提供输入值，则会触发一个验证错误。
#@EN@ Disabled
HiddenField_disabled_displayName=禁用
#@EN@ Flag indicating that the hidden field should not send its value to the  server. 
HiddenField_disabled_shortDescription=该标志指示隐藏字段不应将其值发送至服务器。
#@EN@ Image
Icon_displayName=图像
#@EN@ The Icon component is used to display a theme-specific image in the   rendered HTML page. 
Icon_shortDescription=图标组件用于在呈现的 HTML 页中显示特定于主题的图像。
#@EN@ Anchor
Anchor_displayName=锚点
#@EN@ The Anchor component is used to create an XHTML &lt;a&gt; anchor element.    Use the webuijsf:anchor tag to            Create an anchor that traverses to the specified url.       Anchor a position in the page so that you can jump to it.          The value of the id attribute of the rendered anchor element will be the component id,  not the component's client id
Anchor_shortDescription=锚点组件用于创建 XHTML &lt;a&gt; 锚点元素。使用 webuijsf:anchor 标记创建一个对指定 URL 进行遍历的锚点。在页面中定义一个锚点位置以便可以跳至该位置。呈现的锚点元素的 id 属性值是组件 id，而不是组件客户端 id
#@EN@ Double Click Script
Anchor_onDblClick_displayName=双击脚本
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
Anchor_onDblClick_shortDescription=用鼠标双击此组件时执行的脚本代码。
#@EN@ Shape
Anchor_shape_displayName=形状
#@EN@ The shape of the hot spot on the screen (for use in client-side image   maps)
Anchor_shape_shortDescription=屏幕上热点的形状（用于客户端图像映射）
#@EN@ Key Press Script
Anchor_onKeyPress_displayName=按键脚本
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
Anchor_onKeyPress_shortDescription=当组件具有焦点且用户按下并释放某个键时执行的脚本代码。
#@EN@ Target
Anchor_target_displayName=目标
#@EN@ The resource at the specified URL is displayed in the frame that is   specified with the target attribute
Anchor_target_shortDescription=位于指定 URL 的资源将显示在使用 target 属性指定的框架中
#@EN@ Focus Script
Anchor_onFocus_displayName=焦点脚本
#@EN@ Scripting code executed when this component  receives focus
Anchor_onFocus_shortDescription=此组件获取焦点时执行的脚本代码。
#@EN@ Charset
Anchor_charset_displayName=字符集
#@EN@ Specifies the character encoding of the target URL 
Anchor_charset_shortDescription=指定目标 URL 的字符编码 
#@EN@ URL Lang
Anchor_urlLang_displayName=URL 语言代码
#@EN@ The language code of the resource designated by this anchor. 
Anchor_urlLang_shortDescription=此锚点指定的资源的语言代码。
#@EN@ Rev
Anchor_rev_displayName=Rev
#@EN@ Specifies the relationship between the target URL and the current   document 
Anchor_rev_shortDescription=指定目标 URL 与当前文档之间的关系 
#@EN@ Key Up Script
Anchor_onKeyUp_displayName=释放键脚本
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
Anchor_onKeyUp_shortDescription=当组件具有焦点且用户释放某个键时执行的脚本代码。
#@EN@ Mouse Up Script
Anchor_onMouseUp_displayName=释放鼠标脚本
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
Anchor_onMouseUp_shortDescription=当鼠标指针位于组件上且用户释放鼠标按钮时执行的脚本代码。
#@EN@ CSS Style Class(es)
Anchor_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when  this component is rendered. 
Anchor_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ CSS Style(s)
Anchor_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Anchor_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ URL
Anchor_url_displayName=URL
#@EN@ Absolute, relative, or context relative (starting with &quot;/&quot;) URL to the   resource selected by this anchor
Anchor_url_shortDescription=此锚点选择的且指向资源的绝对、相对或上下文相对（以 &quot;/&quot; 开头）URL
#@EN@ Click Script
Anchor_onClick_displayName=单击脚本
#@EN@ Scripting code executed when a mouse click occurs over this component.  If the component submits the form (by using the action attribute), the   script that you use with the onClick attribute should not return from   the function
Anchor_onClick_shortDescription=用鼠标单击此组件时执行的脚本代码。如果组件提交表单（通过使用 action 属性），则不应通过函数返回与 onClick 属性配合使用的脚本
#@EN@ Blur Script
Anchor_onBlur_displayName=模糊脚本
#@EN@ Scripting code executed when this element loses focus. 
Anchor_onBlur_shortDescription=此元素失去焦点时执行的脚本代码。
#@EN@ Tool Tip
Anchor_toolTip_displayName=工具提示
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
Anchor_toolTip_shortDescription=为 HTML 元素设置 title 属性的值。如果将鼠标光标悬停在该 HTML 元素上，则指定的文本将作为工具提示进行显示。
#@EN@ Mouse Down Script
Anchor_onMouseDown_displayName=按下鼠标脚本
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
Anchor_onMouseDown_shortDescription=当鼠标指针位于组件上且用户按下鼠标按钮时执行的脚本代码。
#@EN@ Type
Anchor_type_displayName=类型
#@EN@ The MIME content type of the resource specified by this component. 
Anchor_type_shortDescription=此组件指定的资源的 MIME 内容类型。
#@EN@ Disabled
Anchor_disabled_displayName=禁用
#@EN@ Flag indicating that clicking of this component by the user is not  currently permitted
Anchor_disabled_shortDescription=该标志指示当前不允许用户单击此组件
#@EN@ AccessKey
Anchor_accessKey_displayName=AccessKey
#@EN@ This attribute assigns an access key to an element
Anchor_accessKey_shortDescription=此属性为元素分配一个访问键
#@EN@ Mouse Out Script
Anchor_onMouseOut_displayName=移开鼠标脚本
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
Anchor_onMouseOut_shortDescription=将鼠标指针从此组件上方移开时执行的脚本代码。
#@EN@ Mouse In Script
Anchor_onMouseOver_displayName=移入鼠标脚本
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
Anchor_onMouseOver_shortDescription=当用户将鼠标指针移入此组件的边界内时执行的脚本代码。
#@EN@ HTML Template
Anchor_htmlTemplate_displayName=HTML 模板
#@EN@ Alternative HTML template to be used by this component. 
Anchor_htmlTemplate_shortDescription=此组件使用的替代 HTML 模板。
#@EN@ Mouse Move Script
Anchor_onMouseMove_displayName=移动鼠标脚本
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
Anchor_onMouseMove_shortDescription=当用户将鼠标指针移动到组件上方时执行的脚本代码。
#@EN@ text
Anchor_text_displayName=文本
#@EN@ The text to be displayed for the anchor element. 
Anchor_text_shortDescription=为锚点元素显示的文本。
#@EN@ Rel
Anchor_rel_displayName=Rel
#@EN@ Specifies the relationship between the current document and the target   URL 
Anchor_rel_shortDescription=指定当前文档与目标 URL 之间的关系 
#@EN@ Visible
Anchor_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
Anchor_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ Key Down Script
Anchor_onKeyDown_displayName=按下键脚本
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
Anchor_onKeyDown_shortDescription=当组件具有焦点且用户按下某个键时执行的脚本代码。
#@EN@ Tab Index
Anchor_tabIndex_displayName=Tab 键索引
#@EN@ Position of this element in the tabbing order of the current document
Anchor_tabIndex_shortDescription=当使用 Tab 键依次浏览时，用于确定此元素在当前文档中所处的位置
#@EN@ Coords
Anchor_coords_displayName=Coords
#@EN@ Specifies the coordinates appropriate to the shape attribute to define  a region of an image for image maps 
Anchor_coords_shortDescription=为 shape 属性指定适当的坐标，以便定义一个用于图像映射的图像区域 
#@EN@ Meta
Meta_displayName=元
#@EN@ The Meta component is used to create an HTML  element in the rendered  HTML page. 
Meta_shortDescription=元组件用于在呈现的 HTML 页中创建 HTML 元素。
#@EN@ Content
Meta_content_displayName=内容
#@EN@ The content attribute is used to specify the data to  associate with a   name attribute or httpEquiv attribute in the webuijsf:meta tag. 
Meta_content_shortDescription=content 属性用于指定与 webuijsf:meta 标记中的 name 属性或 httpEquiv 属性相关联的数据。
#@EN@ Rendered Flag
Meta_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Meta_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Scheme
Meta_scheme_displayName=结构
#@EN@ Defines a format to be used to interpret the value of the content   attribute. 
Meta_scheme_shortDescription=定义用于解释 content 属性值的格式。
#@EN@ HTTP header
Meta_httpEquiv_displayName=HTTP 头标
#@EN@ The httpEquiv attribute is used to specify a value for the http-equiv   attribute of an HTML Meta element
Meta_httpEquiv_shortDescription=httpEquiv 属性用于指定 HTML Meta 元素的 http-equiv 属性值
#@EN@ Name
Meta_name_displayName=名称
#@EN@ The identifier that is assigned to a property in the meta element
Meta_name_shortDescription=分配给 Meta 元素中的属性的标识符
#@EN@ Component Identifier
Meta_id_displayName=组件标识符
#@EN@ The component identifier for this component
Meta_id_shortDescription=此组件的组件标识符
#@EN@ Help Window
HelpWindow_displayName=帮助窗口
#@EN@ The HelpWindow component displays a link that opens a popup window for a help  system. 
HelpWindow_shortDescription=HelpWindow 组件用于显示可打开帮助系统的弹出式窗口的链接。
#@EN@ Double Click Script
HelpWindow_onDblClick_displayName=双击脚本
#@EN@ Scripting code executed when a mouse double click occurs over this  component. 
HelpWindow_onDblClick_shortDescription=用鼠标双击此组件时执行的脚本代码。
#@EN@ Image Url
HelpWindow_imageURL_displayName=图像 Url
#@EN@ Absolute or relative URL to the image to be rendered. 
HelpWindow_imageURL_shortDescription=要呈现的图像的绝对或相对 URL。
#@EN@ Target
HelpWindow_target_displayName=目标
#@EN@ The resource at the specified URL is displayed in the frame that is   specified with the target attribute
HelpWindow_target_shortDescription=位于指定 URL 的资源将显示在使用 target 属性指定的框架中
#@EN@ URL Lang
HelpWindow_urlLang_displayName=URL 语言代码
#@EN@ The language code of the resource designated by this hyperlink. 
HelpWindow_urlLang_shortDescription=由此超级链接指定的资源的语言代码。
#@EN@ CSS Style Class(es)
HelpWindow_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
HelpWindow_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Help Set Path
HelpWindow_helpSetPath_displayName=帮助集路径
#@EN@ The context relative path to the help set to be displayed
HelpWindow_helpSetPath_shortDescription=要显示的帮助集的上下文相对路径
#@EN@ Height
HelpWindow_height_displayName=高度
#@EN@ When specified, the width and height attributes tell the client browser to override the natural image or object size in favor of these values, specified in pixels
HelpWindow_height_shortDescription=如果指定此属性，则 width 和 height 属性将通知客户端浏览器覆盖自然图像或对象的部分区域，具体大小由这些值来指定（以像素为单位）
#@EN@ Action Listener Expression
HelpWindow_actionListenerExpression_displayName=操作侦听程序表达式
#@EN@ Use the actionListenerExpression attribute to cause the component to fire  an event
HelpWindow_actionListenerExpression_shortDescription=使用 actionListenerExpression 属性可促使组件触发一个事件
#@EN@ Icon
HelpWindow_icon_displayName=图标
#@EN@ The identifier of the desired theme image. 
HelpWindow_icon_shortDescription=所需主题图像的标识符。
#@EN@ Vertical Space
HelpWindow_vspace_displayName=垂直间距
#@EN@ Specifies the amount of white space in pixels to be inserted above and below the   image
HelpWindow_vspace_shortDescription=指定插入到图像上面和下面的空白区域的大小（以像素为单位）
#@EN@ CSS Style(s)
HelpWindow_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
HelpWindow_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Border
HelpWindow_border_displayName=边框
#@EN@ Specifies the width of the img border in pixels.  The default value for this attribute depends on the client browser 
HelpWindow_border_shortDescription=指定图像边框的宽度（以像素为单位）。此属性的缺省值取决于客户端浏览器 
#@EN@ URL
HelpWindow_url_displayName=URL
#@EN@ Absolute, relative, or context relative (starting with &quot;/&quot;) URL to the   resource selected by this hyperlink
HelpWindow_url_shortDescription=此超级链接选择的且指向资源的绝对、相对或上下文相对（以 &quot;/&quot; 开头）URL
#@EN@ Help File
HelpWindow_helpFile_displayName=帮助文件
#@EN@ The help file to be displayed in the help window content   frame when the help link is clicked
HelpWindow_helpFile_shortDescription=单击帮助链接时在帮助窗口内容框架中显示的帮助文件
#@EN@ Align
HelpWindow_Align_displayName=对齐
#@EN@ Align
HelpWindow_Align_shortDescription=对齐
#@EN@ Value
HelpWindow_value_displayName=值
#@EN@ The current value of this component
HelpWindow_value_shortDescription=此组件的当前值
#@EN@ Type
HelpWindow_type_displayName=类型
#@EN@ The MIME content type of the resource specified by this component. 
HelpWindow_type_shortDescription=此组件指定的资源的 MIME 内容类型。
#@EN@ Action Expression
HelpWindow_actionExpression_displayName=操作表达式
#@EN@ MethodExpression representing the application action to invoke when this  component is activated by the user
HelpWindow_actionExpression_shortDescription=方法表达式，用于表示在用户激活此组件时要调用的应用程序操作
#@EN@ Link Icon
HelpWindow_linkIcon_displayName=链接图标
#@EN@ Set linkIcon to true to display the default icon in front of the   text for the help window link
HelpWindow_linkIcon_shortDescription=将 linkIcon 设置为 true 可在帮助窗口链接文本前面显示缺省图标
#@EN@ Help Window Title
HelpWindow_windowTitle_displayName=帮助窗口标题
#@EN@ The text to display in the browser window frame for the help window
HelpWindow_windowTitle_shortDescription=在帮助窗口的浏览器窗口框架中显示的文本
#@EN@ Alt Text
HelpWindow_alt_displayName=替代文本
#@EN@ Alternative textual description of the image rendered by this component
HelpWindow_alt_shortDescription=此组件呈现的图像的替代文本描述
#@EN@ text
HelpWindow_text_displayName=文本
#@EN@ The text to be displayed for the hyperlink. 
HelpWindow_text_shortDescription=为超级链接显示的文本。
#@EN@ Immediate
HelpWindow_immediate_displayName=立即
#@EN@ Flag indicating that event handling for this component should be handled  immediately (in Apply Request Values phase) rather than waiting until   Invoke Application phase. 
HelpWindow_immediate_shortDescription=该标志指示应该立即执行此组件的事件处理（在“应用请求值”阶段），而不是一直等到“调用应用程序”阶段。
#@EN@ Horizontal Space
HelpWindow_hspace_displayName=水平间距
#@EN@ Specifies the amount of white space in pixels to be inserted to the left and   right of the image
HelpWindow_hspace_shortDescription=指定插入到图像左侧和右侧的空白区域的大小（以像素为单位）
#@EN@ Visible
HelpWindow_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
HelpWindow_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ Link Text
HelpWindow_linkText_displayName=链接文本
#@EN@ The text to display for the hyperlink that opens the help window. 
HelpWindow_linkText_shortDescription=为可打开帮助窗口的超级链接显示的文本。
#@EN@ Text Position
HelpWindow_textPosition_displayName=文本位置
#@EN@ Specifies where the text will be placed relative to the image
HelpWindow_textPosition_shortDescription=指定文本相对于图像的放置位置
#@EN@ Tree Node
TreeNode_displayName=树节点
#@EN@ The TreeNode component is used to insert a node in a tree structure. 
TreeNode_shortDescription=TreeNode 组件用于在树结构中插入节点。
#@EN@ Tool Tip
TreeNode_toolTip_displayName=工具提示
#@EN@ Sets the value of the title attribute for the HTML element.      The specified text will display as a tooltip if the mouse cursor hovers       over the HTML element. 
TreeNode_toolTip_shortDescription=为 HTML 元素设置 title 属性的值。如果将鼠标光标悬停在该 HTML 元素上，则指定的文本将作为工具提示进行显示。
#@EN@ Image URL
TreeNode_imageURL_displayName=图像 URL
#@EN@ Absolute or relative URL to the image to be rendered for the tree node
TreeNode_imageURL_shortDescription=为树节点呈现的图像的绝对或相对 URL
#@EN@ Hyperlink Action
TreeNode_actionExpression_displayName=超级链接操作
#@EN@ The actionExpression attribute is used to specify the action to take when this  component is activated by the user
TreeNode_actionExpression_shortDescription=actionExpression 属性用于指定在用户激活此组件时执行的操作
#@EN@ Hyperlink Target
TreeNode_target_displayName=超级链接目标
#@EN@ The resource at the specified URL is displayed in the frame that is         specified with the target attribute
TreeNode_target_shortDescription=位于指定 URL 的资源将显示在使用 target 属性指定的框架中
#@EN@ Rendered Flag
TreeNode_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
TreeNode_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Component Identifier
TreeNode_id_displayName=组件标识符
#@EN@ The component identifier for this component
TreeNode_id_shortDescription=此组件的组件标识符
#@EN@ CSS Style Class(es)
TreeNode_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this          component is rendered. 
TreeNode_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Text
TreeNode_text_displayName=text
#@EN@ Specifies the text for this component
TreeNode_text_shortDescription=为此组件指定文本
#@EN@ Action Listener Expression
TreeNode_actionListenerExpression_displayName=操作侦听程序表达式
#@EN@ The actionListenerExpression attribute is used to specify a method   to handle an action event that is triggered when a component is activated   by the user
TreeNode_actionListenerExpression_shortDescription=actionListenerExpression 属性用于指定方法以处理在用户激活组件时触发的操作事件
#@EN@ Expanded
TreeNode_expanded_displayName=展开
#@EN@ Set the expanded attribute to true to display the tree node as expanded when      the component is initially rendered
TreeNode_expanded_shortDescription=将 expanded 属性设置为 true 可在最初呈现组件时将树节点显示为展开的节点
#@EN@ CSS Style(s)
TreeNode_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this           component is rendered. 
TreeNode_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Visible
TreeNode_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be      viewable by the user in the rendered HTML page
TreeNode_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ Hyperlink Url
TreeNode_url_displayName=超级链接 Url
#@EN@ Indicates that the text that is specified with the text attribute         should be rendered as a hyperlink that resolves to the specified URL
TreeNode_url_shortDescription=指示使用 text 属性指定的文本应该呈现为结果属于指定 URL 的超级链接
#@EN@ WizardBranchSteps
WizardBranchSteps_displayName=WizardBranchSteps
#@EN@ The WizardBranchSteps component groups a sequence of   {@link WizardStep WizardStep} children into a conditional branch.  This component has no visual representation in the wizard step list.  If this branch is taken, they steps appear as if they were  specified as children of the {@link Wizard Wizard} component. 
WizardBranchSteps_shortDescription=WizardBranchSteps 组件将一系列 {@link WizardStep WizardStep} 子组件划分为一个条件分支。此组件在向导步骤列表中没有可视化表示形式。如果执行此分支，则这些步骤看起来就像是作为 {@link Wizard Wizard} 组件的子组件而指定的。
#@EN@ summary
WizardBranchSteps_summary_displayName=summary
#@EN@ A brief description of this step, to be used in the numbered  list of steps in the Steps pane. 
WizardBranchSteps_summary_shortDescription=此步骤的简短描述，用于“步骤”窗格的步骤编号列表中。
#@EN@ Cancel Script
WizardBranchSteps_onCancel_displayName=取消脚本
#@EN@ Scripting code executed when the Cancel button is clicked. 
WizardBranchSteps_onCancel_shortDescription=单击“取消”按钮时执行的脚本代码。
#@EN@ title
WizardBranchSteps_title_displayName=title
#@EN@ A descriptive title to be displayed as the Step Title  in the Step Content pane
WizardBranchSteps_title_shortDescription=“步骤内容”窗格中显示为“步骤标题”的描述性标题
#@EN@ detail
WizardBranchSteps_detail_displayName=detail
#@EN@ The detail attribute supplies the text that is to be  displayed in the Step Instructions area, before the input components  of the Step Content pane
WizardBranchSteps_detail_shortDescription=detail 属性提供在“步骤说明”区域中显示的文本（位于“步骤内容”窗格的输入组件之前）
#@EN@ Finish Script
WizardBranchSteps_onFinish_displayName=完成脚本
#@EN@ Scripting code executed when the Finish button is clicked. 
WizardBranchSteps_onFinish_shortDescription=单击“完成”按钮时执行的脚本代码。
#@EN@ Next Script
WizardBranchSteps_onNext_displayName=下一步脚本
#@EN@ Scripting code executed when the Next button is clicked. 
WizardBranchSteps_onNext_shortDescription=单击“下一步”按钮时执行的脚本代码。
#@EN@ Step Link Script
WizardBranchSteps_onStepLink_displayName=步骤链接脚本
#@EN@ Scripting code executed when a Step link is clicked. 
WizardBranchSteps_onStepLink_shortDescription=单击步骤链接时执行的脚本代码。
#@EN@ results
WizardBranchSteps_results_displayName=results
#@EN@ Set the results attribute to true when the wizard step  represents the View Results page
WizardBranchSteps_results_shortDescription=当向导步骤显示“查看结果”页时，将 results 属性设置为 true
#@EN@ taken
WizardBranchSteps_taken_displayName=taken
#@EN@ The taken attribute is used to evaluate whether the  steps of this branch sequence are displayed
WizardBranchSteps_taken_shortDescription=taken 属性用于评估是否显示此分支顺序的步骤
#@EN@ Component Identifier
WizardBranchSteps_id_displayName=组件标识符
#@EN@ The component identifier for this component
WizardBranchSteps_id_shortDescription=此组件的组件标识符
#@EN@ Close Script
WizardBranchSteps_onClose_displayName=关闭脚本
#@EN@ Scripting code executed when the Close button is clicked. 
WizardBranchSteps_onClose_shortDescription=单击“关闭”按钮时执行的脚本代码。
#@EN@ help
WizardBranchSteps_help_displayName=help
#@EN@ Descriptive text that provides detailed help to the user  for this step
WizardBranchSteps_help_shortDescription=为用户提供此步骤详细帮助的描述性文本
#@EN@ Help Tab Script
WizardBranchSteps_onHelpTab_displayName=“帮助”标签脚本
#@EN@ Scripting code executed when the Help tab is clicked. 
WizardBranchSteps_onHelpTab_shortDescription=单击“帮助”标签时执行的脚本代码。
#@EN@ finish
WizardBranchSteps_finish_displayName=finish
#@EN@ Set the finish attribute to true when the wizard step  represents the Finish step
WizardBranchSteps_finish_shortDescription=当向导步骤显示“完成”步骤时，将 finish 属性设置为 true
#@EN@ Wizard Event Listener
WizardBranchSteps_eventListener_displayName=向导事件侦听程序
#@EN@ The eventListener attribute is used to specify an  object to handle an event that is triggered when a user activates a   component in the step.  The eventListener attribute value must be a   JavaServer Faces EL expression that resolves to an instance  of com.sun.webui.jsf.event.WizardEventListener.    The return value of the wizard component's call to the  event listener's handleEvent() method controls the   processing of the current step, and determines whether the next step   or a previous step, etc
WizardBranchSteps_eventListener_shortDescription=eventListener 属性用于指定对象以处理用户在步骤中激活组件时触发的事件。eventListener 属性值必须是一个结果为 com.sun.webui.jsf.event.WizardEventListener 实例的 JavaServer Faces EL 表达式。向导组件对事件侦听程序的 handleEvent() 方法调用时，其返回值将控制当前步骤的处理，并确定是执行下一步还是执行上一步等操作。
#@EN@ Steps Tab Script
WizardBranchSteps_onStepsTab_displayName=“步骤”标签脚本
#@EN@ Scripting code executed when the Steps tab is clicked. 
WizardBranchSteps_onStepsTab_shortDescription=单击“步骤”标签时执行的脚本代码。
#@EN@ Previous Script
WizardBranchSteps_onPrevious_displayName=上一步脚本
#@EN@ Scripting code executed when the Next button is clicked. 
WizardBranchSteps_onPrevious_shortDescription=单击“上一步”按钮时执行的脚本代码。
#@EN@ Time Stamp
TimeStamp_displayName=时间戳
#@EN@ The TimeStamp component is used to display a text string that contains a time  stamp, which indicates the date and time that the current page was last  updated or displayed
TimeStamp_shortDescription=TimeStamp 组件用于显示包含时间戳的文本字符串，它指示上次更新或显示当前页面的日期和时间
#@EN@ Value
TimeStamp_value_displayName=值
#@EN@ The current value of this component
TimeStamp_value_shortDescription=此组件的当前值
#@EN@ CSS Style Class(es)
TimeStamp_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
TimeStamp_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Text
TimeStamp_text_displayName=text
#@EN@ The text to display for this time stamp
TimeStamp_text_shortDescription=为此时间戳显示的文本
#@EN@ Converter
TimeStamp_converter_displayName=转换器
#@EN@ Converter instance registered with this component.
TimeStamp_converter_shortDescription=与此组件一起注册的转换器实例。
#@EN@ Visible
TimeStamp_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
TimeStamp_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ CSS Style(s)
TimeStamp_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
TimeStamp_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Rendered Flag
TimeStamp_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
TimeStamp_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Component Identifier
TimeStamp_id_displayName=组件标识符
#@EN@ The component identifier for this component
TimeStamp_id_shortDescription=此组件的组件标识符
#@EN@ ProgressBar
ProgressBar_displayName=ProgressBar
#@EN@ The ProgressBar component is used to create a progress indicator.    Progress Bar component consists of three progress bar designs: &quot;Simple  Determinate&quot;, &quot;Indeterminate&quot; and a &quot;Busy&quot; indicator
ProgressBar_shortDescription=ProgressBar 组件用于创建进度指示器。进度栏组件是由三种进度栏设计构成的：“简单确定”、“不确定”以及“忙”指示器
#@EN@ toolTip Text
ProgressBar_toolTip_displayName=工具提示文本
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
ProgressBar_toolTip_shortDescription=为 HTML 元素设置 title 属性的值。如果将鼠标光标悬停在该 HTML 元素上，则指定的文本将作为工具提示进行显示。
#@EN@ Failed State Text
ProgressBar_failedStateText_displayName=失败状态文本
#@EN@ Text to be displayed along with an icon when the task fails
ProgressBar_failedStateText_shortDescription=当任务失败时随图标显示的文本
#@EN@ Value
ProgressBar_value_displayName=值
#@EN@ The current value of this component
ProgressBar_value_shortDescription=此组件的当前值
#@EN@ Bar Width
ProgressBar_width_displayName=栏宽度
#@EN@ Number of pixels for the width of the progress bar animation
ProgressBar_width_shortDescription=进度栏动画宽度（以像素为单位）
#@EN@ Converter
ProgressBar_converter_displayName=转换器
#@EN@ Converter instance registered with this component.
ProgressBar_converter_shortDescription=与此组件一起注册的转换器实例。
#@EN@ ProgressBar Type
ProgressBar_type_displayName=进度栏类型
#@EN@ Type of progress bar
ProgressBar_type_shortDescription=进度栏的类型
#@EN@ Refresh Rate
ProgressBar_refreshRate_displayName=刷新率
#@EN@ The number of milliseconds between updates to the progress bar
ProgressBar_refreshRate_shortDescription=进度栏更新间隔的毫秒数
#@EN@ Rendered Flag
ProgressBar_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
ProgressBar_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Status Text
ProgressBar_status_displayName=状态文本
#@EN@ Text to be displayed at the bottom of the progress bar, for the status of the operation. 
ProgressBar_status_shortDescription=在进度栏底部显示的操作状态的文本。
#@EN@ Progress
ProgressBar_progress_displayName=进度
#@EN@ An integer that indicates the completion percentage of the task. 
ProgressBar_progress_shortDescription=表示任务完成百分比的整数。
#@EN@ Component Identifier
ProgressBar_id_displayName=组件标识符
#@EN@ The component identifier for this component
ProgressBar_id_shortDescription=此组件的组件标识符
#@EN@ Image Url
ProgressBar_progressImageUrl_displayName=图像 Url
#@EN@ URL to an image to use instead of the default image for the progress indicator. 
ProgressBar_progressImageUrl_shortDescription=要使用的图像的 URL，该图像用于替代进度指示器的缺省图像 
#@EN@ HTML Template
ProgressBar_htmlTemplate_displayName=HTML 模板
#@EN@ Alternative HTML template to be used by this component. 
ProgressBar_htmlTemplate_shortDescription=此组件使用的替代 HTML 模板。
#@EN@ CSS Style Class(es)
ProgressBar_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this  component is rendered. 
ProgressBar_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Bar Height
ProgressBar_height_displayName=栏高度
#@EN@ Number of pixels for the height of the progress bar animation.  The default is 14
ProgressBar_height_shortDescription=进度栏动画高度（以像素为单位）。缺省值为 14
#@EN@ Log Message
ProgressBar_logMessage_displayName=日志消息
#@EN@ Text to be displayed in a text area at the bottom of the   progress bar component
ProgressBar_logMessage_shortDescription=在进度栏组件底部的文本区域中显示的文本
#@EN@ Is overlayAnimation
ProgressBar_overlayAnimation_displayName=覆盖动画
#@EN@ Set to true to display the operation progress text superimposed on the  progress bar animation
ProgressBar_overlayAnimation_shortDescription=设置为 true 时，可显示进度栏动画上叠加的操作进度文本
#@EN@ description
ProgressBar_description_displayName=描述
#@EN@ Text to describe the operation that is monitored by the progress bar
ProgressBar_description_shortDescription=用于描述进度栏所监视的操作的文本
#@EN@ Visible
ProgressBar_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
ProgressBar_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ CSS Style(s)
ProgressBar_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this  component is rendered. 
ProgressBar_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Tab Index
ProgressBar_tabIndex_displayName=Tab 键索引
#@EN@ Position of this element in the tabbing order of the current document.  Tabbing order determines the sequence in which elements receive  focus when the tab key is pressed
ProgressBar_tabIndex_shortDescription=当使用 Tab 键依次浏览时，用于确定此元素在当前文档中所处的位置。Tab 键浏览顺序确定了按下 Tab 键时元素获取焦点的顺序
#@EN@ Task State
ProgressBar_taskState_displayName=任务状态
#@EN@ A string representing the state of the task associated with this progress bar.  Valid values are:  not_started  running  paused  resumed  stopped  canceled  failed  completed 
ProgressBar_taskState_shortDescription=表示与此进度栏相关联的任务状态的字符串。有效值为：未启动、正在运行、暂停、恢复、停止、取消、失败、完成 
#@EN@ Orderable List
OrderableList_displayName=可排序的列表
#@EN@ The OrderableList component creates a list with buttons allowing the user to   change the order of the list items.   This tag renders an OrderableList component
OrderableList_shortDescription=OrderableList 组件用于创建包含按钮的列表，用户可以使用这些按钮来更改列表项的顺序。此标记呈现 OrderableList 组件
#@EN@ List
OrderableList_list_displayName=列表
#@EN@ The object that represents the list of items
OrderableList_list_shortDescription=  表示项列表的对象
#@EN@ Tool Tip
OrderableList_toolTip_displayName=工具提示
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
OrderableList_toolTip_shortDescription=为 HTML 元素设置 title 属性的值。如果将鼠标光标悬停在该 HTML 元素上，则指定的文本将作为工具提示进行显示。
#@EN@ Value
OrderableList_value_displayName=值
#@EN@ The current value of this component
OrderableList_value_shortDescription=此组件的当前值
#@EN@ Number of Items to Display
OrderableList_rows_displayName=要显示的项数
#@EN@ The number of rows to display, which determines the length of the   rendered listbox
OrderableList_rows_shortDescription=要显示的行数，用于确定呈现的列表框长度
#@EN@ Label on Top
OrderableList_labelOnTop_displayName=标签置于顶部
#@EN@ If this attribute is true, the label is rendered above the  component
OrderableList_labelOnTop_shortDescription=如果此属性为 true，则标签呈现在组件的上方
#@EN@ Multiple
OrderableList_multiple_displayName=多个
#@EN@ Flag indicating that the application user can make select  	more than one option from the listbox. 
OrderableList_multiple_shortDescription=该标志指示应用程序用户可以从列表框中选择多个选项。
#@EN@ Disabled
OrderableList_disabled_displayName=禁用
#@EN@ Flag indicating that activation of this component by the user is not currently permitted. 
OrderableList_disabled_shortDescription=该标志指示当前不允许用户激活此组件。
#@EN@ CSS Style Class(es)
OrderableList_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
OrderableList_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ List Label
OrderableList_label_displayName=列表标签
#@EN@ If set, a label is rendered adjacent to the component with the  value of this attribute as the label text. 
OrderableList_label_shortDescription=如果设置此属性，则会在组件的旁边呈现一个标签，并将此属性的值作为标签文本。
#@EN@ Move Top and Bottom
OrderableList_moveTopBottom_displayName=移至顶部和底部
#@EN@ If this attribute is true, the Move to Top and Move to Bottom  buttons are shown
OrderableList_moveTopBottom_shortDescription=如果此属性为 true，则显示“移至顶部”和“移至底部”按钮
#@EN@ CSS Style(s)
OrderableList_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
OrderableList_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Visible
OrderableList_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
OrderableList_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ Label Level
OrderableList_labelLevel_displayName=标签级别
#@EN@ Sets the style level for the generated labels
OrderableList_labelLevel_shortDescription=为生成的标签设置样式级别
#@EN@ Read-only
OrderableList_readOnly_displayName=只读
#@EN@ If this attribute is set to true, the value of the component is  rendered as text, preceded by the label if one was defined. 
OrderableList_readOnly_shortDescription=如果将此属性设置为 true，则组件的值将呈现为文本，并在前面显示标签（如果已定义）。
#@EN@ Tab Index
OrderableList_tabIndex_displayName=Tab 键索引
#@EN@ Position of this element in the tabbing order for the current  document
OrderableList_tabIndex_shortDescription=当使用 Tab 键依次浏览时，用于确定此元素在当前文档中所处的位置
#@EN@ Text Field
TextField_displayName=文本字段
#@EN@ The TextField component renders input HTML element.    TextField Component class represents text input element.    As part of the dynamic behavior, TextField supports auto-validation, where  entered data is automatically validated through the ajax call to the server.  When validating data through the ajax-based mechanism, the UPDATE_MODEL_VALUES  stage of the lifecycle is skipped ( see processUpdates). 
TextField_shortDescription=TextField 组件呈现输入 HTML 元素。TextField 组件类用于表示文本输入元素。作为动态行为的一部分，TextField 支持自动验证，即通过对服务器调用 ajax 来自动验证输入的数据。当通过基于 ajax 的机制验证数据时，将跳过生命周期的 UPDATE_MODEL_VALUES 阶段（请参见 processUpdates）。
#@LC@ ### New message ###
#@EN@ Submit Form
TextField_submitForm_displayName=提交表单
#@LC@ ### New message ###
#@EN@ Flag indicating whether pressing enter in this text field would allow  browser to submit the enclosing form ( for all input fields with the exception of TextArea  which uses enter key to open a new line)        If set to false, the browser will be prevented from submitting the form on enter in all circumstances.  If set to true, the form will be submitted on enter in all circumstances.  The default value for this attribute is &quot;false&quot;, i.e.  default browser auto submit feature will be disabled
TextField_submitForm_shortDescription=该标志指示在此文本字段中按 Enter 键后是否允许浏览器提交包含的表单（用于除 TextArea 以外的所有输入字段，TextArea 输入字段使用 Enter 键打开一个新行）。如果设置为 false，则在任何情况下按 Enter 键时，浏览器将禁止提交表单。如果设置为 true，则在任何情况下按 Enter 键时，浏览器将提交表单。该属性的缺省值为 &quot;false&quot;，即禁用缺省浏览器自动提交功能
#@EN@ AutoValidate
TextField_autoValidate_displayName=AutoValidate
#@EN@ Attribute indicating to turn on/off the autovalidate functionality of the TextField.  Autovalidate would trigger the AJAX request to the validator on the component.  Setting autoValidate neccessitates that component is ajaxified, and so it will  be accomplished automatically when autoValidate is set to true.    Autovalidate will submit the content of the text field for server side processing that  will be processed using JSFX partial lifecycle cycle
TextField_autoValidate_shortDescription=该属性指示打开/关闭 TextField 的 autovalidate 功能。Autovalidate 将触发组件验证器的 AJAX 请求。对于要发出 AJAX 请求的组件，如果将其 autoValidate 属性设置为必需，则当 autoValidate 为 true 时，可自动完成上述功能。Autovalidate 将提交文本字段的内容由服务器端进行处理，该内容是通过 JSFX 的部分生命周期处理的
#@EN@ Components
TextField_notify_displayName=组件
#@EN@ The comma separated list of absolute client IDs to notify during  text field events.    Currently, this feature is only supported by label and alert components
TextField_notify_shortDescription=文本字段事件中，以逗号分隔的用于通知的绝对客户端 ID 列表。目前，只有标签组件和警报组件支持此项功能
#@EN@ Field
Field_displayName=字段
#@EN@ Represents an input field whose content will be included when the surrounding  form is submitted. 
Field_shortDescription=表示输入字段，在提交该字段所在的表单时将包含其内容。
#@EN@ Double Click Script
Field_onDblClick_displayName=双击脚本
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
Field_onDblClick_shortDescription=用鼠标双击此组件时执行的脚本代码。
#@EN@ Trim
Field_trim_displayName=截除
#@EN@ Flag indicating that any leading and trailing blanks will be  trimmed prior to conversion to the destination data type.  Default value is true. 
Field_trim_shortDescription=该标志指示在转换为目标数据类型之前截除所有前导空格和结尾空格。缺省值为 true。
#@EN@ Key Press Script
Field_onKeyPress_displayName=按键脚本
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
Field_onKeyPress_shortDescription=当组件具有焦点且用户按下并释放某个键时执行的脚本代码。
#@EN@ Text Selected Script
Field_onSelect_displayName=文本选定脚本
#@EN@ Scripting code executed when some text in this  component value is selected. 
Field_onSelect_shortDescription=当选定此组件值中的一些文本时执行的脚本代码。
#@EN@ Focus Script
Field_onFocus_displayName=焦点脚本
#@EN@ Scripting code executed when this component  receives focus
Field_onFocus_shortDescription=此组件获取焦点时执行的脚本代码。
#@EN@ Columns
Field_columns_displayName=列
#@EN@ Number of character columns used to render this  field
Field_columns_shortDescription=用于呈现此字段的字符列数
#@EN@ Key Up Script
Field_onKeyUp_displayName=释放键脚本
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
Field_onKeyUp_shortDescription=当组件具有焦点且用户释放某个键时执行的脚本代码。
#@EN@ Mouse Up Script
Field_onMouseUp_displayName=释放鼠标脚本
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
Field_onMouseUp_shortDescription=当鼠标指针位于组件上且用户释放鼠标按钮时执行的脚本代码。
#@EN@ CSS Style Class(es)
Field_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this  component is rendered. 
Field_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ CSS Style(s)
Field_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this  component is rendered. 
Field_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Click Script
Field_onClick_displayName=单击脚本
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
Field_onClick_shortDescription=用鼠标单击此组件时执行的脚本代码。
#@EN@ Blur Script
Field_onBlur_displayName=模糊脚本
#@EN@ Scripting code executed when this element loses focus. 
Field_onBlur_shortDescription=此元素失去焦点时执行的脚本代码。
#@EN@ Mouse Down Script
Field_onMouseDown_displayName=按下鼠标脚本
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
Field_onMouseDown_shortDescription=当鼠标指针位于组件上且用户按下鼠标按钮时执行的脚本代码。
#@EN@ Tool Tip
Field_toolTip_displayName=工具提示
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers  over the HTML element. 
Field_toolTip_shortDescription=为 HTML 元素设置 title 属性的值。如果将鼠标光标悬停在该 HTML 元素上，则指定的文本将作为工具提示进行显示。
#@EN@ Value
Field_value_displayName=值
#@EN@ The current value of this component
Field_value_shortDescription=此组件的当前值
#@EN@ Maximum Length
Field_maxLength_displayName=最大长度
#@EN@ The maximum number of characters that can be entered for this field. 
Field_maxLength_shortDescription=可在此字段中输入的最多字符数。
#@EN@ Required
Field_required_displayName=必需
#@EN@ Flag indicating that an input value for this field is mandatory, and  failure to provide one will trigger a validation error. 
Field_required_shortDescription=该标志指示此字段的输入值是必需的，如果未提供输入值，则会触发一个验证错误。
#@EN@ Disabled
Field_disabled_displayName=禁用
#@EN@ Flag indicating that the user is not permitted to activate this  component, and that the component's value will not be submitted with the  form. 
Field_disabled_shortDescription=该标志指示不允许用户激活此组件，并且不会随表单一起提交该组件的值。
#@EN@ Mouse Out Script
Field_onMouseOut_displayName=移开鼠标脚本
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
Field_onMouseOut_shortDescription=将鼠标指针从此组件上方移开时执行的脚本代码。
#@EN@ Mouse In Script
Field_onMouseOver_displayName=移入鼠标脚本
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
Field_onMouseOver_shortDescription=当用户将鼠标指针移入此组件的边界内时执行的脚本代码。
#@EN@ Mouse Move Script
Field_onMouseMove_displayName=移动鼠标脚本
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
Field_onMouseMove_shortDescription=当用户将鼠标指针移动到组件上方时执行的脚本代码。
#@EN@ Text
Field_text_displayName=text
#@EN@ Literal value to be rendered in this input field.  If this property is specified by a value binding  expression, the corresponding value will be updated  if validation succeeds. 
Field_text_shortDescription=在此输入字段中呈现的文字值。如果此属性是由值绑定表达式指定的，并且验证成功，则会更新相应的值。
#@EN@ Label
Field_label_displayName=标签
#@EN@ If set, a label is rendered adjacent to the component with the  value of this attribute as the label text. 
Field_label_shortDescription=如果设置此属性，则会在组件的旁边呈现一个标签，并将此属性的值作为标签文本。
#@EN@ Value Change Script
Field_onChange_displayName=值更改脚本
#@EN@ Scripting code executed when the element  value of this component is changed. 
Field_onChange_shortDescription=更改此组件的元素值时执行的脚本代码。
#@EN@ Visible
Field_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page. 
Field_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件。
#@EN@ Key Down Script
Field_onKeyDown_displayName=按下键脚本
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
Field_onKeyDown_shortDescription=当组件具有焦点且用户按下某个键时执行的脚本代码。
#@EN@ Label Level
Field_labelLevel_displayName=标签级别
#@EN@ Sets the style level for the generated label, provided the  label attribute has been set
Field_labelLevel_shortDescription=为生成的标签设置样式级别，前提是已设置了 label 属性
#@EN@ Read Only
Field_readOnly_displayName=只读
#@EN@ Flag indicating that modification of this component by the  user is not currently permitted, but that it will be  included when the form is submitted. 
Field_readOnly_shortDescription=该标志指示当前不允许用户修改此组件，但在提交表单时将包含该组件。
#@EN@ Tab Index
Field_tabIndex_displayName=Tab 键索引
#@EN@ Position of this element in the tabbing order of the current document.  Tabbing order determines the sequence in which elements receive  focus when the tab key is pressed
Field_tabIndex_shortDescription=当使用 Tab 键依次浏览时，用于确定此元素在当前文档中所处的位置。Tab 键浏览顺序确定了按下 Tab 键时元素获取焦点的顺序
#@EN@ Checkbox Group
CheckboxGroup_displayName=复选框组
#@EN@ The CheckboxGroup component is used to display a group of checkboxes  in a grid layout. 
CheckboxGroup_shortDescription=CheckboxGroup 组件用于在网格布局中显示一组复选框。
#@EN@ HTML Template
CheckboxGroup_htmlTemplate_displayName=HTML 模板
#@EN@ Alternative HTML template to be used by this component. 
CheckboxGroup_htmlTemplate_shortDescription=此组件使用的替代 HTML 模板。
#@EN@ Value
CheckboxGroup_value_displayName=值
#@EN@ The current value of this component
CheckboxGroup_value_shortDescription=此组件的当前值
#@EN@ Text Selected Script
CheckboxGroup_onSelect_displayName=文本选定脚本
#@EN@ Scripting code executed when some text in this  component value is selected. 
CheckboxGroup_onSelect_shortDescription=当选定此组件值中的一些文本时执行的脚本代码。
#@EN@ Value Change Script
CheckboxGroup_onChange_displayName=值更改脚本
#@EN@ Scripting code executed when the element  value of this component is changed. 
CheckboxGroup_onChange_shortDescription=更改此组件的元素值时执行的脚本代码。
#@EN@ Focus Script
CheckboxGroup_onFocus_displayName=焦点脚本
#@EN@ Scripting code executed when this component  receives focus
CheckboxGroup_onFocus_shortDescription=此组件获取焦点时执行的脚本代码。
#@EN@ Visible
CheckboxGroup_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
CheckboxGroup_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ Columns
CheckboxGroup_columns_displayName=列
#@EN@ Defines how many columns may be used to lay out the check boxes.  The value must be greater than or equal to one
CheckboxGroup_columns_shortDescription=定义可以使用多少列来布置这些复选框。值必须大于或等于 1
#@EN@ Blur Script
CheckboxGroup_onBlur_displayName=模糊脚本
#@EN@ Scripting code executed when this element loses focus. 
CheckboxGroup_onBlur_shortDescription=此元素失去焦点时执行的脚本代码。
#@EN@ Hyperlink
Hyperlink_displayName=超级链接
#@EN@ Use the webuijsf:hyperlink tag to display a HTML hyperlink to a URL, or a  link that submits a form
Hyperlink_shortDescription=  使用 webuijsf:hyperlink 标记显示与某个 URL 或提交表单的链接对应的 HTML 超级链接
#@EN@ Double Click Script
Hyperlink_onDblClick_displayName=双击脚本
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
Hyperlink_onDblClick_shortDescription=用鼠标双击此组件时执行的脚本代码。
#@EN@ Key Press Script
Hyperlink_onKeyPress_displayName=按键脚本
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
Hyperlink_onKeyPress_shortDescription=当组件具有焦点且用户按下并释放某个键时执行的脚本代码。
#@EN@ Shape
Hyperlink_shape_displayName=形状
#@EN@ The shape of the hot spot on the screen (for use in client-side image   maps)
Hyperlink_shape_shortDescription=屏幕上热点的形状（用于客户端图像映射）
#@EN@ Target
Hyperlink_target_displayName=目标
#@EN@ The resource at the specified URL is displayed in the frame that is   specified with the target attribute
Hyperlink_target_shortDescription=位于指定 URL 的资源将显示在使用 target 属性指定的框架中
#@EN@ Focus Script
Hyperlink_onFocus_displayName=焦点脚本
#@EN@ Scripting code executed when this component  receives focus
Hyperlink_onFocus_shortDescription=此组件获取焦点时执行的脚本代码。
#@EN@ URL Lang
Hyperlink_urlLang_displayName=URL 语言代码
#@EN@ The language code of the resource designated by this hyperlink. 
Hyperlink_urlLang_shortDescription=由此超级链接指定的资源的语言代码。
#@EN@ Key Up Script
Hyperlink_onKeyUp_displayName=释放键脚本
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
Hyperlink_onKeyUp_shortDescription=当组件具有焦点且用户释放某个键时执行的脚本代码。
#@EN@ Mouse Up Script
Hyperlink_onMouseUp_displayName=释放鼠标脚本
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
Hyperlink_onMouseUp_shortDescription=当鼠标指针位于组件上且用户释放鼠标按钮时执行的脚本代码。
#@EN@ CSS Style Class(es)
Hyperlink_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Hyperlink_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ CSS Style(s)
Hyperlink_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Hyperlink_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ URL
Hyperlink_url_displayName=URL
#@EN@ Absolute, relative, or context relative (starting with &quot;/&quot;) URL to the   resource selected by this hyperlink
Hyperlink_url_shortDescription=此超级链接选择的且指向资源的绝对、相对或上下文相对（以 &quot;/&quot; 开头）URL
#@EN@ Click Script
Hyperlink_onClick_displayName=单击脚本
#@EN@ Scripting code executed when a mouse click occurs over this component.  If the component submits the form (by using the action attribute), the   script that you use with the onClick attribute should not return from   the function
Hyperlink_onClick_shortDescription=用鼠标单击此组件时执行的脚本代码。如果组件提交表单（通过使用 action 属性），则不应通过函数返回与 onClick 属性配合使用的脚本
#@EN@ Blur Script
Hyperlink_onBlur_displayName=模糊脚本
#@EN@ Scripting code executed when this element loses focus. 
Hyperlink_onBlur_shortDescription=此元素失去焦点时执行的脚本代码。
#@EN@ Mouse Down Script
Hyperlink_onMouseDown_displayName=按下鼠标脚本
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
Hyperlink_onMouseDown_shortDescription=当鼠标指针位于组件上且用户按下鼠标按钮时执行的脚本代码。
#@EN@ Tool Tip
Hyperlink_toolTip_displayName=工具提示
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
Hyperlink_toolTip_shortDescription=为 HTML 元素设置 title 属性的值。如果将鼠标光标悬停在该 HTML 元素上，则指定的文本将作为工具提示进行显示。
#@EN@ Value
Hyperlink_value_displayName=值
#@EN@ The current value of this component
Hyperlink_value_shortDescription=此组件的当前值
#@EN@ Type
Hyperlink_type_displayName=类型
#@EN@ The MIME content type of the resource specified by this component. 
Hyperlink_type_shortDescription=此组件指定的资源的 MIME 内容类型。
#@EN@ Disabled
Hyperlink_disabled_displayName=禁用
#@EN@ Flag indicating that clicking of this component by the user is not  currently permitted
Hyperlink_disabled_shortDescription=该标志指示当前不允许用户单击此组件
#@EN@ Mouse Out Script
Hyperlink_onMouseOut_displayName=移开鼠标脚本
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
Hyperlink_onMouseOut_shortDescription=将鼠标指针从此组件上方移开时执行的脚本代码。
#@EN@ Mouse In Script
Hyperlink_onMouseOver_displayName=移入鼠标脚本
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
Hyperlink_onMouseOver_shortDescription=当用户将鼠标指针移入此组件的边界内时执行的脚本代码。
#@EN@ Mouse Move Script
Hyperlink_onMouseMove_displayName=移动鼠标脚本
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
Hyperlink_onMouseMove_shortDescription=当用户将鼠标指针移动到组件上方时执行的脚本代码。
#@EN@ HTML Template
Hyperlink_htmlTemplate_displayName=HTML 模板
#@EN@ Alternative HTML template to be used by this component. 
Hyperlink_htmlTemplate_shortDescription=此组件使用的替代 HTML 模板。
#@EN@ text
Hyperlink_text_displayName=文本
#@EN@ The text to be displayed for the hyperlink. 
Hyperlink_text_shortDescription=为超级链接显示的文本。
#@EN@ Visible
Hyperlink_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
Hyperlink_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ Key Down Script
Hyperlink_onKeyDown_displayName=按下键脚本
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
Hyperlink_onKeyDown_shortDescription=当组件具有焦点且用户按下某个键时执行的脚本代码。
#@EN@ Tab Index
Hyperlink_tabIndex_displayName=Tab 键索引
#@EN@ Position of this element in the tabbing order of the current document
Hyperlink_tabIndex_shortDescription=当使用 Tab 键依次浏览时，用于确定此元素在当前文档中所处的位置
#@EN@ Text Area
TextArea_displayName=文本区域
#@EN@ The TextArea component is used to create a multiple-line input field for  text.  As part of the dynamic behavior, TextArea supports autoSave: when enabled,  the content of the TextArea will be saved / submitted via ajax call to the server  every number of autoSave milliseconds
TextArea_shortDescription=TextArea 组件用于为文本创建多行输入字段。作为动态行为的一部分，TextArea 支持 autoSave：当启用此功能时，将在每一个 autoSave 微秒数上保存 TextArea 的内容并将此内容通过 ajax 调用提交至服务器
#@LC@ ### New message ###
#@EN@ Submit Form
TextArea_submitForm_displayName=提交表单
#@LC@ ### New message ###
#@EN@ SubmitForm attribute is disabled for TextArea.  TextArea uses enter key to open new line.    
TextArea_submitForm_shortDescription=对于 TextArea，将禁用 SubmitForm 属性。TextArea 使用 Enter 键打开一个新行。
#@EN@ Maximum Length
TextArea_maxLength_displayName=最大长度
#@EN@ The maximum number of characters that can be entered for this field. 
TextArea_maxLength_shortDescription=可在此字段中输入的最多字符数。
#@EN@ Rows
TextArea_rows_displayName=行数
#@EN@ Number of rows used to render the textarea
TextArea_rows_shortDescription=用于呈现文本区域的行数
#@EN@ AutoSave
TextArea_autoSave_displayName=AutoSave
#@LC@ ### Update message ###
#@EN@ Attribute indicating to turn on/off the Auto-save  functionality of the TextArea.    Auto-save will submit the content of the modified textArea for server side  processing that will be processed using JSFX partial lifecycle cycle.  Only modified data will be submitted, that is textArea data will be  submitted every autoSave milliseconds only if it has been modified within  last interval.     AutoSave is specified in milliseconds
TextArea_autoSave_shortDescription=该属性指示打开/关闭 TextArea 的自动保存功能。自动保存功能将向服务器端提交修改的 textArea 内容，以便通过 JSFX 的部分生命周期对其进行处理。仅提交修改的数据，也就是说，只有在上个指定的 autoSave 时间间隔内修改了 textArea 数据时，才会按每 autoSave 毫秒提交 textArea 数据。指定 autoSave 时以毫秒为单位
#@EN@ Link
Link_displayName=链接
#@EN@ The Link component is iused to insert information into the &lt;head&gt;   element, such as links to external stylesheets. 
Link_shortDescription=链接组件用于将信息插入到 &lt;head&gt; 元素中，例如指向外部样式表的链接。
#@EN@ Mime type
Link_type_displayName=Mime 类型
#@EN@ Specifies the MIME type of the target URL
Link_type_shortDescription=指定目标 URL 的 MIME 类型
#@EN@ Rel
Link_rel_displayName=Rel
#@EN@ Defines the relationship between the current document and the   targeted document
Link_rel_shortDescription=定义当前文档与目标文档之间的关系
#@EN@ Media Type
Link_media_displayName=介质类型
#@EN@ Specifies the type of display device for which the referenced document   is designed
Link_media_shortDescription=指定为其设计引用文档的显示设备的类型
#@EN@ URL
Link_url_displayName=URL
#@EN@ The absolute or relative target URL of the resource. 
Link_url_shortDescription=资源的绝对或相对目标 URL。
#@EN@ Rendered Flag
Link_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Link_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Charset
Link_charset_displayName=字符集
#@EN@ Defines the character (charset) encoding of the target URL
Link_charset_shortDescription=定义目标 URL 的字符（字符集）编码
#@EN@ URL Language
Link_urlLang_displayName=URL 语言代码
#@EN@ Defines the ISO language code of the human language used in the target   URL file
Link_urlLang_shortDescription=定义在目标 URL 文件中使用的人类语言的 ISO 语言代码
#@EN@ Component Identifier
Link_id_displayName=组件标识符
#@EN@ The component identifier for this component
Link_id_shortDescription=此组件的组件标识符
#@EN@ MastFooter Section
MastFooter_displayName=脚注部分
#@EN@ @author deep 
MastFooter_shortDescription=  @author deep 
#@EN@ Corporate Image Height
MastFooter_corporateImageHeight_displayName=企业图像高度
#@EN@ The height to use for the Corporate Image, in pixels
MastFooter_corporateImageHeight_shortDescription=企业图像的高度（以像素为单位）
#@EN@ Corporate Image Width
MastFooter_corporateImageWidth_displayName=企业图像宽度
#@EN@ The width to use for the Corporate Image URL, in pixels
MastFooter_corporateImageWidth_shortDescription=企业图像的宽度（以像素为单位）
#@EN@ CSS Style Class(es)
MastFooter_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
MastFooter_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Visible
MastFooter_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
MastFooter_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ CSS Style(s)
MastFooter_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
MastFooter_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Corporate Image Description
MastFooter_corporateImageDescription_displayName=企业图像描述
#@EN@ The description for the Corporate Image, used as alt text for the image. 
MastFooter_corporateImageDescription_shortDescription=企业图像的描述，用作图像的替代文本。
#@EN@ Rendered Flag
MastFooter_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
MastFooter_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Corporate Image URL
MastFooter_corporateImageURL_displayName=企业图像 URL
#@EN@ The url to the image file to use for the Corporate Image
MastFooter_corporateImageURL_shortDescription=用于企业图像的图像文件 URL
#@EN@ Component Identifier
MastFooter_id_displayName=组件标识符
#@EN@ The component identifier for this component
MastFooter_id_shortDescription=此组件的组件标识符
#@EN@ Legend
Legend_displayName=图例
#@EN@ The Legend component displays a legend to explain icons used in a page. 
Legend_shortDescription=图例组件显示一个图例以说明页面中使用的图标。
#@EN@ Value
Legend_value_displayName=值
#@EN@ The current value of this component
Legend_value_shortDescription=此组件的当前值
#@EN@ CSS Style Class(es)
Legend_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Legend_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Legend Text
Legend_text_displayName=图例文本
#@EN@ The explanatory text that is displayed in the legend
Legend_text_shortDescription=在图例中显示的说明性文本。
#@EN@ Converter
Legend_converter_displayName=转换器
#@EN@ The converter attribute is used to specify a method to translate native  property values to String and back for this component
Legend_converter_shortDescription=converter 属性用于指定一个转换方法，以便为此组件实现自身属性值与 String 属性值之间的转换
#@EN@ Legend Position
Legend_position_displayName=图例位置
#@EN@ Specifies the position of the legend
Legend_position_shortDescription=指定图例的位置
#@EN@ Visible
Legend_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
Legend_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ CSS Style(s)
Legend_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Legend_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Rendered Flag
Legend_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Legend_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Component Identifier
Legend_id_displayName=组件标识符
#@EN@ The component identifier for this component
Legend_id_shortDescription=此组件的组件标识符
#@EN@ Script
Script_displayName=脚本
#@EN@ The Script component is can be used to refer to a Javascript file, by using   the url attribute
Script_shortDescription=脚本组件用于引用 Javascript 文件（通过使用 url 属性）
#@EN@ Type
Script_type_displayName=类型
#@EN@ Indicates the MIME type of the script
Script_type_shortDescription=指示脚本的 MIME 类型
#@EN@ URL
Script_url_displayName=URL
#@EN@ Defines the absolute or relative URL to a file that contains the   script
Script_url_shortDescription=定义包含脚本的文件的绝对或相对 URL
#@EN@ Rendered Flag
Script_rendered_displayName=呈现标志
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Script_rendered_shortDescription=使用 rendered 属性可指示是否应该将组件的 HTML 代码包含在呈现的 HTML 页中
#@EN@ Charset
Script_charset_displayName=字符集
#@EN@ Defines the character (charset) encoding of the target URL.  See iana.org for a complete list of character encodings. 
Script_charset_shortDescription=定义目标 URL 的字符（字符集）编码。有关字符编码的完整列表，请参见 iana.org。
#@EN@ Component Identifier
Script_id_displayName=组件标识符
#@EN@ The component identifier for this component
Script_id_shortDescription=此组件的组件标识符
#@EN@ Alarm Status
AlarmStatus_displayName=警报状态
#@EN@ The AlarmStatus component is used to display alarm information in the   Masthead component.    @deprecated See tld documentation for more information on how to create   alarmStatus without using the alarmStatus component. 
AlarmStatus_shortDescription=AlarmStatus 组件用于在标题组件中显示警报信息。有关如何在不使用 alarmStatus 组件的情况下创建 alarmStatus 的更多信息，@deprecated @see tld 文档。
#@EN@ Number of Major Alarms
AlarmStatus_numMajorAlarms_displayName=重要警报数
#@EN@ The number of major alarms, to display next to the appropriate icon. 
AlarmStatus_numMajorAlarms_shortDescription=在相应图标旁边显示的重要警报数。
#@EN@ Value
AlarmStatus_value_displayName=值
#@EN@ The current value of this component. 
AlarmStatus_value_shortDescription=此组件的当前值。
#@EN@ Double Click Script
AlarmStatus_onDblClick_displayName=双击脚本
#@EN@ Scripting code executed when a mouse double click occurs over this   component. 
AlarmStatus_onDblClick_shortDescription=用鼠标双击此组件时执行的脚本代码。
#@EN@ Major Icon
AlarmStatus_majorIcon_displayName=“重要”图标
#@EN@ The key identifier for the theme image to use for the major alarms icon. 
AlarmStatus_majorIcon_shortDescription=用于重要警报图标的主题图像的键标识符。
#@EN@ Number of Down Alarms
AlarmStatus_numDownAlarms_displayName=关闭警报数
#@EN@ The number of down alarms, to display next to the appropriate icon. 
AlarmStatus_numDownAlarms_shortDescription=在相应图标旁边显示的关闭警报数。
#@EN@ Critical Alarms
AlarmStatus_criticalAlarms_displayName=紧急警报
#@EN@ Specify if the critical alarm count should be displayed
AlarmStatus_criticalAlarms_shortDescription=指定是否应该显示紧急警报计数
#@EN@ Minor Icon
AlarmStatus_minorIcon_displayName=“次要”图标
#@EN@ The key identifier for the theme image to use for the minor alarms icon. 
AlarmStatus_minorIcon_shortDescription=用于次要警报图标的主题图像的键标识符。
#@EN@ Number of Critical Alarms
AlarmStatus_numCriticalAlarms_displayName=紧急警报数
#@EN@ The number of critical alarms, to display next to the appropriate icon. 
AlarmStatus_numCriticalAlarms_shortDescription=在相应图标旁边显示的紧急警报数。
#@EN@ CSS Style Class(es)
AlarmStatus_styleClass_displayName=CSS 样式类
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
AlarmStatus_styleClass_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式类。
#@EN@ Major Alarms
AlarmStatus_majorAlarms_displayName=重要警报
#@EN@ Specify if the major alarm count should be displayed
AlarmStatus_majorAlarms_shortDescription=指定是否应该显示重要警报计数
#@EN@ Minor Alarms
AlarmStatus_minorAlarms_displayName=次要警报
#@EN@ Specify if the minor alarm count should be displayed
AlarmStatus_minorAlarms_shortDescription=指定是否应该显示次要警报计数
#@EN@ Critical Icon
AlarmStatus_criticalIcon_displayName=“紧急”图标
#@EN@ The key identifier for the theme image to use for the critical alarms icon. 
AlarmStatus_criticalIcon_shortDescription=用于紧急警报图标的主题图像的键标识符。
#@EN@ Icon
AlarmStatus_icon_displayName=图标
#@EN@ The identifier of the desired theme image. 
AlarmStatus_icon_shortDescription=所需主题图像的标识符。
#@EN@ Visible
AlarmStatus_visible_displayName=可见
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
AlarmStatus_visible_shortDescription=使用 visible 属性可指示用户在呈现的 HTML 页中能否看到组件
#@EN@ CSS Style(s)
AlarmStatus_style_displayName=CSS 样式
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
AlarmStatus_style_shortDescription=呈现此组件时，应用于最外层 HTML 元素的 CSS 样式。
#@EN@ Text Position
AlarmStatus_textPosition_displayName=文本位置
#@EN@ Specifies where the text will be placed relative to the image
AlarmStatus_textPosition_shortDescription=指定文本相对于图像的放置位置
#@EN@ Down Alarms
AlarmStatus_downAlarms_displayName=关闭警报
#@EN@ Specify if the down alarm count should be displayed
AlarmStatus_downAlarms_shortDescription=指定是否应该显示关闭警报计数
#@EN@ Number of Minor Alarms
AlarmStatus_numMinorAlarms_displayName=次要警报数
#@EN@ The number of minor alarms, to display next to the appropriate icon. 
AlarmStatus_numMinorAlarms_shortDescription=在相应图标旁边显示的次要警报数。
#@EN@ Down Icon
AlarmStatus_downIcon_displayName=“关闭”图标
#@EN@ The key identifier for the theme image to use for the down alarms icon. 
AlarmStatus_downIcon_shortDescription=用于关闭警报图标的主题图像的键标识符。
