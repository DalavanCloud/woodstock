#@EN@ Panels
TablePanels_displayName=パネル
#@EN@ Component that represents an embedded panel.    Note: Column headers and footers are rendered by TableRowGroupRenderer
TablePanels_shortDescription=埋め込みパネルを表すコンポーネント。注: 列ヘッダーおよびフッターは TableRowGroupRenderer によって描画されます
#@EN@ Width
TablePanels_width_displayName=幅
#@EN@ Use the width attribute to specify the width of the cells of the   column
TablePanels_width_shortDescription=width 属性を使用して、列のセル幅を指定できます
#@EN@ Double Click Script
TablePanels_onDblClick_displayName=ダブルクリックスクリプト
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
TablePanels_onDblClick_shortDescription=このコンポーネント上でマウスがダブルクリックされたときに実行するスクリプトコード。 
#@EN@ Key Press Script
TablePanels_onKeyPress_displayName=キー押下スクリプト
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
TablePanels_onKeyPress_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押して放したときに実行するスクリプトコード。 
#@EN@ Columns Spanned By the Cell
TablePanels_colSpan_displayName=セルがまたがる列数
#@EN@ The COLSPAN attribute of TD specifies the number of columns that are  spanned by the cell
TablePanels_colSpan_shortDescription=TD の COLSPAN 属性は、セルがまたがる列数を指定します
#@EN@ Cell Background Color
TablePanels_bgColor_displayName=セルの背景色
#@EN@ The BGCOLOR attribute suggests a background color for the cell
TablePanels_bgColor_shortDescription=BGCOLOR 属性はセルの背景色を示します
#@EN@ Key Up Script
TablePanels_onKeyUp_displayName=Table_onKeyUp_displayName=
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
TablePanels_onKeyUp_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを放したときに実行するスクリプトコード。 
#@EN@ Mouse Up Script
TablePanels_onMouseUp_displayName=マウスアップスクリプト
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
TablePanels_onMouseUp_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを放したときに実行するスクリプトコード。 
#@EN@ CSS Style Class(es)
TablePanels_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
TablePanels_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Alignment Character
TablePanels_char_displayName=位置揃え文字
#@EN@ Use the char attribute to specify a character to use for   horizontal alignment in each cell in the row
TablePanels_char_shortDescription=char 属性を使用して、行の各セルの水平位置揃えに使用する文字を指定できます
#@EN@ Height
TablePanels_height_displayName=高さ
#@EN@ The number of pixels for the cell's height
TablePanels_height_shortDescription=セルの高さ (ピクセル単位)
#@EN@ Horizontal Alignment
TablePanels_align_displayName=水平位置揃え
#@EN@ Use the align attribute to specify the horizontal alignment for   the content of each cell in the column
TablePanels_align_shortDescription=align 属性を使用して、列の各セルの内容の水平位置揃えを指定できます
#@EN@ Cells Covered By Header Cell
TablePanels_scope_displayName=ヘッダーセルがカバーするセル
#@EN@ Use the scope attribute to specify that the data cells of the   column are also acting as headers for rows or other columns of the table
TablePanels_scope_shortDescription=scope 属性を使用して、列のデータセルがその表の行または他の列のヘッダーとしての役割も持っていることを指定できます
#@EN@ CSS Style(s)
TablePanels_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
TablePanels_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Abbreviation for Header Cell
TablePanels_abbr_displayName=ヘッダーセルの省略名
#@EN@ ABBR gives an abbreviated version of the cell's content
TablePanels_abbr_shortDescription=ABBR 属性はセルの内容の省略名を表します
#@EN@ Alignment Character Offset
TablePanels_charOff_displayName=位置揃え文字オフセット
#@EN@ Use the charOff attribute to specify the offset of the first   occurrence of the alignment character that is specified with the   char attribute
TablePanels_charOff_shortDescription=charOff 属性を使用して、char 属性で指定された位置揃え文字の最初の出現へのオフセットを指定できます
#@EN@ onClick
TablePanels_onClick_displayName=クリックスクリプト
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
TablePanels_onClick_shortDescription=このコンポーネント上でマウスがクリックされたときに実行するスクリプトコード。 
#@EN@ Tool Tip
TablePanels_toolTip_displayName=ツールチップ
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
TablePanels_toolTip_shortDescription=HTML 要素の title 属性の値を設定します。指定したテキストは、マウスカーソルがこの HTML 要素上に置かれたときにツールチップとして表示されます。 
#@EN@ Mouse Down Script
TablePanels_onMouseDown_displayName=マウスダウンスクリプト
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
TablePanels_onMouseDown_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを押したときに実行するスクリプトコード。 
#@EN@ List of Header Cells for Current Cell
TablePanels_headers_displayName=現在のセルのヘッダーセルリスト
#@EN@ The HEADERS attribute specifies the header cells that apply to the  TD
TablePanels_headers_shortDescription=HEADERS 属性は TD に適用されるヘッダーセルを指定します
#@EN@ Category of Header Cell
TablePanels_axis_displayName=ヘッダーセルのカテゴリ
#@EN@ The AXIS attribute provides a method of categorizing cells
TablePanels_axis_shortDescription=AXIS 属性は、セルを分類する方法を提供します
#@EN@ Extra HTML
TablePanels_extraHtml_displayName=追加 HTML
#@EN@ Extra HTML to be appended to the tag output by this renderer. 
TablePanels_extraHtml_shortDescription=このレンダリングによってタグ出力に追加される HTML。 
#@EN@ Vertical Position
TablePanels_valign_displayName=垂直位置揃え
#@EN@ Use the valign attribute to specify the vertical alignment for the   content of each cell in the column
TablePanels_valign_shortDescription=valign 属性を使用して、列の各セルの内容の垂直位置揃えを指定できます
#@EN@ Suppress Word Wrap
TablePanels_noWrap_displayName=折り返しを抑止
#@EN@ Use the noWrap attribute to disable word wrapping of this column's   cells in visual browsers
TablePanels_noWrap_shortDescription=noWrap 属性を使用して、ビジュアルブラウザでのこの列のセルの折り返しを無効にできます
#@EN@ Rows Spanned By the Cell
TablePanels_rowSpan_displayName=セルがまたがる行数
#@EN@ The ROWSPAN attribute of TD specifies the number of rows that are  spanned by the cell
TablePanels_rowSpan_shortDescription=TD の ROWSPAN 属性は、セルがまたがる行数を指定します
#@EN@ Mouse Out Script
TablePanels_onMouseOut_displayName=マウスアウトスクリプト
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
TablePanels_onMouseOut_shortDescription=このコンポーネントの外にマウスカーソルが移動したときに実行するスクリプトコード。 
#@EN@ Mouse In Script
TablePanels_onMouseOver_displayName=マウスインスクリプト
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
TablePanels_onMouseOver_shortDescription=このコンポーネント内に、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ Mouse Move Script
TablePanels_onMouseMove_displayName=マウス移動スクリプト
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
TablePanels_onMouseMove_shortDescription=コンポーネント内で、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ Is Filter Panel
TablePanels_filterPanel_displayName=フィルタパネル
#@EN@ Flag indicating this component should also render a filter panel, in addition to  the sort and preferences panels
TablePanels_filterPanel_shortDescription=このコンポーネントが、ソートパネルおよび設定パネルに加え、フィルタパネルも描画することを示すフラグ
#@EN@ Visible
TablePanels_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be   viewable by the user in the rendered HTML page. 
TablePanels_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます。 
#@EN@ Key Down Script
TablePanels_onKeyDown_displayName=キーダウンスクリプト
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
TablePanels_onKeyDown_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押したときに実行するスクリプトコード。 
#@EN@ Is Preferences Panel
TablePanels_preferencesPanel_displayName=設定パネル
#@EN@ Flag indicating this component should also render a preferences panel, in   addition to the sort and filter panels
TablePanels_preferencesPanel_shortDescription=このコンポーネントが、ソートパネルおよびフィルタパネルに加え、設定パネルも描画することを示すフラグ
#@EN@ Rendered Flag
UIComponentBase_rendered_displayName=描画フラグ
#@EN@ Indicates whether the HTML code for the component should be included in the rendered HTML page
UIComponentBase_rendered_shortDescription=コンポーネントの HTML コードを HTML ページの描画対象に含めるかどうかを示します
#@EN@ Component Identifier
UIComponentBase_id_displayName=コンポーネント識別子
#@EN@ This component's unique identifier
UIComponentBase_id_shortDescription=このコンポーネントの一意の識別子
#@EN@ Table2RowGroup
Table2RowGroup_displayName=Table2RowGroup
#@EN@ Component that represents a group of table rows.    The Table2RowGroup component provides a layout mechanism for displaying rows   of data
Table2RowGroup_shortDescription=表行のグループを表すコンポーネント。Table2RowGroup コンポーネントは、データの行を表示するレイアウト機能を提供します
#@EN@ HTML Template
Table2RowGroup_htmlTemplate_displayName=HTML テンプレート
#@EN@ Alternative HTML template to be used by this component. 
Table2RowGroup_htmlTemplate_shortDescription=このコンポーネントで使用される代替 HTML テンプレート。 
#@EN@ Double Click Script
TableRowGroupBase_onDblClick_displayName=ダブルクリックスクリプト
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
TableRowGroupBase_onDblClick_shortDescription=このコンポーネント上でマウスがダブルクリックされたときに実行するスクリプトコード。 
#@EN@ Table Data Sorter
TableRowGroupBase_tableDataSorter_displayName=表データソーター
#@EN@ The tableDataSorter attribute is used to define sort critera and   the mechanism for sorting the contents of a TableDataProvider
TableRowGroupBase_tableDataSorter_shortDescription=tableDataSorter 属性を使用して、ソート条件と、TableDataProvider の内容をソートするための機構を定義できます
#@EN@ Key Press Script
TableRowGroupBase_onKeyPress_displayName=キー押下スクリプト
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
TableRowGroupBase_onKeyPress_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押して放したときに実行するスクリプトコード。 
#@EN@ Rendered Flag
WebuiComponent_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
WebuiComponent_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Source Data
TableRowGroupBase_sourceData_displayName=ソースデータ
#@EN@ The sourceData attribute is used to specify the data source to   populate the table
TableRowGroupBase_sourceData_shortDescription=sourceData 属性を使用して、表を生成するデータソースを指定できます
#@EN@ Component Identifier
WebuiComponent_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
WebuiComponent_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Row Background Color
TableRowGroupBase_bgColor_displayName=行の背景色
#@EN@ The deprecated BGCOLOR attribute suggests a background color for the  row
TableRowGroupBase_bgColor_shortDescription=非推奨の BGCOLOR 属性は、行の背景色を示します
#@EN@ Key Up Script
TableRowGroupBase_onKeyUp_displayName=キーアップスクリプト
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
TableRowGroupBase_onKeyUp_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを放したときに実行するスクリプトコード。 
#@EN@ Mouse Up Script
TableRowGroupBase_onMouseUp_displayName=マウスアップスクリプト
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
TableRowGroupBase_onMouseUp_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを放したときに実行するスクリプトコード。 
#@EN@ Alignment Character For Cells
TableRowGroupBase_char_displayName=セルの位置揃え文字
#@EN@ Use the char attribute to specify a character to use for   horizontal alignment in each cell in the row
TableRowGroupBase_char_shortDescription=char 属性を使用して、行の各セルの水平位置揃えに使用する文字を指定できます
#@EN@ Horizontal Alignment Cells In Group
TableRowGroupBase_align_displayName=グループ内のセルの水平位置揃え
#@EN@ Use the align attribute to specify the horizontal alignment for   the content of each cell in the row
TableRowGroupBase_align_shortDescription=align 属性を使用して、行の各セルの内容の水平位置揃えを指定できます
#@EN@ Show Select Multiple Button
TableRowGroupBase_selectMultipleToggleButton_displayName=複数選択ボタンを表示
#@EN@ Use the selectMultipleToggleButton attribute to display a button   in the group header to allow users to select all rows of the group at once
TableRowGroupBase_selectMultipleToggleButton_shortDescription=selectMultipleToggleButton 属性を使用して、ユーザーがグループのすべての行を一度に選択できるボタンをグループヘッダーに表示できます。
#@EN@ Alignment Character Offset
TableRowGroupBase_charOff_displayName=位置揃え文字オフセット
#@EN@ Use the charOff attribute to specify the offset of the first   occurrence of the alignment character that is specified with the   char attribute
TableRowGroupBase_charOff_shortDescription=charOff 属性を使用して、char 属性で指定された位置揃え文字の最初の出現へのオフセットを指定できます
#@EN@ Click Script
TableRowGroupBase_onClick_displayName=クリックスクリプト
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
TableRowGroupBase_onClick_shortDescription=このコンポーネント上でマウスがクリックされたときに実行するスクリプトコード。 
#@EN@ Show Group Toggle Button
TableRowGroupBase_groupToggleButton_displayName=グループ切り替えボタンを表示
#@EN@ Use the groupToggleButton attribute to display a button in the   group header to allow users to collapse and expand the group of rows. 
TableRowGroupBase_groupToggleButton_shortDescription=groupToggleButton 属性を使用して、ユーザーが行のグループを収縮または展開できるボタンをグループヘッダーに表示できます。 
#@EN@ Tool Tip
TableRowGroupBase_toolTip_displayName=ツールチップ
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
TableRowGroupBase_toolTip_shortDescription=HTML 要素の title 属性の値を設定します。指定したテキストは、マウスカーソルがこの HTML 要素上に置かれたときにツールチップとして表示されます。 
#@EN@ Mouse Down Script
TableRowGroupBase_onMouseDown_displayName=マウスダウンスクリプト
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
TableRowGroupBase_onMouseDown_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを押したときに実行するスクリプトコード。 
#@EN@ Table Data Filter
TableRowGroupBase_tableDataFilter_displayName=表データフィルタ
#@EN@ The tableDataFilter attribute is used to define filter critera and   mechanism for filtering the contents of a TableDataProvider
TableRowGroupBase_tableDataFilter_shortDescription=tableDataFilter 属性を使用して、フィルタ条件と、TableDataProvider の内容を絞り込むための機構を定義できます。
#@EN@ Paginated rows
TableRowGroupBase_rows_displayName=ページ設定行
#@EN@ The number of rows per page to be displayed for a paginated table
TableRowGroupBase_rows_shortDescription=ページ設定された表に表示する 1 ページあたりの行数
#@EN@ Source Variable
TableRowGroupBase_sourceVar_displayName=ソース変数
#@EN@ Use the sourceVar attribute to specify the name of the   request-scope attribute under which model data for the current row will be   exposed when iterating
TableRowGroupBase_sourceVar_shortDescription=sourceVar 属性を使用して、繰り返し時に現在の行のモデルデータを公開する request-scope 属性の名前名を指定できます
#@EN@ Vertical Alignment Of Cells In Group
TableRowGroupBase_valign_displayName=グループ内のセルの垂直位置揃え
#@EN@ Use the valign attribute to specify the vertical alignment for the   content of each cell in the column
TableRowGroupBase_valign_shortDescription=valign 属性を使用して、列の各セルの内容の垂直位置揃えを指定できます
#@EN@ First Row
TableRowGroupBase_first_displayName=先頭行
#@EN@ Use the first attribute to specify which row should be the first   to be displayed
TableRowGroupBase_first_shortDescription=first 属性を使用して、最初に表示する行を指定できます
#@EN@ Mouse Out Script
TableRowGroupBase_onMouseOut_displayName=マウスアウトスクリプト
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
TableRowGroupBase_onMouseOut_shortDescription=このコンポーネントの外にマウスカーソルが移動したときに実行するスクリプトコード。 
#@EN@ Mouse In Script
TableRowGroupBase_onMouseOver_displayName=マウスインスクリプト
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
TableRowGroupBase_onMouseOver_shortDescription=このコンポーネント内に、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ Mouse Move Script
TableRowGroupBase_onMouseMove_displayName=マウス移動スクリプト
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
TableRowGroupBase_onMouseMove_shortDescription=コンポーネント内で、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ Empty Data Message
TableRowGroupBase_emptyDataMsg_displayName=空のデータメッセージ
#@EN@ The text to be displayed when the table does not contain data
TableRowGroupBase_emptyDataMsg_shortDescription=表にデータが含まれていない場合に表示するテキスト
#@EN@ Is Selected
TableRowGroupBase_selected_displayName=選択
#@EN@ Flag indicating that the current row is selected
TableRowGroupBase_selected_shortDescription=現在の行が選択されていることを示すフラグ
#@EN@ Is Collapsed
TableRowGroupBase_collapsed_displayName=収縮
#@EN@ Use the collapsed attribute to initially render the group as collapsed, so that   the data rows are hidden and only the header row is visible
TableRowGroupBase_collapsed_shortDescription=collapsed 属性を使用して、初期描画で収縮した状態でグループを表示できます。この状態では、データ行は非表示になり、ヘッダー行だけが表示されます
#@EN@ Visible
TableRowGroupBase_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
TableRowGroupBase_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ Key Down Script
TableRowGroupBase_onKeyDown_displayName=キーダウンスクリプト
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
TableRowGroupBase_onKeyDown_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押したときに実行するスクリプトコード。 
#@EN@ header Text
TableRowGroupBase_headerText_displayName=ヘッダーテキスト
#@EN@ The text to be displayed in the group header. 
TableRowGroupBase_headerText_shortDescription=グループヘッダーに表示するテキスト。 
#@EN@ CSS Style Class(es)
TableRowGroupBase_styleClasses_displayName=CSS スタイルクラス
#@EN@ Use the styleClasses attribute to specify a list of CSS style   classes to apply to the rows of the group
TableRowGroupBase_styleClasses_shortDescription=styleClasses 属性を使用して、グループの行に適用する CSS スタイルクラスのリストを指定できます
#@EN@ Page Separator
PageSeparator_displayName=ページセパレータ
#@EN@ The PageSeparator component creates a horizontal line. 
PageSeparator_shortDescription=PageSeparator コンポーネントは水平線を作成します。 
#@EN@ CSS Style Class(es)
PageSeparator_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
PageSeparator_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Value
PageSeparator_value_displayName=値
#@EN@ The current value of this component
PageSeparator_value_shortDescription=このコンポーネントの現在の値
#@EN@ Converter
PageSeparator_converter_displayName=コンバータ
#@EN@ Converter instance registered with this component.
PageSeparator_converter_shortDescription=このコンポーネントに登録されているコンバータのインスタンス。
#@EN@ Visible
PageSeparator_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
PageSeparator_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ CSS Style(s)
PageSeparator_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
PageSeparator_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Rendered Flag
PageSeparator_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
PageSeparator_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Component Identifier
PageSeparator_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
PageSeparator_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Message Group
MessageGroup_displayName=メッセージグループ
#@EN@ The MessageGroup component is used to display a list of messages for the page  and all its components. 
MessageGroup_shortDescription=MessageGroup コンポーネントを使用して、ページのメッセージおよびそのすべてのコンポーネントの一覧を表示できます。 
#@EN@ Tool Tip
MessageGroup_toolTip_displayName=ツールチップ
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
MessageGroup_toolTip_shortDescription=HTML 要素の title 属性の値を設定します。指定したテキストは、マウスカーソルがこの HTML 要素上に置かれたときにツールチップとして表示されます。 
#@EN@ CSS Style Class(es)
MessageGroup_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
MessageGroup_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ title
MessageGroup_title_displayName=タイトル
#@EN@ Sets the title of the message group
MessageGroup_title_shortDescription=メッセージグループのタイトルを設定
#@EN@ Show Summary Message
MessageGroup_showSummary_displayName=概要メッセージを表示
#@EN@ Set this attribute to true to display the summary message. 
MessageGroup_showSummary_shortDescription=この属性を True に設定すると、概要メッセージを表示できます。 
#@EN@ Visible
MessageGroup_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
MessageGroup_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ CSS Style(s)
MessageGroup_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
MessageGroup_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Show Global Messages Only
MessageGroup_showGlobalOnly_displayName=グローバルメッセージのみを表示
#@EN@ Use the showGlobalOnly attribute to display only those messages that   are not associated with a component id
MessageGroup_showGlobalOnly_shortDescription=showGlobalOnly 属性を使用して、コンポーネント ID に関連付けられていないメッセージのみを表示できます
#@EN@ Rendered Flag
MessageGroup_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
MessageGroup_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Show Detail Message
MessageGroup_showDetail_displayName=詳細メッセージを表示
#@EN@ Set this attribute to true to display the detailed message. 
MessageGroup_showDetail_shortDescription=この属性を True に設定すると、詳細メッセージを表示できます。 
#@EN@ Component Identifier
MessageGroup_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
MessageGroup_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Frame Set
FrameSet_displayName=フレームセット
#@EN@ The FrameSet component defines a set of frames. 
FrameSet_shortDescription=FrameSet コンポーネントはフレームのセットを定義します。 
#@EN@ Tool Tip
FrameSet_toolTip_displayName=ツールチップ
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
FrameSet_toolTip_shortDescription=HTML 要素の title 属性の値を設定します。指定したテキストは、マウスカーソルがこの HTML 要素上に置かれたときにツールチップとして表示されます。 
#@EN@ Number of Columns
FrameSet_cols_displayName=列数
#@EN@ Defines the number and size of columns in a frameset
FrameSet_cols_shortDescription=フレームセット内の列の数とサイズを定義します
#@EN@ Border Color
FrameSet_borderColor_displayName=ボーダー色
#@EN@ The bordercolor attribute allows you to set the color of the frame   borders using a hex value or a color name. 
FrameSet_borderColor_shortDescription=bordercolor 属性を使用すると、16 進値または色名を使用してフレームのボーダーの色を設定できます。 
#@EN@ CSS Style Class(es)
FrameSet_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
FrameSet_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Number of Rows
FrameSet_rows_displayName=行数
#@EN@ Defines the number and size of rows in a frameset
FrameSet_rows_shortDescription=フレームセットの行の数とサイズを定義します
#@EN@ CSS Style(s)
FrameSet_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
FrameSet_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Frame Border
FrameSet_frameBorder_displayName=フレームボーダー
#@EN@ Flag indicating whether frames should have borders or not
FrameSet_frameBorder_shortDescription=フレームにボーダーを付けるかどうかを示すフラグ
#@EN@ border
FrameSet_border_displayName=ボーダー
#@EN@ The width, in pixels, of the space around frames
FrameSet_border_shortDescription=フレームの周りの余白の幅 (ピクセル単位)
#@EN@ Rendered Flag
FrameSet_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
FrameSet_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Frame Spacing
FrameSet_frameSpacing_displayName=フレームスペース
#@EN@ The width, in pixels, of the space around frames
FrameSet_frameSpacing_shortDescription=フレームの周りの余白の幅 (ピクセル単位)
#@EN@ Component Identifier
FrameSet_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
FrameSet_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Wizard
Wizard_displayName=ウィザード
#@EN@ Wizard
Wizard_shortDescription=ウィザード
#@EN@ isPopup
Wizard_isPopup_displayName=ポップアップ
#@EN@ The wizard is being targeted to a popup window.  Default is true
Wizard_isPopup_shortDescription=ウィザードはポップアップウィンドウになります。デフォルトは True です。
#@EN@ Cancel Script
Wizard_onCancel_displayName=取消しボタンスクリプト
#@EN@ Scripting code executed when the Cancel button is clicked. 
Wizard_onCancel_shortDescription=「取消し」ボタンがクリックされたときに実行するスクリプトコード。 
#@EN@ Wizard Title
Wizard_title_displayName=ウィザードタイトル
#@EN@ The text to be displayed as the title for the wizard.  The title is displayed in the top line, and extends the full width of  the wizard window.  @see #getTitle() 
Wizard_title_shortDescription=ウィザードのタイトルとして表示するテキスト。タイトルは、ウィザードウィンドウの最上行に、幅いっぱいに表示されます。@see #getTitle() 
#@EN@ Wizard Steps
Wizard_steps_displayName=ウィザードステップ
#@EN@ Use the steps attribute to specify the wizard steps programmatically,  instead of using the webuijsf:wizardStep tags in the JSP.  The steps attribute must be specified as an ArrayList or   List of WizardStep, WizardBranch,  WizardBranchSteps, or WizardSubstepBranch  components. 
Wizard_steps_shortDescription=steps 属性を使用して、JSP で webuijsf:wizardStep タグを使用する代わりにプログラム的にウィザードのステップを指定できます。steps 属性は、WizardStep、WizardBranch、WizardBranchSteps、WizardSubstepBranch コンポーネントの ArrayList または List として指定する必要があります。 
#@EN@ Finish Script
Wizard_onFinish_displayName=完了ボタンスクリプト
#@EN@ Scripting code executed when the Finish button is clicked. 
Wizard_onFinish_shortDescription=「完了」ボタンがクリックされたときに実行するスクリプトコード。 
#@EN@ Next Script
Wizard_onNext_displayName=次へボタンスクリプト
#@EN@ Scripting code executed when the Next button is clicked. 
Wizard_onNext_shortDescription=「次へ」ボタンがクリックされたときに実行するスクリプトコード。 
#@EN@ Step Link Script
Wizard_onStepLink_displayName=ステップリンクスクリプト
#@EN@ Scripting code executed when a Step link is clicked. 
Wizard_onStepLink_shortDescription=ステップリンクがクリックされたときに実行するスクリプトコード。 
#@EN@ onPopupDismiss
Wizard_onPopupDismiss_displayName=ポップアップの終了
#@EN@ Scripting code that is invoked when the wizard popup is dismissed
Wizard_onPopupDismiss_shortDescription=ウィザードのポップアップが終了するときに呼び出されるスクリプトコード
#@EN@ Rendered Flag
Wizard_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Wizard_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Component Identifier
Wizard_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
Wizard_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Close Script
Wizard_onClose_displayName=閉じるボタンスクリプト
#@EN@ Scripting code executed when the Close button is clicked. 
Wizard_onClose_shortDescription=「閉じる」ボタンがクリックされたときに実行するスクリプトコード。 
#@EN@ Help Tab Script
Wizard_onHelpTab_displayName=ヘルプタブスクリプト
#@EN@ Scripting code executed when the Help tab is clicked. 
Wizard_onHelpTab_shortDescription=「ヘルプ」タブがクリックされたときに実行するスクリプトコード。 
#@EN@ CSS Style Class(es)
Wizard_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element  when this component is rendered. 
Wizard_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Wizard Event Listener
Wizard_eventListener_displayName=ウィザードイベントリスナー
#@EN@ The eventListener attribute is used to specify an object to   handle an event that is triggered when a user activates a   component in the wizard.  The eventListener attribute value must be a JavaServer Faces EL  expression that resolves to an instance of   com.sun.webui.jsf.event.WizardEventListener.      The return value of the wizard component's call to the event listener's    handleEvent() method controls the processing of the current step    that is being performed, and determines whether the next step or a    previous step, etc
Wizard_eventListener_shortDescription=eventListener 属性を使用して、ユーザーがステップ内でコンポーネントをアクティブにしたときに発生するイベントを処理するオブジェクトを指定できます。この属性の値は、com.sun.webui.jsf.event.WizardEventListener のインスタンスを解釈処理する JavaServer Faces の EL 式である必要があります。イベントリスナーの handleEvent() に対するウィザードコンポーネントの呼び出しの戻り値によって、現在実行されているステップが制御され、次のステップに進むか、前のステップに戻るかどうかなどが決定されます。
#@EN@ Steps Tab Script
Wizard_onStepsTab_displayName=ステップタブスクリプト
#@EN@ Scripting code executed when the Steps tab is clicked. 
Wizard_onStepsTab_shortDescription=「ステップ」タブがクリックされたときに実行するスクリプトコード。 
#@EN@ Visible
Wizard_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
Wizard_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ CSS Style(s)
Wizard_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this  component is rendered. 
Wizard_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Wizard Model
Wizard_model_displayName=ウィザードモデル
#@EN@ The model property is a value binding that  resolves to an instance of WizardModel
Wizard_model_shortDescription=model プロパティーは、WizardModel のインスタンスを決定する値バインドです
#@EN@ Previous Script
Wizard_onPrevious_displayName=戻るボタンスクリプト
#@EN@ Scripting code executed when the Previous button is clicked. 
Wizard_onPrevious_shortDescription=「戻る」ボタンがクリックされたときに実行するスクリプトコード。 
#@EN@ Add Remove List
AddRemove_displayName=追加・削除リスト
#@EN@ The AddRemove component is used to construct a list of selected items.    Use the AddRemove component when the web application user makes selections   from a list and they need to see the currently selected items displayed  together, and/or they need to reorder the selected items.   
AddRemove_shortDescription=AddRemove コンポーネントを使用して、選択されている項目のリスト作成できます。このコンポーネントは、Web アプリケーションユーザーがリストから選択を行い、現在選択されている項目をまとめて表示するか、選択されている項目の順序を変更する必要があるか、またはその両方の必要がある場合に使用します。   
#@EN@ Mouse Down Script
AddRemove_onMouseDown_displayName=マウスダウンスクリプト
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
AddRemove_onMouseDown_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを押したときに実行するスクリプトコード。 
#@EN@ Value
AddRemove_value_displayName=値
#@EN@ The current value of this component
AddRemove_value_shortDescription=このコンポーネントの現在の値
#@EN@ Double Click Script
AddRemove_onDblClick_displayName=ダブルクリックスクリプト
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
AddRemove_onDblClick_shortDescription=このコンポーネント上でマウスがダブルクリックされたときに実行するスクリプトコード。 
#@EN@ Key Press Script
AddRemove_onKeyPress_displayName=キー押下スクリプト
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
AddRemove_onKeyPress_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押して放したときに実行するスクリプトコード。 
#@EN@ Text Selected Script
AddRemove_onSelect_displayName=テキスト選択スクリプト
#@EN@ Scripting code executed when some text in this  component value is selected. 
AddRemove_onSelect_shortDescription=このコンポーネント値のテキストが選択されたときに実行するスクリプトコード。 
#@EN@ Available Items label
AddRemove_availableItemsLabel_displayName=使用可能な項目ラベル
#@EN@ The label for the list of available items. 
AddRemove_availableItemsLabel_shortDescription=使用可能な項目リストのラベル。 
#@EN@ Focus Script
AddRemove_onFocus_displayName=フォーカススクリプト
#@EN@ Scripting code executed when this component  receives focus
AddRemove_onFocus_shortDescription=このコンポーネントがフォーカスを得たときに実行するスクリプトコード
#@EN@ Selected Items label
AddRemove_selectedItemsLabel_displayName=選択項目ラベル
#@EN@ The label for the list of selected items. 
AddRemove_selectedItemsLabel_shortDescription=選択されている項目リストのラベル。 
#@EN@ Mouse Out Script
AddRemove_onMouseOut_displayName=マウスアウトスクリプト
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
AddRemove_onMouseOut_shortDescription=このコンポーネントの外にマウスカーソルが移動したときに実行するスクリプトコード。 
#@EN@ Sorted
AddRemove_sorted_displayName=ソート
#@EN@ If sorted is set to true, the items on the available list are shown in  alphabetical order
AddRemove_sorted_shortDescription=sorted 属性が True の場合、使用可能なリストの項目はアルファベット順に表示されます
#@EN@ Separators
AddRemove_separators_displayName=セパレータ
#@EN@ Flag indicating that items corresponding to   com.sun.webui.jsf.model.Option that are defined   inside a com.sun.webui.jsf.model.OptionGroup should be  surrounded by separators inside the list
AddRemove_separators_shortDescription=リスト中の com.sun.webui.jsf.model.OptionGroup 内に定義されている com.sun.webui.jsf.model.Option に対応する項目をセパレータで囲むことを示すフラグ
#@EN@ Allow Duplicate Selections
AddRemove_duplicateSelections_displayName=重複選択を許可
#@EN@ If duplicateSelections is set to true, items in the available  list are not removed when they are added to the selected list.  The user is permitted to add an available item more than once   to the list of selected items
AddRemove_duplicateSelections_shortDescription=duplicateSelections 属性が True の場合、使用可能なリストの項目は、選択リストに追加されても削除されません。ユーザーは、選択されている項目のリストに使用可能な項目を複数回追加できます
#@EN@ Select All Buttons
AddRemove_selectAll_displayName=すべてを選択ボタン
#@EN@ Show the Add All and Remove All buttons. 
AddRemove_selectAll_shortDescription=「すべてを追加」と「すべてを削除」ボタンを表示します。 
#@EN@ Vertical layout
AddRemove_vertical_displayName=垂直レイアウト
#@EN@ Use the vertical layout instead of the default horizontal layout
AddRemove_vertical_shortDescription=デフォルトの水平レイアウトではなく、垂直レイアウトを使用します
#@EN@ Mouse In Script
AddRemove_onMouseOver_displayName=マウスインスクリプト
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
AddRemove_onMouseOver_shortDescription=このコンポーネント内に、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ Mouse Move Script
AddRemove_onMouseMove_displayName=マウス移動スクリプト
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
AddRemove_onMouseMove_shortDescription=コンポーネント内で、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ Key Up Script
AddRemove_onKeyUp_displayName=キーアップスクリプト
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
AddRemove_onKeyUp_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを放したときに実行するスクリプトコード。 
#@EN@ Mouse Up Script
AddRemove_onMouseUp_displayName=マウスアップスクリプト
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
AddRemove_onMouseUp_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを放したときに実行するスクリプトコード。 
#@EN@ Move Buttons
AddRemove_moveButtons_displayName=移動ボタン
#@EN@ Show the Move Up and Move Down buttons. 
AddRemove_moveButtons_shortDescription=「上へ」および「下へ」ボタンを表示します。 
#@EN@ Value Change Script
AddRemove_onChange_displayName=値変更スクリプト
#@EN@ Scripting code executed when the element  value of this component is changed. 
AddRemove_onChange_shortDescription=このコンポーネントの値が変更されたときに実行するスクリプトコード。 
#@EN@ Key Down Script
AddRemove_onKeyDown_displayName=キーダウンスクリプト
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
AddRemove_onKeyDown_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押したときに実行するスクリプトコード。 
#@EN@ Label Level
AddRemove_labelLevel_displayName=ラベルレベル
#@EN@ Sets the style level for the generated label, provided the  label attribute has been set
AddRemove_labelLevel_shortDescription=label 属性が設定されている場合に、生成されるラベルに対するスタイルレベルを設定します
#@EN@ Click Script
AddRemove_onClick_displayName=クリックスクリプト
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
AddRemove_onClick_shortDescription=このコンポーネント上でマウスがクリックされたときに実行するスクリプトコード。 
#@EN@ Blur Script
AddRemove_onBlur_displayName=フォーカスオフスクリプト
#@EN@ Scripting code executed when this element loses focus. 
AddRemove_onBlur_shortDescription=このコンポーネントがフォーカスを失ったときに実行するスクリプトコード。 
#@EN@ localValue
UIInput_localValue_displayName=ローカル値
#@EN@ localValue
UIInput_localValue_shortDescription=ローカル値
#@EN@ Number of Items to Display
ListSelector_rows_displayName=表示項目数
#@EN@ The number of items to display
ListSelector_rows_shortDescription=表示する項目の数
#@EN@ Converter
WebuiInput_converter_displayName=コンバータ
#@EN@ The converter attribute is used to specify a method to translate native  property values to String and back for this component
WebuiInput_converter_shortDescription=converter 属性を使用して、このコンポーネントの native プロパティー値を文字列に変換し、元に戻すメソッドを指定できます
#@EN@ Required
WebuiInput_required_displayName=必須
#@EN@ Flag indicating that an input value for this field is mandatory, and   failure to provide one will trigger a validation error. 
WebuiInput_required_shortDescription=このフィールドへの値の入力を必須にすることを示すフラグで、入力が失敗すると妥当性検査エラーを発生させます。 
#@EN@ Label on Top
ListSelector_labelOnTop_displayName=ラベルを上に
#@EN@ If this attribute is true, the label is rendered above the  component
ListSelector_labelOnTop_shortDescription=この属性が True の場合、ラベルはコンポーネントの上に描画されます
#@EN@ Validator Expression
WebuiInput_validatorExpression_displayName=バリデータ式
#@EN@ The validator attribute is used to specify a method in a backing bean to  validate input to the component
WebuiInput_validatorExpression_shortDescription=validator 属性を使用して、コンポーネントへの入力を検査するバッキング Bean 内のメソッドを指定できます
#@EN@ Rendered Flag
WebuiInput_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
WebuiInput_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ valueChangeListener
WebuiInput_valueChangeListener_displayName=値変更リスナー
#@EN@ {@inheritDoc} 
WebuiInput_valueChangeListener_shortDescription={@inheritDoc} 
#@EN@ Component Identifier
WebuiInput_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
WebuiInput_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Validator
WebuiInput_validator_displayName=バリデータ
#@EN@ {@inheritDoc} 
WebuiInput_validator_shortDescription={@inheritDoc} 
#@EN@ Immediate
WebuiInput_immediate_displayName=即時
#@EN@ Flag indicating that event handling for this component should be handled  immediately (in Apply Request Values phase) rather than waiting until   Invoke Application phase. 
WebuiInput_immediate_shortDescription=このコンポーネントのイベント処理が、「アプリケーションの起動」の段階まで待たずに、すぐに (「要求値の適用」段階で) 処理されることを示すフラグ。 
#@EN@ Visible
ListSelector_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
ListSelector_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ Value Change Listener Expression
WebuiInput_valueChangeListenerExpression_displayName=値変更リスナー式
#@EN@ The valueChangeListener attribute is used to specify a  method to handle an value-change event that is triggered when the  user enters data in the input component
WebuiInput_valueChangeListenerExpression_shortDescription=valueChangeListener 属性を使用して、入力コンポーネントでデータが入力されたときに発生させる値変更イベントを処理するメソッドを指定できます
#@EN@ submittedValue
UIInput_submittedValue_displayName=送信された値
#@EN@ submittedValue
UIInput_submittedValue_shortDescription=送信された値
#@EN@ Footer
TableFooter_displayName=フッター
#@EN@ Component that represents a table footer.    Note: Column headers and footers are rendered by TableRowGroupRenderer
TableFooter_shortDescription=表フッターを表すコンポーネント。注: 列ヘッダーおよびフッターは TableRowGroupRenderer によって描画されます
#@EN@ Width
TableFooter_width_displayName=幅
#@EN@ Use the width attribute to specify the width of the cells of the   column
TableFooter_width_shortDescription=width 属性を使用して、列のセル幅を指定できます
#@EN@ Double Click Script
TableFooter_onDblClick_displayName=ダブルクリックスクリプト
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
TableFooter_onDblClick_shortDescription=このコンポーネント上でマウスがダブルクリックされたときに実行するスクリプトコード。 
#@EN@ Key Press Script
TableFooter_onKeyPress_displayName=キー押下スクリプト
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
TableFooter_onKeyPress_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押して放したときに実行するスクリプトコード。 
#@EN@ Columns Spanned By the Cell
TableFooter_colSpan_displayName=セルがまたがる列数
#@EN@ The COLSPAN attribute of TD specifies the number of columns that are  spanned by the cell
TableFooter_colSpan_shortDescription=TD の COLSPAN 属性は、セルがまたがる列数を指定します
#@EN@ Cell Background Color
TableFooter_bgColor_displayName=セルの背景色
#@EN@ The BGCOLOR attribute suggests a background color for the cell
TableFooter_bgColor_shortDescription=BGCOLOR 属性はセルの背景色を示します
#@EN@ Is Table Footer
TableFooter_tableFooter_displayName=表フッター
#@EN@ Flag indicating this component should render a table footer
TableFooter_tableFooter_shortDescription=このコンポーネントが表フッターを描画することを示すフラグ
#@EN@ Key Up Script
TableFooter_onKeyUp_displayName=キーアップスクリプト
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
TableFooter_onKeyUp_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを放したときに実行するスクリプトコード。 
#@EN@ Mouse Up Script
TableFooter_onMouseUp_displayName=マウスアップスクリプト
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
TableFooter_onMouseUp_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを放したときに実行するスクリプトコード。 
#@EN@ CSS Style Class(es)
TableFooter_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
TableFooter_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Alignment Character
TableFooter_char_displayName=位置揃え文字
#@EN@ Use the char attribute to specify a character to use for   horizontal alignment in each cell in the row
TableFooter_char_shortDescription=char 属性を使用して、行の各セルの水平位置揃えに使用する文字を指定できます
#@EN@ Is Table Column Footer
TableFooter_tableColumnFooter_displayName=表の列フッター
#@EN@ Flag indicating this component should render a table column footer
TableFooter_tableColumnFooter_shortDescription=このコンポーネントが表の列フッターを描画することを示すフラグ
#@EN@ Height
TableFooter_height_displayName=高さ
#@EN@ The number of pixels for the cell's height
TableFooter_height_shortDescription=セルの高さ (ピクセル単位)
#@EN@ Horizontal Alignment
TableFooter_align_displayName=水平位置揃え
#@EN@ Use the align attribute to specify the horizontal alignment for   the content of each cell in the column
TableFooter_align_shortDescription=align 属性を使用して、列の各セルの内容の水平位置揃えを指定できます
#@EN@ Cells Covered By Header Cell
TableFooter_scope_displayName=ヘッダーセルがカバーするセル
#@EN@ Use the scope attribute to specify that the data cells of the   column are also acting as headers for rows or other columns of the table
TableFooter_scope_shortDescription=scope 属性を使用して、列のデータセルがその表の行または他の列のヘッダーとしての役割も持っていることを指定できます
#@EN@ Abbreviation for Header Cell
TableFooter_abbr_displayName=ヘッダーセルの省略名
#@EN@ ABBR gives an abbreviated version of the cell's content
TableFooter_abbr_shortDescription=ABBR 属性はセルの内容の省略名を表します
#@EN@ CSS Style(s)
TableFooter_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
TableFooter_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Click Script
TableFooter_onClick_displayName=クリックスクリプト
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
TableFooter_onClick_shortDescription=このコンポーネント上でマウスがクリックされたときに実行するスクリプトコード。 
#@EN@ Alignment Character Offset
TableFooter_charOff_displayName=位置揃え文字オフセット
#@EN@ Use the charOff attribute to specify the offset of the first   occurrence of the alignment character that is specified with the   char attribute
TableFooter_charOff_shortDescription=charOff 属性を使用して、char 属性で指定された位置揃え文字の最初の出現へのオフセットを指定できます
#@EN@ Tool Tip
TableFooter_toolTip_displayName=ツールチップ
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
TableFooter_toolTip_shortDescription=HTML 要素の title 属性の値を設定します。指定したテキストは、マウスカーソルがこの HTML 要素上に置かれたときにツールチップとして表示されます。 
#@EN@ Mouse Down Script
TableFooter_onMouseDown_displayName=マウスダウンスクリプト
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
TableFooter_onMouseDown_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを押したときに実行するスクリプトコード。 
#@EN@ List of Header Cells for Current Cell
TableFooter_headers_displayName=現在のセルのヘッダーセルリスト
#@EN@ The HEADERS attribute specifies the header cells that apply to the  TD
TableFooter_headers_shortDescription=HEADERS 属性は TD に適用されるヘッダーセルを指定します
#@EN@ Category of Header Cell
TableFooter_axis_displayName=ヘッダーセルのカテゴリ
#@EN@ The AXIS attribute provides a method of categorizing cells
TableFooter_axis_shortDescription=AXIS 属性は、セルを分類する方法を提供します
#@EN@ Extra HTML
TableFooter_extraHtml_displayName=追加 HTML
#@EN@ Extra HTML to be appended to the tag output by this renderer. 
TableFooter_extraHtml_shortDescription=このレンダリングによってタグ出力に追加される HTML。 
#@EN@ Vertical Position
TableFooter_valign_displayName=垂直位置揃え
#@EN@ Use the valign attribute to specify the vertical alignment for the   content of each cell in the column
TableFooter_valign_shortDescription=valign 属性を使用して、列の各セルの内容の垂直位置揃えを指定できます
#@EN@ Suppress Word Wrap
TableFooter_noWrap_displayName=折り返しを抑止
#@EN@ Use the noWrap attribute to disable word wrapping of this column's   cells in visual browsers
TableFooter_noWrap_shortDescription=noWrap 属性を使用して、ビジュアルブラウザでのこの列のセルの折り返しを無効にできます
#@EN@ Rows Spanned By the Cell
TableFooter_rowSpan_displayName=セルがまたがる行数
#@EN@ The ROWSPAN attribute of TD specifies the number of rows that are  spanned by the cell
TableFooter_rowSpan_shortDescription=TD の ROWSPAN 属性は、セルがまたがる行数を指定します
#@EN@ Mouse Out Script
TableFooter_onMouseOut_displayName=マウスアウトスクリプト
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
TableFooter_onMouseOut_shortDescription=このコンポーネントの外にマウスカーソルが移動したときに実行するスクリプトコード。 
#@EN@ Is Group Footer
TableFooter_groupFooter_displayName=グループフッター
#@EN@ Flag indicating this component should render a group footer
TableFooter_groupFooter_shortDescription=このコンポーネントがグループフッターを描画することを示すフラグ
#@EN@ Mouse In Script
TableFooter_onMouseOver_displayName=マウスインスクリプト
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
TableFooter_onMouseOver_shortDescription=このコンポーネント内に、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ Mouse Move Script
TableFooter_onMouseMove_displayName=マウス移動スクリプト
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
TableFooter_onMouseMove_shortDescription=コンポーネント内で、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ Visible
TableFooter_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
TableFooter_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ Key Down Script
TableFooter_onKeyDown_displayName=キーダウンスクリプト
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
TableFooter_onKeyDown_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押したときに実行するスクリプトコード。 
#@EN@ Selector
Selector_displayName=セレクタ
#@EN@ Base component for UI components that allow the user to make a selection from  a set of options
Selector_shortDescription=オプションのセットからの選択をユーザーに許可する UI コンポーネントの基本コンポーネント
#@EN@ Double Click Script
Selector_onDblClick_displayName=ダブルクリックスクリプト
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
Selector_onDblClick_shortDescription=このコンポーネント上でマウスがダブルクリックされたときに実行するスクリプトコード。 
#@EN@ Key Press Script
Selector_onKeyPress_displayName=キー押下スクリプト
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
Selector_onKeyPress_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押して放したときに実行するスクリプトコード。 
#@EN@ Text Selected Script
Selector_onSelect_displayName=テキスト選択スクリプト
#@EN@ Scripting code executed when some text in this  component value is selected. 
Selector_onSelect_shortDescription=このコンポーネント値のテキストが選択されたときに実行するスクリプトコード。 
#@EN@ Focus Script
Selector_onFocus_displayName=フォーカススクリプト
#@EN@ Scripting code executed when this component  receives focus
Selector_onFocus_shortDescription=このコンポーネントがフォーカスを得たときに実行するスクリプトコード
#@EN@ Key Up Script
Selector_onKeyUp_displayName=キーアップスクリプト
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
Selector_onKeyUp_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを放したときに実行するスクリプトコード。 
#@EN@ Mouse Up Script
Selector_onMouseUp_displayName=マウスアップスクリプト
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
Selector_onMouseUp_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを放したときに実行するスクリプトコード。 
#@EN@ CSS Style Class(es)
Selector_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Selector_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Items
Selector_items_displayName=項目
#@EN@ Specifies the options that the web application user can choose  from
Selector_items_shortDescription=Web アプリケーションユーザーが選択可能なオプションを指定します
#@EN@ CSS Style(s)
Selector_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Selector_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Click Script
Selector_onClick_displayName=クリックスクリプト
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
Selector_onClick_shortDescription=このコンポーネント上でマウスがクリックされたときに実行するスクリプトコード。 
#@EN@ Blur Script
Selector_onBlur_displayName=フォーカスオフスクリプト
#@EN@ Scripting code executed when this element loses focus. 
Selector_onBlur_shortDescription=このコンポーネントがフォーカスを失ったときに実行するスクリプトコード。 
#@EN@ Mouse Down Script
Selector_onMouseDown_displayName=マウスダウンスクリプト
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
Selector_onMouseDown_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを押したときに実行するスクリプトコード。 
#@EN@ Tool Tip
Selector_toolTip_displayName=ツールチップ
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
Selector_toolTip_shortDescription=HTML 要素の title 属性の値を設定します。指定したテキストは、マウスカーソルがこの HTML 要素上に置かれたときにツールチップとして表示されます。 
#@EN@ Disabled
Selector_disabled_displayName=使用不可
#@EN@ Flag indicating that the user is not permitted to activate this  component, and that the component's value will not be submitted with the  form. 
Selector_disabled_shortDescription=ユーザーがこのコンポーネントをアクティブにすることを禁止し、コンポーネントの値がフォームで送信されないことを示すフラグ 
#@EN@ Mouse Out Script
Selector_onMouseOut_displayName=マウスアウトスクリプト
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
Selector_onMouseOut_shortDescription=このコンポーネントの外にマウスカーソルが移動したときに実行するスクリプトコード。 
#@EN@ Mouse In Script
Selector_onMouseOver_displayName=マウスインスクリプト
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
Selector_onMouseOver_shortDescription=このコンポーネント内に、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ Mouse Move Script
Selector_onMouseMove_displayName=マウス移動スクリプト
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
Selector_onMouseMove_shortDescription=コンポーネント内で、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ Selected
Selector_selected_displayName=選択
#@EN@ The object that represents the selections made from the  available options
Selector_selected_shortDescription=使用可能なオプションから作られる選択肢を表すオブジェクト。
#@EN@ Label
Selector_label_displayName=ラベル
#@EN@ If set, a label is rendered adjacent to the component with the  value of this attribute as the label text. 
Selector_label_shortDescription=設定すると、この属性の値をラベルテキストに持つラベルがコンポーネントの近くに描画されます。 
#@EN@ Value Change Script
Selector_onChange_displayName=値変更スクリプト
#@EN@ Scripting code executed when the element  value of this component is changed. 
Selector_onChange_shortDescription=このコンポーネントの値が変更されたときに実行するスクリプトコード。 
#@EN@ Visible
Selector_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
Selector_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ Key Down Script
Selector_onKeyDown_displayName=キーダウンスクリプト
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
Selector_onKeyDown_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押したときに実行するスクリプトコード。 
#@EN@ Label Level
Selector_labelLevel_displayName=ラベルレベル
#@EN@ Sets the style level for the generated label, provided the  label attribute has been set
Selector_labelLevel_shortDescription=label 属性が設定されている場合に、生成されるラベルに対するスタイルレベルを設定します
#@EN@ Read-only
Selector_readOnly_displayName=読み取り専用
#@EN@ If this attribute is set to true, the value of the component is  rendered as text, preceded by the label if one was defined.   @deprecated The attribute is deprected starting from version 4.1 
Selector_readOnly_shortDescription=この属性が True の場合、コンポーネントの値はテキストとして描画され、ラベルが定義されている場合はラベルが前に付きます。@deprecated この属性は、version 4.1 以降は非推奨となっています。 
#@EN@ Tab Index
Selector_tabIndex_displayName=タブ索引
#@EN@ Position of this element in the tabbing order of the current document
Selector_tabIndex_shortDescription=現在のドキュメントのタブ順でのこの要素の位置
#@EN@ Value
UIInput_value_displayName=値
#@EN@ The current value of this component
UIInput_value_shortDescription=このコンポーネントの現在の値
#@EN@ Frame
Frame_displayName=フレーム
#@EN@ The Frame component is used inside a FrameSet component to denote a frame. 
Frame_shortDescription=Frame コンポーネントは FrameSet コンポーネント内で使用され、1 つのフレームを表します。 
#@EN@ Tool Tip
Frame_toolTip_displayName=ツールチップ
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
Frame_toolTip_shortDescription=HTML 要素の title 属性の値を設定します。指定したテキストは、マウスカーソルがこの HTML 要素上に置かれたときにツールチップとして表示されます。 
#@EN@ Rendered Flag
Frame_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Frame_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Component Identifier
Frame_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
Frame_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ CSS Style Class(es)
Frame_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Frame_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Long Description
Frame_longDesc_displayName=詳細な説明
#@EN@ A URL to a long description of the frame contents
Frame_longDesc_shortDescription=フレーム内容の詳細な説明への URL
#@EN@ Margin Height
Frame_marginHeight_displayName=マージン高さ
#@EN@ Defines the top and bottom margins in the frame 
Frame_marginHeight_shortDescription=フレームの上下のマージンを定義します 
#@EN@ No Resize
Frame_noResize_displayName=サイズ変更なし
#@EN@ Set the value of the noResize attribute to &quot;true&quot; when  user   is not allowed to resize the frame. 
Frame_noResize_shortDescription=ユーザーにフレームのサイズ変更を許可しない場合は、noResize 属性を &quot;True&quot; に設定します。 
#@EN@ CSS Style(s)
Frame_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Frame_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Frame Border
Frame_frameBorder_displayName=フレームボーダー
#@EN@ Set the value of the frameBorder attribute to &quot;true&quot; when a border is   needed around the frame. 
Frame_frameBorder_shortDescription=フレームの周囲にボーダーが必要な場合は frameBorder 属性を True に設定します。
#@EN@ Scrolling
Frame_scrolling_displayName=スクロール
#@EN@ Determines scrollbar action (valid values are: yes, no, auto) 
Frame_scrolling_shortDescription=スクロールバーの動作を指定します (有効な値: yes、no、auto)  
#@EN@ URL
Frame_url_displayName=URL
#@EN@ Defines the URL of the file to show in the frame. 
Frame_url_shortDescription=フレームに表示するファイルの URL を定義します。 
#@EN@ Margin Width
Frame_marginWidth_displayName=マージン幅
#@EN@ Defines the left and right margins in the frame 
Frame_marginWidth_shortDescription=フレームの左右のマージンを定義します 
#@EN@ Name
Frame_name_displayName=名前
#@EN@ Defines a unique name for the frame (to use in scripts) 
Frame_name_shortDescription=フレームの一意の名前を定義します (スクリプトで使用) 
#@EN@ Property
Property_displayName=プロパティー
#@EN@ The Property component was  written to be used within thePropertySheetSection component,  which is in turn used within the context of a PropertySheet  component
Property_shortDescription=Property コンポーネントは PropertySheetSection コンポーネント内で使用するために作成され、PropertySheetSection コンポーネントは、PropertySheet コンポーネントのコンテキスト内で使用します
#@EN@ CSS Style Class(es)
Property_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Property_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Label
Property_label_displayName=ラベル
#@EN@ Use this attribute to specify the text of the label of this  property
Property_label_shortDescription=この属性を使用して、このプロパティーのラベルテキストを指定できます
#@EN@ Disabled
Property_disabled_displayName=使用不可
#@EN@ Flag indicating that the user is not permitted to activate this  component, and that the component's value will not be submitted with the  form. 
Property_disabled_shortDescription=ユーザーがこのコンポーネントをアクティブにすることを禁止し、コンポーネントの値がフォームで送信されないことを示すフラグ 
#@EN@ Label Alignment
Property_labelAlign_displayName=ラベル位置揃え
#@EN@ Specifies the alignment for the property label
Property_labelAlign_shortDescription=プロパティーラベルの位置揃えを指定します
#@EN@ Visible
Property_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
Property_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ CSS Style(s)
Property_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Property_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Label No-Wrap
Property_noWrap_displayName=ラベル折返しなし
#@EN@ Specifies that the label should not wrap around to another line, if set to  true
Property_noWrap_shortDescription=True の場合、ラベルは別の行に折り返されません
#@EN@ Rendered Flag
Property_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Property_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Overlap Label
Property_overlapLabel_displayName=ラベルをオーバーラップ
#@EN@ Specifies that the content of the property should occupy the label   area as well as the content area, if set to true
Property_overlapLabel_shortDescription=True の場合、プロパティーの内容は内容領域とラベル領域にも表示されます
#@EN@ Component Identifier
Property_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
Property_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Help Text
Property_helpText_displayName=ヘルプテキスト
#@EN@ The text specified with this attribue is displayed below the content   of the property in a small font
Property_helpText_shortDescription=この属性で指定されたテキストは、プロパティーの内容の下に小さなフォントで表示されます
#@EN@ Content Area
ContentPageTitle_displayName=コンテンツエリア
#@EN@ The ContentPageTitle component is used to display a page title. 
ContentPageTitle_shortDescription=ContentPageTitle コンポーネントを使用して、ページタイトルを表示できます。 
#@EN@ CSS Style Class(es)
ContentPageTitle_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
ContentPageTitle_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Title
ContentPageTitle_title_displayName=タイトル
#@EN@ The text to display as the page title. 
ContentPageTitle_title_shortDescription=ページタイトルとして表示するテキスト。 
#@EN@ Separator
ContentPageTitle_separator_displayName=セパレータ
#@EN@ Indicates that the page title separator should be displayed, when set   to true
ContentPageTitle_separator_shortDescription=True に設定すると、ページタイトルのセパレータが表示されることを示します
#@EN@ Visible
ContentPageTitle_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
ContentPageTitle_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ CSS Style(s)
ContentPageTitle_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
ContentPageTitle_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Rendered Flag
ContentPageTitle_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
ContentPageTitle_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Component Identifier
ContentPageTitle_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
ContentPageTitle_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Help Text
ContentPageTitle_helpText_displayName=ヘルプテキスト
#@EN@ The help text to display just below the page title. 
ContentPageTitle_helpText_shortDescription=ページタイトルのすぐ下に表示するヘルプテキスト。 
#@EN@ Calendar Month
CalendarMonth_displayName=カレンダ月
#@EN@ NOT FOR DEVELOPER USE - base renderer class for ui:calendar and ui:scheduler  Do not release as API. 
CalendarMonth_shortDescription=開発者向けではありません - ui:calendar および ui:scheduler 用の基本レンダリングクラス。API として公開しないでください。 
#@EN@ dateFormatPattern
CalendarMonth_dateFormatPattern_displayName=日付の書式パターン
#@EN@ Return the locale dependent date format pattern.  If the parent DateManager has a non null dateFormatPattern  attribute, return that value.  If not, derive the date format pattern from a SimpleDateFormat  instance using the &quot;SHORT&quot; pattern
CalendarMonth_dateFormatPattern_shortDescription=ロケールに依存した日付の書式パターンを返します。親の DateManager の dateFormatPattern 属性が null 以外の場合は、その値を返します。null の場合は、&quot;SHORT&quot; パターンを使用して SimpleDateFormat インスタンスから日付の書式パターンを取得します
#@EN@ HTML Template
CalendarMonth_htmlTemplate_displayName=HTML テンプレート
#@EN@ Alternative HTML template to be used by this component. 
CalendarMonth_htmlTemplate_shortDescription=このコンポーネントで使用される代替 HTML テンプレート。 
#@EN@ timeZone
CalendarMonth_timeZone_displayName=タイムゾーン
#@EN@ Return the TimeZone object for this CalendarMonth.  If the parent is a DateManager, return its TimeZone  property, else return the time zone from a java.util.Calendar  based on the locale. 
CalendarMonth_timeZone_shortDescription=このカレンダ月の TimeZone オブジェクトを返します。親が DateManager の場合は、その TimeZone プロパティーを返します。それ以外の場合は、ロケールに基づいて java.util.Calendar からのタイムゾーンを返します。 
#@EN@ Popup Version
CalendarMonth_popup_displayName=ポップアップで描画
#@EN@ Flag determining whether the component should be rendered in its  popup version (as used by Calendar), or in the  inline version used by Scheduler. 
CalendarMonth_popup_shortDescription=コンポーネントをポップアップで描画するか (カレンダで使用)、インラインで描画するか (スケジューラで使用) を決定するフラグ。 
#@EN@ Value
UIOutput_value_displayName=値
#@EN@ The current value of this component
UIOutput_value_shortDescription=このコンポーネントの現在の値
#@EN@ Converter
UIOutput_converter_displayName=コンバータ
#@EN@ Converter instance registered with this component.
UIOutput_converter_shortDescription=このコンポーネントに登録されているコンバータのインスタンス。
#@EN@ Rendered Flag
UIOutput_rendered_displayName=描画フラグ
#@EN@ Indicates whether the HTML code for the component should be included in the rendered HTML page
UIOutput_rendered_shortDescription=コンポーネントの HTML コードを HTML ページの描画対象に含めるかどうかを示します
#@EN@ Component Identifier
UIOutput_id_displayName=コンポーネント識別子
#@EN@ This component's unique identifier
UIOutput_id_shortDescription=このコンポーネントの一意の識別子
#@EN@ Bubble Help
Bubble_displayName=バブルヘルプ
#@EN@ The Bubble component is used to create a popup help window. 
Bubble_shortDescription=Bubble コンポーネントを使用して、ポップアップヘルプウィンドウを作成できます。
#@EN@ HTML Template
Bubble_htmlTemplate_displayName=HTML テンプレート
#@EN@ Alternative HTML template to be used by this component. 
Bubble_htmlTemplate_shortDescription=このコンポーネントで使用される代替 HTML テンプレート。 
#@EN@ Open Delay
Bubble_openDelay_displayName=遅延表示
#@EN@ Use the openDelay attribute to put a delay in ms before opening the bubble. 
Bubble_openDelay_shortDescription=openDelay 属性を使用して、バブルヘルプを表示するまでの遅延時間をミリ秒単位で設定できます。
#@EN@ CSS Style Class(es)
Bubble_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Bubble_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Buuble Width
Bubble_width_displayName=バブルヘルプの幅
#@EN@ Number of pixels for the width of the bubble help window
Bubble_width_shortDescription=バブルヘルプウィンドウの幅 (ピクセル単位)
#@EN@ Title
Bubble_title_displayName=タイトル
#@EN@ Text for popup help title
Bubble_title_shortDescription=ポップアップヘルプのタイトルのテキスト
#@EN@ Auto Close
Bubble_autoClose_displayName=自動消去
#@EN@ Use the autoClose attribute to close the bubble help automatically  
Bubble_autoClose_shortDescription=autoClose 属性を使用して、バブルヘルプを自動的に閉じるようにできます。
#@EN@ Visible
Bubble_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
Bubble_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ CSS Style(s)
Bubble_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Bubble_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Close Button
Bubble_closeButton_displayName=閉じるボタン
#@EN@ Use the closeButton attribute to display close button for bubble
Bubble_closeButton_shortDescription=closeButton 属性を使用して、バブルヘルプを閉じるボタンを表示できます
#@EN@ Duration for AutoClose
Bubble_duration_displayName=AutoClose の時間
#@EN@ Number of milli seconds after which popup help window should close.  The default is 2000
Bubble_duration_shortDescription=ポップアップヘルプウィンドウが開いてから閉じるまでの時間 (ミリ秒)。デフォルトは 2000 です
#@EN@ Converter
WebuiOutput_converter_displayName=コンバータ
#@EN@ The converter attribute is used to specify a method to translate native  property values to String and back for this component
WebuiOutput_converter_shortDescription=converter 属性を使用して、このコンポーネントの native プロパティー値を文字列に変換し、元に戻すメソッドを指定できます
#@EN@ Rendered Flag
WebuiOutput_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
WebuiOutput_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Component Identifier
WebuiOutput_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
WebuiOutput_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Common Task
CommonTask_displayName=共通タスク
#@EN@ The CommonTask component is used to greate a single task within  a CommonTasksSection or CommonTasksGroup component. 
CommonTask_shortDescription=CommonTask コンポーネントを使用して、CommonTasksSection または CommonTasksGroup コンポーネント内にタスクを 1 つ作成できます。 
#@EN@ Double Click Script
CommonTask_onDblClick_displayName=ダブルクリックスクリプト
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
CommonTask_onDblClick_shortDescription=このコンポーネント上でマウスがダブルクリックされたときに実行するスクリプトコード。 
#@EN@ Title
CommonTask_title_displayName=タイトル
#@EN@ Title
CommonTask_title_shortDescription=タイトル
#@EN@ Key Press Script
CommonTask_onKeyPress_displayName=キー押下スクリプト
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
CommonTask_onKeyPress_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押して放したときに実行するスクリプトコード。 
#@EN@ Target
CommonTask_target_displayName=ターゲット
#@EN@ The resource at the specified URL is displayed in the frame that is   specified with the target attribute
CommonTask_target_shortDescription=指定された URL のリソースは、target 属性で指定されたフレーム内に表示されます。
#@EN@ Focus Script
CommonTask_onFocus_displayName=フォーカススクリプト
#@EN@ Scripting code executed when this component  receives focus
CommonTask_onFocus_shortDescription=このコンポーネントがフォーカスを得たときに実行するスクリプトコード
#@EN@ infoTitle
CommonTask_infoTitle_displayName=情報タイトル
#@EN@ Specify the title text to be displayed in the information panel for this task
CommonTask_infoTitle_shortDescription=このタスクの情報パネルに表示するタイトルテキストを指定します
#@EN@ Key Up Script
CommonTask_onKeyUp_displayName=キーアップスクリプト
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
CommonTask_onKeyUp_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを放したときに実行するスクリプトコード。 
#@EN@ Mouse Up Script
CommonTask_onMouseUp_displayName=マウスアップスクリプト
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
CommonTask_onMouseUp_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを放したときに実行するスクリプトコード。 
#@EN@ CSS Style Class(es)
CommonTask_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
CommonTask_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ icon
CommonTask_icon_displayName=アイコン
#@EN@ Specify a theme key for an image to be displayed in front of the text for  the task
CommonTask_icon_shortDescription=タスクのテキストの前に表示する画像のテーマキーを指定します
#@EN@ CSS Style(s)
CommonTask_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
CommonTask_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Click Script
CommonTask_onClick_displayName=クリックスクリプト
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
CommonTask_onClick_shortDescription=このコンポーネント上でマウスがクリックされたときに実行するスクリプトコード。 
#@EN@ infoLinkText
CommonTask_infoLinkText_displayName=情報リンクテキスト
#@EN@ Specify the text for the link that is displayed at the bottom of the task's information  panel
CommonTask_infoLinkText_shortDescription=タスクの情報パネルの最下部に表示するリンクのテキストを指定します
#@EN@ Blur Script
CommonTask_onBlur_displayName=フォーカスオフスクリプト
#@EN@ Scripting code executed when this element loses focus. 
CommonTask_onBlur_shortDescription=このコンポーネントがフォーカスを失ったときに実行するスクリプトコード。 
#@EN@ Tool Tip
CommonTask_toolTip_displayName=ツールチップ
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
CommonTask_toolTip_shortDescription=HTML 要素の title 属性の値を設定します。指定したテキストは、マウスカーソルがこの HTML 要素上に置かれたときにツールチップとして表示されます。 
#@EN@ Mouse Down Script
CommonTask_onMouseDown_displayName=マウスダウンスクリプト
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
CommonTask_onMouseDown_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを押したときに実行するスクリプトコード。 
#@EN@ Value
CommonTask_value_displayName=値
#@EN@ The current value of this component
CommonTask_value_shortDescription=このコンポーネントの現在の値
#@EN@ imageHeight
CommonTask_imageHeight_displayName=画像の高さ
#@EN@ Specify the height in pixels of the image that is specified with the imageUrl attribute   
CommonTask_imageHeight_shortDescription=imageUrl 属性で指定された画像の高さをピクセル単位で指定します   
#@EN@ imageURL
CommonTask_imageUrl_displayName=imageURL
#@EN@ The path to an image to be displayed in front of the text   for the task
CommonTask_imageUrl_shortDescription=タスクのテキストの前に表示する画像へのパス
#@EN@ Disabled
CommonTask_disabled_displayName=使用不可
#@EN@ Disabled
CommonTask_disabled_shortDescription=使用不可
#@EN@ Mouse Out Script
CommonTask_onMouseOut_displayName=マウスアウトスクリプト
#@EN@ Scripting code executed when the user moves the mouse pointer off this component. 
CommonTask_onMouseOut_shortDescription=このコンポーネントから、ユーザーがマウスカーソルを放したときに実行するスクリプトコード。 
#@EN@ Mouse In Script
CommonTask_onMouseOver_displayName=マウスインスクリプト
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
CommonTask_onMouseOver_shortDescription=このコンポーネント内に、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ infoText
CommonTask_infoText_displayName=情報テキスト
#@EN@ Specify the text to be displayed in the information panel for this task
CommonTask_infoText_shortDescription=このタスクの情報パネルに表示するテキストを指定します
#@EN@ Mouse Move Script
CommonTask_onMouseMove_displayName=マウス移動スクリプト
#@EN@ Scripting code executed when the user moves the mouse pointer while  it is over the component. 
CommonTask_onMouseMove_shortDescription=コンポーネント内で、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード 
#@EN@ text
CommonTask_text_displayName=テキスト
#@EN@ The text to be displayed for the task. 
CommonTask_text_shortDescription=タスクに表示するテキスト。 
#@EN@ imageWidth
CommonTask_imageWidth_displayName=画像の幅
#@EN@ Specify the width in pixels of the image that is specified with the imageUrl attribute.   
CommonTask_imageWidth_shortDescription=imageUrl 属性で指定された画像の幅をピクセル単位で指定します。   
#@EN@ Immediate
CommonTask_immediate_displayName=即時
#@EN@ Flag indicating that event handling for this component should be handled  immediately (in Apply Request Values phase) rather than waiting until   Invoke Application phase. 
CommonTask_immediate_shortDescription=このコンポーネントのイベント処理が、「アプリケーションの起動」の段階まで待たずに、すぐに (「要求値の適用」段階で) 処理されることを示すフラグ。 
#@EN@ Visible
CommonTask_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
CommonTask_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ infoLinkUrl
CommonTask_infoLinkUrl_displayName=情報リンク URL
#@EN@ Specify the URL for the link that is displayed at the bottom of the task's   information panel.   
CommonTask_infoLinkUrl_shortDescription=タスクの情報パネルの最下部に表示するリンクの URL を指定します。   
#@EN@ Key Down Script
CommonTask_onKeyDown_displayName=キーダウンスクリプト
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
CommonTask_onKeyDown_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押したときに実行するスクリプトコード。 
#@EN@ Tab Index
CommonTask_tabIndex_displayName=タブ索引
#@EN@ Position of this element in the tabbing order of the current document
CommonTask_tabIndex_shortDescription=現在のドキュメントのタブ順でのこの要素の位置
#@EN@ actionListener
WebuiCommand_actionListener_displayName=アクションリスナー
#@EN@ {@inheritDoc} 
WebuiCommand_actionListener_shortDescription={@inheritDoc} 
#@EN@ action
WebuiCommand_action_displayName=アクション
#@EN@ {@inheritDoc} 
WebuiCommand_action_shortDescription={@inheritDoc} 
#@EN@ Action Expression
WebuiCommand_actionExpression_displayName=アクション式
#@EN@ MethodExpression representing the application action to invoke when this  component is activated by the user
WebuiCommand_actionExpression_shortDescription=ユーザーがこのコンポーネントがアクティブにしたときに起動するアプリケーションアクションを表すメソッド式
#@EN@ Action Listener Expression
WebuiCommand_actionListenerExpression_displayName=アクションリスナー式
#@EN@ Use the actionListenerExpression attribute to cause the component to fire  an event
WebuiCommand_actionListenerExpression_shortDescription=actionListenerExpression 属性を使用して、コンポーネントにイベントを発生させることができます
#@EN@ Rendered Flag
WebuiCommand_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
WebuiCommand_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Component Identifier
WebuiCommand_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
WebuiCommand_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Iframe
IFrame_displayName=Iframe
#@EN@ The Iframe component is used to create an inline frame. 
IFrame_shortDescription=Iframe コンポーネントを使用して、インラインフレームを作成できます。 
#@EN@ Width
IFrame_width_displayName=幅
#@EN@ Defines the width of the iframe in pixels or as a percentage of it's   container 
IFrame_width_shortDescription=インラインフレームの幅をピクセル単位、またはそのコンテナに対するパーセンテージで定義します 
#@EN@ Height
IFrame_height_displayName=高さ
#@EN@ Defines the height of the iframe in pixels or as a percentage of it's   container 
IFrame_height_shortDescription=インラインフレームの高さをピクセル単位、またはそのコンテナに対するパーセンテージで定義します 
#@EN@ Align
IFrame_align_displayName=位置揃え
#@EN@ Specifies how to align the iframe according to the surrounding text
IFrame_align_shortDescription=周囲のテキストに合わせて、インラインフレームを揃える位置を指定します
#@EN@ No Resize
IFrame_noResize_displayName=サイズ変更なし
#@EN@ Set the value of the noResize attribute to &quot;true&quot; when  user   is not allowed to resize the frame. 
IFrame_noResize_shortDescription=ユーザーにフレームのサイズ変更を許可しない場合は、noResize 属性を &quot;True&quot; に設定します。 
#@EN@ Rendered Flag
IFrame_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
IFrame_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Component Identifier
IFrame_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
IFrame_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ File Chooser
FileChooser_displayName=ファイルチューザ
#@EN@ The FileChooser component allows the user to select files and folders. 
FileChooser_shortDescription=FileChooser コンポーネントを使用すると、ユーザーがファイルおよびフォルダを選択できます。 
#@EN@ Lookin
FileChooser_lookin_displayName=検索
#@EN@ Use this attribute to specify the initial folder to display in the  Look In text field
FileChooser_lookin_shortDescription=この属性を使用して、「検索」フィールドに初期表示するフォルダを指定できます
#@EN@ Value
FileChooser_value_displayName=値
#@EN@ The current value of this component
FileChooser_value_shortDescription=このコンポーネントの現在の値
#@EN@ Rows
FileChooser_rows_displayName=行数
#@EN@ The number of items to display in the listbox
FileChooser_rows_shortDescription=リストボックスに表示する項目数
#@EN@ Required
FileChooser_required_displayName=必須
#@EN@ Flag indicating that an input value for this field is mandatory, and   failure to provide one will trigger a validation error. 
FileChooser_required_shortDescription=このフィールドへの値の入力を必須にすることを示すフラグで、入力が失敗すると妥当性検査エラーを発生させます。 
#@EN@ Multiple
FileChooser_multiple_displayName=複数
#@EN@ Set multiple to true to allow multiple files or folders  to be selected from the list
FileChooser_multiple_shortDescription=multiple を True に設定すると、複数のファイルまたはフォルダをリストから選択可能にします。
#@EN@ Disabled
FileChooser_disabled_displayName=使用不可
#@EN@ Indicates  that activation of this component by the user is not   currently permitted. 
FileChooser_disabled_shortDescription=ユーザーによるこのコンポーネントの起動が、現在許可されていないことを示します。 
#@EN@ Descending
FileChooser_descending_displayName=降順
#@EN@ Set this attribute to true to sort from the highest value to lowest value,  such as Z-A for alphabetic, or largest file to smallest for sorting  on file size
FileChooser_descending_shortDescription=この属性を True に設定すると、値を降順にソートできます (たとえば、英字であれば Z から A の順、ファイルのサイズであればサイズの大きい順)
#@EN@ CSS Style Class(es)
FileChooser_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this  component is rendered. 
FileChooser_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Selected
FileChooser_selected_displayName=選択
#@EN@ The selected file(s) or folder(s) name.
FileChooser_selected_shortDescription=選択したファイルまたはフォルダの名前。
#@EN@ Folder Chooser
FileChooser_folderChooser_displayName=フォルダチューザ
#@EN@ Use this attribute to configure the file chooser as a folder chooser.  Set the value to true for a folder chooser or false for a file  chooser
FileChooser_folderChooser_shortDescription=この属性を使用して、ファイルチューザをフォルダチューザとして構成できます。フォルダチューザの場合は True、ファイルチューザの場合は False に設定します
#@EN@ Visible
FileChooser_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
FileChooser_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ CSS Style(s)
FileChooser_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this  component is rendered. 
FileChooser_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Model
FileChooser_model_displayName=モデル
#@EN@ The model associated with the filechooser
FileChooser_model_shortDescription=ファイルチューザに関連付けるモデル
#@EN@ Read-only
FileChooser_readOnly_displayName=読み取り専用
#@EN@ If readOnly is set to true, the value of the component is  rendered as text, preceded by the label if one was defined. 
FileChooser_readOnly_shortDescription=readOnly 属性が True の場合、コンポーネントの値はテキストとして描画され、ラベルが定義されている場合はそのラベルが前に付きます。 
#@EN@ Sort Field
FileChooser_sortField_displayName=ソートフィールド
#@EN@ Field to use to sort the list of files
FileChooser_sortField_shortDescription=ファイルリストのソートに使用するフィールド
#@EN@ Tab Index
FileChooser_tabIndex_displayName=タブ索引
#@EN@ Position of this element in the tabbing order of the current document.  Tabbing order determines the sequence in which elements receive  focus when the tab key is pressed
FileChooser_tabIndex_shortDescription=現在のドキュメントのタブ順でのこの要素の位置。タブ順序によって、Tab キーが押されたときに要素がフォーカスを得る順序が決まります
#@EN@ File Upload
Upload_displayName=ファイルアップロード
#@EN@ The Upload component relies on the   {@link com.sun.webui.jsf.util.UploadFilter} and other  upload filter classes to upload the file from the client to the  server.    The file is uploaded in the request by the presence of an   HTML input element, rendered by the  UploadRenderer.      There is a problem processing errors
Upload_shortDescription=コンポーネントの「アップロード」は、{@link com.sun.webui.jsf.util.UploadFilter} およびクライアントからサーバーにファイルをアップロードするためのほかのアップロードフィルタクラスに依存します。ファイルは、HTML の入力要素の存在による要求でアップロードされ、UploadRenderer によって描画されます。エラー処理に問題があります
#@EN@ Maximum Length
Upload_maxLength_displayName=最大長
#@EN@ The maximum number of characters that can be entered for this field. 
Upload_maxLength_shortDescription=このフィールドに入力可能な最大文字数。 
#@EN@ Text
Upload_text_displayName=テキスト
#@EN@ Literal value to be rendered in this input field.  If this property is specified by a value binding  expression, the corresponding value will be updated  if validation succeeds. 
Upload_text_shortDescription=この入力フィールドに描画されるリテラル値。このプロパティーが値バインド式によって指定される場合、妥当性検査が成功すると対応する値が更新されます。 
#@EN@ Uploaded File
Upload_uploadedFile_displayName=アップロードファイル
#@EN@ The value of this attribute must be a JSF EL expression, and  it must resolve to an object of type  com.sun.webui.jsf.model.UploadedFile
Upload_uploadedFile_shortDescription=この属性の値は JSF の EL 式で、com.sun.webui.jsf.model.UploadedFile 型のオブジェクトを解釈処理する必要があります
#@EN@ Converter
Upload_converter_displayName=コンバータ
#@EN@ The converter attribute is used to specify a method to translate native  property values to String and back for this component
Upload_converter_shortDescription=converter 属性を使用して、このコンポーネントの native プロパティー値を文字列に変換し、元に戻すメソッドを指定できます
#@EN@ Trim
Upload_trim_displayName=トリム
#@EN@ Flag indicating that any leading and trailing blanks will be  trimmed prior to conversion to the destination data type.  Default value is true. 
Upload_trim_shortDescription=対象のデータタイプに変換する前に、前後の余分な空白をすべて削除することを示すフラグ。デフォルト値は True です。 
#@EN@ Required
Upload_required_displayName=必須
#@EN@ Flag indicating that an input value for this field is mandatory, and   failure to provide one will trigger a validation error. 
Upload_required_shortDescription=このフィールドへの値の入力を必須にすることを示すフラグで、入力が失敗すると妥当性検査エラーを発生させます。 
#@EN@ Columns
Upload_columns_displayName=文字数
#@EN@ Number of character character columns used to render this  field
Upload_columns_shortDescription=このフィールドの描画に使用する文字数。
#@EN@ Preserve Path
Upload_preservePath_displayName=パスを保持
#@EN@ If preservePath is true the upload   component will preserve the literal value of the file input element   as set by the user on the client.    Different browsers handle the value of an HTML input element   of type &quot;file&quot; differently
Upload_preservePath_shortDescription=preservePath が True の場合は、アップロードコンポーネントは、クライアントのユーザーによって設定されたファイル入力要素のリテラル値を保持します。ブラウザによって、タイプ &quot;file&quot; のHTML 入力要素の値の取り扱いは異なります。
#@EN@ Group Panel
PanelGroup_displayName=グループパネル
#@EN@ The PanelGroup component is used to arrange a group of components. 
PanelGroup_shortDescription=PanelGroup コンポーネントを使用して、コンポーネントのグループを配置できます。 
#@EN@ CSS Style Class(es)
PanelGroup_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
PanelGroup_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Separator
PanelGroup_separator_displayName=セパレータ
#@EN@ The string of characters or HTML element that should be inserted between each  component that is a child of this component
PanelGroup_separator_shortDescription=このコンポーネントの子である各コンポーネント間に挿入する文字列または HTML 要素
#@EN@ Visible
PanelGroup_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
PanelGroup_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ CSS Style(s)
PanelGroup_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
PanelGroup_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Rendered Flag
PanelGroup_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
PanelGroup_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Component Identifier
PanelGroup_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
PanelGroup_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Block
PanelGroup_block_displayName=ブロック
#@EN@ By default, the panelGroup component is rendered on the same  line as the component that comes before it and the component  that follows, in a flow layout
PanelGroup_block_shortDescription=デフォルトでは PanelGroup コンポーネントは、その前後にくるコンポーネントと同じ線上にフローレイアウトで描画されます
#@EN@ Image
ImageComponent_displayName=画像
#@EN@ The ImageComponent is used to display in inline graphic image
ImageComponent_shortDescription=ImageComponent コンポーネントを使用して、インラインにグラフィックス画像を表示できます
#@EN@ Double Click Script
ImageComponent_onDblClick_displayName=ダブルクリックスクリプト
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
ImageComponent_onDblClick_shortDescription=このコンポーネント上でマウスがダブルクリックされたときに実行するスクリプトコード。 
#@EN@ Width
ImageComponent_width_displayName=幅
#@EN@ Image width override
ImageComponent_width_shortDescription=画像の幅をオーバーライドします
#@EN@ Rendered Flag
ImageComponent_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
ImageComponent_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Component Identifier
ImageComponent_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
ImageComponent_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Mouse Up Script
ImageComponent_onMouseUp_displayName=マウスアップスクリプト
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
ImageComponent_onMouseUp_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを放したときに実行するスクリプトコード。 
#@EN@ CSS Style Class(es)
ImageComponent_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
ImageComponent_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Height
ImageComponent_height_displayName=高さ
#@EN@ Image height override
ImageComponent_height_shortDescription=画像の高さをオーバーライドします
#@EN@ Icon
ImageComponent_icon_displayName=アイコン
#@EN@ The identifier of the desired theme image. 
ImageComponent_icon_shortDescription=使用するテーマ画像の識別子。 
#@EN@ Align
ImageComponent_align_displayName=位置揃え
#@EN@ Specifies the position of the image with respect to its context.  Valid values are: bottom (the default); middle; top; left; right. 
ImageComponent_align_shortDescription=その内容に対して、画像の位置を指定します。有効な値は、「下」(デフォルト)、「中央」、「上」、「左」、「右」です。 
#@EN@ Vertical Space
ImageComponent_vspace_displayName=上下余白
#@EN@ Specifies the amount of white space in pixels to be inserted above and  below the image
ImageComponent_vspace_shortDescription=画像の上下に挿入する空白の量をピクセル単位で指定します
#@EN@ CSS Style(s)
ImageComponent_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
ImageComponent_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Border
ImageComponent_border_displayName=ボーダー
#@EN@ Specifies the width of the img border in pixels.  The default value for this attribute depends on the web browser. 
ImageComponent_border_shortDescription=画像のボーダーの幅をピクセル単位で指定します。この属性のデフォルト値は、Web ブラウザによって異なります。 
#@EN@ Url
ImageComponent_url_displayName=URL
#@EN@ Absolute or relative URL to the image to be rendered. 
ImageComponent_url_shortDescription=描画される画像の絶対 URL または相対 URL。 
#@EN@ Click Script
ImageComponent_onClick_displayName=クリックスクリプト
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
ImageComponent_onClick_shortDescription=このコンポーネント上でマウスがクリックされたときに実行するスクリプトコード。 
#@EN@ Mouse Down Script
ImageComponent_onMouseDown_displayName=マウスダウンスクリプト
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
ImageComponent_onMouseDown_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを押したときに実行するスクリプトコード。 
#@EN@ Tool Tip
ImageComponent_toolTip_displayName=ツールチップ
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
ImageComponent_toolTip_shortDescription=HTML 要素の title 属性の値を設定します。指定したテキストは、マウスカーソルがこの HTML 要素上に置かれたときにツールチップとして表示されます。 
#@EN@ Value
ImageComponent_value_displayName=値
#@EN@ The current value of this component
ImageComponent_value_shortDescription=このコンポーネントの現在の値
#@EN@ Mouse Out Script
ImageComponent_onMouseOut_displayName=マウスアウトスクリプト
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
ImageComponent_onMouseOut_shortDescription=このコンポーネントの外にマウスカーソルが移動したときに実行するスクリプトコード。 
#@EN@ Alt Text
ImageComponent_alt_displayName=代替テキスト
#@EN@ Alternative textual description of the image rendered by this  component
ImageComponent_alt_shortDescription=このコンポーネントによって描画される画像を説明する代替テキスト
#@EN@ Mouse In Script
ImageComponent_onMouseOver_displayName=マウスインスクリプト
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
ImageComponent_onMouseOver_shortDescription=このコンポーネント内に、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ Mouse Move Script
ImageComponent_onMouseMove_displayName=マウス移動スクリプト
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
ImageComponent_onMouseMove_shortDescription=コンポーネント内で、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ HTML Template
ImageComponent_htmlTemplate_displayName=HTML テンプレート
#@EN@ Alternative HTML template to be used by this component. 
ImageComponent_htmlTemplate_shortDescription=このコンポーネントで使用される代替 HTML テンプレート。 
#@EN@ Long Description
ImageComponent_longDesc_displayName=詳細な説明
#@EN@ A verbose description of this image. 
ImageComponent_longDesc_shortDescription=この画像の詳細説明。 
#@EN@ Horizontal Space
ImageComponent_hspace_displayName=左右余白
#@EN@ Specifies the amount of white space in pixels to be inserted to the  left and right of the image
ImageComponent_hspace_shortDescription=画像の左右に挿入する空白の量をピクセル単位で指定します
#@EN@ Visible
ImageComponent_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
ImageComponent_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ Head
Head_displayName=ヘッド
#@EN@ The Head component is used to provide information to be used in the head   element. 
Head_shortDescription=Head コンポーネントを使用して、head 要素内で使用する情報を指定できます。 
#@EN@ Enable Dojo Debugging
Head_debug_displayName=Dojo のデバッグを有効にする
#@EN@ Flag (true or false) indicating that Dojo debugging is enabled
Head_debug_shortDescription=Dojo のデバッグが有効になっているかどうかを示すフラグ (True または False)
#@EN@ Ajaxify
Head_ajaxify_displayName=Ajaxify
#@EN@ Flag indicating to turn off default Ajax functionality
Head_ajaxify_shortDescription=デフォルトの AJAX 機能を無効にすることを示すフラグ
#@EN@ title
Head_title_displayName=タイトル
#@EN@ Title of the document to be displayed in the browser title bar. 
Head_title_shortDescription=ブラウザのタイトルバーに表示されるドキュメントのタイトル。 
#@EN@ Rendered Flag
Head_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Head_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Include Component JavaScript
Head_javaScript_displayName=コンポーネント JavaScript を含む
#@EN@ Flag (true or false) indicating that component JavaScript should be   output in page
Head_javaScript_shortDescription=コンポーネント JavaScript をページに出力するかどうかを示すフラグ (True または False)
#@EN@ Profile
Head_profile_displayName=プロファイル
#@EN@ A space separated list of URL's that contains meta data information   about the page 
Head_profile_shortDescription=ページに関するメタデータ情報を含む URL を空白文字で区切ったリスト 
#@EN@ Component Identifier
Head_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
Head_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Default Base
Head_defaultBase_displayName=デフォルトベース
#@EN@ Flag (true or false) indicating that a default html base tag should be  shown or not
Head_defaultBase_shortDescription=デフォルトの HTML base タグを表示するかどうかを示すフラグ (True または False)
#@EN@ Render Meta Data
Head_meta_displayName=メタデータを描画
#@EN@ Flag (true or false) indicating if meta data should be rendered
Head_meta_shortDescription=メタデータを描画するかどうかを示すフラグ (True か False)
#@EN@ Scheduler
Scheduler_displayName=スケジューラ
#@EN@ The Scheduler component is used to display a calendar and the input controls  that are used for selecting a date and time. 
Scheduler_shortDescription=Scheduler コンポーネントを使用して、日時の選択に使用するカレンダと入力コントロールを表示できます。 
#@EN@ Repeat Interval Label
Scheduler_repeatIntervalLabel_displayName=繰り返し間隔ラベル
#@EN@ Override the default value of the label for the repeat  interval menu. 
Scheduler_repeatIntervalLabel_shortDescription=繰り返し間隔メニューのラベルのデフォルト値をオーバーライドします。 
#@EN@ Repeat Interval Menu Items
Scheduler_repeatIntervalItems_displayName=繰り返し間隔メニュー項目
#@EN@ Override the items that appear on the repeat interval menu
Scheduler_repeatIntervalItems_shortDescription=繰り返し間隔メニューに表示する項目をオーバーライドします
#@EN@ Required Legend
Scheduler_requiredLegend_displayName=必須の説明
#@EN@ Flag indicating if the &quot;* indicates required field&quot; message should be  displayed - default value is true. 
Scheduler_requiredLegend_shortDescription=「* は必須入力フィールドです」というメッセージを表示するかどうかを示すフラグ。デフォルト値は True です。
#@EN@ Date Format Pattern Help
Scheduler_dateFormatPatternHelp_displayName=日付の書式パターンのヘルプ
#@EN@ A message below the text field for the date, indicating the  string format to use when entering a date as text into the  Start Date text field.      The component internally relies on an instance of  java.text.SimpleDateFormat to produce the hint
Scheduler_dateFormatPatternHelp_shortDescription=日付のテキストフィールドの下に表示されるメッセージ。「開始日付」テキストフィールドに日付をテキストとして入力するときに使用する文字列書式を示します。このコンポーネントは内部的に java.text.SimpleDateFormat のインスタンスによってヒントを生成します
#@EN@ First selectable date
Scheduler_minDate_displayName=選択可能な最初の日付
#@EN@ The first selectable date.
Scheduler_minDate_shortDescription=選択可能な最初の日付。
#@EN@ Show End Time
Scheduler_endTime_displayName=終了時刻を表示
#@EN@ Flag indicating that an input field for the end time should be  shown
Scheduler_endTime_shortDescription=終了時刻の入力フィールドを表示するかどうかを示すフラグ
#@EN@ Date Format Pattern
Scheduler_dateFormatPattern_displayName=日付の書式パターン
#@EN@ The date format pattern to use (e.g., yyyy-MM-dd).
Scheduler_dateFormatPattern_shortDescription=使用する日付の書式パターン (yyyy-MM-dd など)。
#@EN@ Start Time Label
Scheduler_startTimeLabel_displayName=開始時刻ラベル
#@EN@ This text replaces the &quot;Start Time&quot; label. 
Scheduler_startTimeLabel_shortDescription=「開始時刻」ラベルはこのテキストで置き換えられます。
#@EN@ Last selectable date
Scheduler_maxDate_displayName=選択可能な最後の日付
#@EN@ The last selectable date.
Scheduler_maxDate_shortDescription=選択可能な最後の日付。
#@EN@ CSS Style Class(es)
Scheduler_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Scheduler_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ CSS Style(s)
Scheduler_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Scheduler_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Show Start Time
Scheduler_startTime_displayName=開始時刻を表示
#@EN@ Flag indicating that an input field for the start time should be  shown
Scheduler_startTime_shortDescription=開始時刻の入力フィールドを表示するかどうかを示すフラグ
#@EN@ Repeating Events
Scheduler_repeating_displayName=イベントの繰り返し
#@EN@ Flag indicating that a control for scheduling a repeated event  should be shown
Scheduler_repeating_shortDescription=繰り返しイベントのスケジューリングコントロールを表示するかどうかを示すフラグ
#@EN@ Time Zone
Scheduler_timeZone_displayName=タイムゾーン
#@EN@ The java.util.TimeZone used with this  component
Scheduler_timeZone_shortDescription=このコンポーネントで使用する java.util.TimeZone
#@EN@ Value
Scheduler_value_displayName=値
#@EN@ The current value of this component. 
Scheduler_value_shortDescription=このコンポーネントの現在の値。 
#@EN@ End Time Label
Scheduler_endTimeLabel_displayName=終了時刻ラベル
#@EN@ This text replaces the &quot;End Time&quot; label. 
Scheduler_endTimeLabel_shortDescription=「終了時刻」ラベルはこのテキストで置き換えられます。
#@EN@ Converter
Scheduler_converter_displayName=コンバータ
#@EN@ The converter attribute is used to specify a method to translate native  property values to String and back for this component
Scheduler_converter_shortDescription=converter 属性を使用して、このコンポーネントの native プロパティー値を文字列に変換し、元に戻すメソッドを指定できます
#@EN@ Required
Scheduler_required_displayName=必須
#@EN@ Flag indicating that the user must enter a value for this Scheduler.  Default value is true. 
Scheduler_required_shortDescription=このスケジューラに値を入力する必要があるかどうかを示すフラグ。デフォルト値は True です。 
#@EN@ Disabled
Scheduler_disabled_displayName=使用不可
#@EN@ Standard HTML attribute which determines whether the web  application user can change the the value of this component.  NOT YET IMPLEMENTED. 
Scheduler_disabled_shortDescription=Web アプリケーションユーザーがこのコンポーネントの値を変更できるかどうかを決定する標準 HTML 属性。まだ実装されていません。 
#@EN@ Limit Repeating Events
Scheduler_limitRepeating_displayName=イベントの繰り返し制限
#@EN@ Flag indicating that a control for setting a limit for repeating  events should be shown
Scheduler_limitRepeating_shortDescription=イベントの繰り返しに制限を設けるコントロールを表示するかどうかを示すフラグ
#@EN@ Preview Button
Scheduler_previewButton_displayName=プレビューボタン
#@EN@ Flag indicating that the &quot;Preview in Browser&quot; button should be  displayed - default value is true. 
Scheduler_previewButton_shortDescription=「ブラウザでプレビュー」ボタンを表示するかどうかを示すフラグ。デフォルト値は True です。
#@EN@ Repeat Limit Label
Scheduler_repeatLimitLabel_displayName=繰り返し制限ラベル
#@EN@ Override the default value of the label for the repeat  limit menu. 
Scheduler_repeatLimitLabel_shortDescription=繰り返し制限メニューのラベルのデフォルト値をオーバーライドします。 
#@EN@ Repeat Limit Unit Items
Scheduler_repeatUnitItems_displayName=繰り返し制限単位項目
#@EN@ Override the items that appear on the repeat limit unit menu
Scheduler_repeatUnitItems_shortDescription=繰り返し制限単位メニューに表示する項目をオーバーライドします
#@EN@ Visible
Scheduler_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
Scheduler_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ Read-only
Scheduler_readOnly_displayName=読み取り専用
#@EN@ If this attribute is set to true, the value of the component is  rendered as text, preceded by the label if one was defined
Scheduler_readOnly_shortDescription=この属性が True の場合、コンポーネントの値は、テキストとして描画され、ラベルが定義されている場合はラベルが前に付きます。
#@EN@ Date Label
Scheduler_dateLabel_displayName=日付ラベル
#@EN@ This text replaces the &quot;Start Date&quot; label. 
Scheduler_dateLabel_shortDescription=日付ラベルはこのテキストで置き換えられます。
#@EN@ Tab Index
Scheduler_tabIndex_displayName=タブ索引
#@EN@ Position of this element in the tabbing order of the current document
Scheduler_tabIndex_shortDescription=現在のドキュメントのタブ順でのこの要素の位置
#@EN@ ImageHyperlink
IconHyperlink_displayName=ImageHyperlink
#@EN@ The Icon component is used to display a clickable icon image from the current  theme in the rendered HTML page. 
IconHyperlink_shortDescription=Icon コンポーネントを使用して、描画される HTML ページに現在のテーマからクリック可能なアイコン画像を表示できます。 
#@EN@ Immediate
WebuiCommand_immediate_displayName=即時
#@EN@ Flag indicating that event handling for this component should be handled  immediately (in Apply Request Values phase) rather than waiting until   Invoke Application phase. 
WebuiCommand_immediate_shortDescription=このコンポーネントのイベント処理が、「アプリケーションの起動」の段階まで待たずに、すぐに (「要求値の適用」段階で) 処理されることを示すフラグ。 
#@EN@ Password Field
PasswordField_displayName=パスワードフィールド
#@EN@ The PasswordField component is used to create a password textfield. 
PasswordField_shortDescription=PasswordField コンポーネントを使用して、パスワードテキストフィールドを作成できます。 
#@EN@ Password
PasswordField_password_displayName=パスワード
#@EN@ Value binding
PasswordField_password_shortDescription=値のバインド
#@LC@ ### New message ###
#@EN@ Submit Form
PasswordField_submitForm_displayName=送信フォーム
#@LC@ ### New message ###
#@EN@ Flag indicating whether pressing enter in this text field would allow  browser to submit the enclosing form ( for all input fields with the exception of TextArea  which uses enter key to open a new line)        If set to false, the browser will be prevented from submitting the form on enter in all circumstances.  If set to true, the form will be submitted on enter in all circumstances.  The default value for this attribute is &quot;false&quot;, i.e.  default browser auto submit feature will be disabled
PasswordField_submitForm_shortDescription=このテキストフィールドで Enter キーを押したときに、ブラウザがフォームを送信するかどうかを示すフラグ。新規行を開くために Enter キーを使用する TextArea 以外のすべての入力フィールドに適用されます。False に設定すると、ブラウザは、どんな状況で Enter キーを押されてもフォームを送信しません。True に設定すると、どんな状況で Enter キーを押されてもフォームを送信します。この属性のデフォルト値は &quot;False&quot; で、デフォルトのブラウザの自動送信機能は無効になっています。
#@EN@ Value
PasswordField_value_displayName=値
#@EN@ The current value of this component
PasswordField_value_shortDescription=このコンポーネントの現在の値
#@EN@ Text
PasswordField_text_displayName=テキスト
#@EN@ Literal value to be rendered in this input field.  If this property is specified by a value binding  expression, the corresponding value will be updated  if validation succeeds. 
PasswordField_text_shortDescription=この入力フィールドに描画されるリテラル値。このプロパティーが値バインド式によって指定される場合、妥当性検査が成功すると対応する値が更新されます。
#@EN@ ThemeLinks
ThemeLinks_displayName=テーマリンク
#@EN@ The ThemeLicnks component is used to create references to theme resources on   a page in a portlet environment, where the Head component cannot be used. 
ThemeLinks_shortDescription=ThemeLicnks コンポーネントを使用して、Head コンポーネントが使用できないポートレット環境でページにテーマリソースへの参照を作成できます。 
#@EN@ Include StyleSheet Definitions Inline
ThemeLinks_styleSheetInline_displayName=スタイルシート定義をインラインで含める
#@EN@ If set to true, the theme stylesheet contents will be rendered inline   instead of being linked to. 
ThemeLinks_styleSheetInline_shortDescription=True に設定した場合、テーマスタイルシートの内容は、リンクされずに、インラインで描画されます。 
#@EN@ Enable Dojo Debugging
ThemeLinks_debug_displayName=Dojo のデバッグを有効にする
#@EN@ Flag (true or false) indicating that Dojo debugging is enabled
ThemeLinks_debug_shortDescription=Dojo のデバッグが有効になっているかどうかを示すフラグ (True または False)
#@EN@ Ajaxify
ThemeLinks_ajaxify_displayName=Ajaxify
#@EN@ Flag indicating to turn off default Ajax functionality
ThemeLinks_ajaxify_shortDescription=デフォルトの AJAX 機能を無効にすることを示すフラグ
#@EN@ Include StyleSheet Link
ThemeLinks_styleSheet_displayName=スタイルシートリンクを含める
#@EN@ If set to true, a link element with a reference to the theme  stylesheet resource is rendered. 
ThemeLinks_styleSheet_shortDescription=True に設定した場合、テーマスタイルシートリソースへの参照を持つリンク要素が描画されます。 
#@EN@ Rendered Flag
ThemeLinks_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
ThemeLinks_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Include Component JavaScript
ThemeLinks_javaScript_displayName=コンポーネント JavaScript を含む
#@EN@ Flag (true or false) indicating that component JavaScript should be   output in page
ThemeLinks_javaScript_shortDescription=コンポーネント JavaScript をページに出力するかどうかを示すフラグ (True またｈ False)
#@EN@ Component Identifier
ThemeLinks_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
ThemeLinks_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Accordion
Accordion_displayName=折りたたみ式
#@EN@ An accordion container
Accordion_shortDescription=折りたたみ式コンテナ
#@LC@ ### New message ###
#@EN@ Display Refresh Icon
Accordion_refreshIcon_displayName=再表示アイコンを表示
#@LC@ ### New message ###
#@EN@ Should be set to true if the accordion container is to display  a refresh icon
Accordion_refreshIcon_shortDescription=折り畳み式のコンテナに再表示アイコンを表示させる場合は True に設定します
#@EN@ Multiple tab selected
Accordion_multipleSelect_displayName=複数のタブが選択されています
#@EN@ Returns true if multiple tabs can be selected at the same time.  By default this is set to false and only one accordion tab can be  selected at any given time
Accordion_multipleSelect_shortDescription=複数のタブを同時に選択できる場合は、True を返します。デフォルトでは、これは False に設定されており、随時選択できる折りたたみ式のタブは 1 つだけです
#@EN@ Set expand and colapse controls
Accordion_toggleControls_displayName=展開および折りたたみコントロールを設定
#@EN@ Should be set to true if the accordion container should display  expandAll and collapseAll control features
Accordion_toggleControls_shortDescription=折りたたみ式コンテナに expandAll および collapseAll コントロール機能を表示させるには、True に設定します
#@EN@ HTML Template
TabContainer_htmlTemplate_displayName=HTML テンプレート
#@EN@ Alternative HTML template to be used by this component. 
TabContainer_htmlTemplate_shortDescription=このコンポーネントで使用される代替 HTML テンプレート。 
#@EN@ Load on select
TabContainer_loadOnSelect_displayName=選択の読み込み
#@EN@ Returns true if the tabs should be loaded when first selected.  Once loaded the tabs would not be reloaded until the container is  refreshed or the user performs some action on tab in question
TabContainer_loadOnSelect_shortDescription=最初に選択されたときにタブを読み込む場合に True を返します。タブはいったん読み込まれると、コンテナが再表示されるか、ユーザーがそのタブで何らかのアクションを実行するまでは再読み込みされません。
#@EN@ CSS Style Class(es)
TabContainer_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this  component is rendered. 
TabContainer_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Array of Selected Tabs
TabContainer_selectedTabs_displayName=選択されたタブの配列
#@EN@ An array of selected tabs
TabContainer_selectedTabs_shortDescription=選択されたタブの配列
#@EN@ CSS Style(s)
TabContainer_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this  component is rendered. 
TabContainer_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Visible
TabContainer_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
TabContainer_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ Property Sheet Section
PropertySheetSection_displayName=プロパティーシートセクション
#@EN@ The PropertySheetSection component was written to be used  within the PropertySheet component
PropertySheetSection_shortDescription=PropertySheetSection コンポーネントは、PropertySheet コンポーネント内で使用するために作成されました
#@EN@ CSS Style Class(es)
PropertySheetSection_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
PropertySheetSection_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Label
PropertySheetSection_label_displayName=ラベル
#@EN@ This attribute allows you to provide a label or title for the section  	this PropertySheetSection defines for thePropertySheet component
PropertySheetSection_label_shortDescription=この属性を使用すると、PropertySheetSection コンポーネントで定義したセクションのラベルまたはタイトルを PropertySheet コンポーネントに指定できます。
#@EN@ Visible
PropertySheetSection_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
PropertySheetSection_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ CSS Style(s)
PropertySheetSection_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
PropertySheetSection_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Rendered Flag
PropertySheetSection_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
PropertySheetSection_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Component Identifier
PropertySheetSection_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
PropertySheetSection_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Html
Html_displayName=HTML
#@EN@ The Html component is used to create the &lt;html&gt; element. 
Html_shortDescription=HTML コンポーネントを使用して、&lt;html&gt; 要素を作成できます。 
#@EN@ Lang
Html_lang_displayName=言語
#@EN@ Sets the language code for this document 
Html_lang_shortDescription=このドキュメントの言語コードを設定します 
#@EN@ XML Namespace
Html_xmlns_displayName=XML 名前空間
#@EN@ Defines the XML namespace attribute
Html_xmlns_shortDescription=XML namespace 属性を定義します
#@EN@ Rendered Flag
Html_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Html_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Component Identifier
Html_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
Html_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Listbox
Listbox_displayName=リストボックス
#@EN@ The Listbox component allows users to select one or more items from a list. 
Listbox_shortDescription=Listbox コンポーネントを使用すると、ユーザーはリストから 1 つ以上の項目を選択できます。 
#@EN@ Tool Tip
Listbox_toolTip_displayName=ツールチップ
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
Listbox_toolTip_shortDescription=HTML 要素の title 属性の値を設定します。指定したテキストは、マウスカーソルがこの HTML 要素上に置かれたときにツールチップとして表示されます。 
#@EN@ HTML Template
Listbox_htmlTemplate_displayName=HTML テンプレート
#@EN@ Alternative HTML template to be used by this component. 
Listbox_htmlTemplate_shortDescription=このコンポーネントで使用される代替 HTML テンプレート。 
#@EN@ Value
Listbox_value_displayName=値
#@EN@ The current value of this component
Listbox_value_shortDescription=このコンポーネントの現在の値
#@EN@ Multiple
Listbox_multiple_displayName=複数
#@EN@ Flag indicating that the application user can make select  	more than one option at a time from the listbox. 
Listbox_multiple_shortDescription=アプリケーションユーザーが、リストボックスから一度に複数のオプションを選択できることを示すフラグ。
#@EN@ Text Selected Script
Listbox_onSelect_displayName=テキスト選択スクリプト
#@EN@ Scripting code executed when some text in this  component value is selected. 
Listbox_onSelect_shortDescription=このコンポーネント値のテキストが選択されたときに実行するスクリプトコード。 
#@EN@ Use Monospace Space
Listbox_monospace_displayName=モノスペースの使用
#@EN@ When set to true, this attribute causes the list items to be rendered   in a monospace font. 
Listbox_monospace_shortDescription=この属性が True の場合、リスト項目はモノスペースフォントで描画されます。 
#@EN@ Read-only
Listbox_readOnly_displayName=読み取り専用
#@EN@ If this attribute is set to true, the value of the component is  rendered as text, preceded by the label if one was defined.   Deprecated: The attribute is deprecated starting from version 4.1 
Listbox_readOnly_shortDescription=この属性が True の場合、コンポーネントの値はテキストとして描画され、ラベルが定義されている場合はラベルが前に付きます。非推奨: この属性は、version 4.1 以降は非推奨となっています 
#@EN@ Separators
ListSelector_separators_displayName=セパレータ
#@EN@ Flag indicating that items corresponding to   com.sun.webui.jsf.model.Option that are defined   inside a com.sun.webui.jsf.model.OptionGroup should be  surrounded by separators inside the list
ListSelector_separators_shortDescription=リスト中の com.sun.webui.jsf.model.OptionGroup 内に定義されている com.sun.webui.jsf.model.Option に対応する項目をセパレータで囲むことを示すフラグ
#@EN@ Radio Button Group
RadioButtonGroup_displayName=ラジオボタングループ
#@EN@ The RadioButtonGroup component is used to display two or more radio buttons  in a grid layout in the rendered HTML page. 
RadioButtonGroup_shortDescription=RadioButtonGroup コンポーネントを使用し、描画される HTML ページにグリッドレイアウトで 2 つ以上のラジオボタンを表示できます。 
#@EN@ HTML Template
RadioButtonGroup_htmlTemplate_displayName=HTML テンプレート
#@EN@ Alternative HTML template to be used by this component. 
RadioButtonGroup_htmlTemplate_shortDescription=このコンポーネントで使用される代替 HTML テンプレート。 
#@EN@ Value
RadioButtonGroup_value_displayName=値
#@EN@ The current value of this component
RadioButtonGroup_value_shortDescription=このコンポーネントの現在の値
#@EN@ Text Selected Script
RadioButtonGroup_onSelect_displayName=テキスト選択スクリプト
#@EN@ Scripting code executed when some text in this  component value is selected. 
RadioButtonGroup_onSelect_shortDescription=このコンポーネント値のテキストが選択されたときに実行するスクリプトコード。 
#@EN@ Value Change Script
RadioButtonGroup_onChange_displayName=値変更スクリプト
#@EN@ Scripting code executed when the element  value of this component is changed. 
RadioButtonGroup_onChange_shortDescription=このコンポーネントの値が変更されたときに実行するスクリプトコード。 
#@EN@ Focus Script
RadioButtonGroup_onFocus_displayName=フォーカススクリプト
#@EN@ Scripting code executed when this component  receives focus
RadioButtonGroup_onFocus_shortDescription=このコンポーネントがフォーカスを得たときに実行するスクリプトコード
#@EN@ Visible
RadioButtonGroup_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
RadioButtonGroup_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ Columns
RadioButtonGroup_columns_displayName=文字数
#@EN@ Defines how many columns may be used to layout the radio buttons
RadioButtonGroup_columns_shortDescription=ラジオボタンのレイアウトに使用する列数を指定します
#@EN@ Blur Script
RadioButtonGroup_onBlur_displayName=フォーカスオフスクリプト
#@EN@ Scripting code executed when this element loses focus. 
RadioButtonGroup_onBlur_shortDescription=このコンポーネントがフォーカスを失ったときに実行するスクリプトコード。 
#@EN@ Image Hyperlink
ImageHyperlink_displayName=画像ハイパーリンク
#@EN@ Use the webuijsf:imageHyperlink tag to display a clickable   image in the rendered HTML page
ImageHyperlink_shortDescription=webuijsf:imageHyperlink タグを使用して、描画された HTML ページ内の、クリックできる画像を表示できます
#@EN@ Double Click Script
ImageHyperlink_onDblClick_displayName=ダブルクリックスクリプト
#@EN@ Specifies the position of the image with respect to its context.  Valid values are: bottom (the default); middle; top; left; right. 
ImageHyperlink_onDblClick_shortDescription=その内容に対して、画像の位置を指定します。有効な値は、「下」(デフォルト)、「中央」、「上」、「左」、「右」です。
#@EN@ Width
ImageHyperlink_width_displayName=幅
#@EN@ Image width override
ImageHyperlink_width_shortDescription=画像の幅をオーバーライドします
#@EN@ Image Url
ImageHyperlink_imageURL_displayName=画像 URL
#@EN@ Absolute or relative URL to the image to be rendered. 
ImageHyperlink_imageURL_shortDescription=描画される画像の絶対 URL または相対 URL。 
#@EN@ Height
ImageHyperlink_height_displayName=高さ
#@EN@ When specified, the width and height attributes tell the client browser to override the natural image or object size in favor of these values, specified in pixels
ImageHyperlink_height_shortDescription=width および height 属性を指定すると、クライアントブラウザは、画像またはオブジェクト本来のサイズではなく、ピクセル単位で指定されたこれらの値を優先します
#@EN@ Icon
ImageHyperlink_icon_displayName=アイコン
#@EN@ The identifier of the desired theme image. 
ImageHyperlink_icon_shortDescription=使用するテーマ画像の識別子。 
#@EN@ Horizontal Space
ImageHyperlink_hspace_displayName=左右余白
#@EN@ Specifies the amount of white space in pixels to be inserted to the left and   right of the image
ImageHyperlink_hspace_shortDescription=画像の左右に挿入する空白の量をピクセル単位で指定します
#@EN@ Align
ImageHyperlink_align_displayName=位置揃え
#@EN@ Specifies the position of the image with respect to its context.  Valid values are: bottom (the default); middle; top; left; right. 
ImageHyperlink_align_shortDescription=その内容に対して、画像の位置を指定します。有効な値は、「下」(デフォルト)、「中央」、「上」、「左」、「右」です。
#@EN@ Vertical Space
ImageHyperlink_vspace_displayName=上下余白
#@EN@ Specifies the amount of white space in pixels to be inserted above and below the   image
ImageHyperlink_vspace_shortDescription=画像の上下に挿入する空白の量をピクセル単位で指定します
#@EN@ Visible
ImageHyperlink_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
ImageHyperlink_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ Border
ImageHyperlink_border_displayName=ボーダー
#@EN@ Specifies the width of the img border in pixels.  The default value for this attribute depends on the client browser 
ImageHyperlink_border_shortDescription=画像のボーダーの幅をピクセル単位で指定します。この属性のデフォルト値は、クライアントブラウザによって異なります
#@EN@ Alt Text
ImageHyperlink_alt_displayName=代替テキスト
#@EN@ Alternative textual description of the image rendered by this component
ImageHyperlink_alt_shortDescription=このコンポーネントによって描画される画像を説明する代替テキスト
#@EN@ Text Position
ImageHyperlink_textPosition_displayName=テキストの位置
#@EN@ Specifies where the text will be placed relative to the image
ImageHyperlink_textPosition_shortDescription=テキストの配置先を画像に対する相対位置で指定します
#@EN@ Tree
Tree_displayName=ツリー
#@EN@ The Tree component is used to display a tree structure in the rendered HTML  page. 
Tree_shortDescription=Tree コンポーネントを使用して、描画される HTML ページにツリー構造を表示できます。 
#@EN@ Image URL
Tree_imageURL_displayName=画像 URL
#@EN@ Absolute or relative URL to the image to be rendered for the tree node.  Note that you cannot use the imageURL to display a theme image in the  tree
Tree_imageURL_shortDescription=ツリーノードに描画される画像の絶対 URL または相対 URL。imageURL 属性を使用して、ツリー内のテーマ画像を表示することはできません
#@EN@ required
Tree_required_displayName=必須
#@EN@ Flag indicating that the user must select a value for this tree.     Default value is false.  @deprecated: This attribute is deprecated from 4.1 and should not be used as it does not make much   sense in the context of the tree. 
Tree_required_shortDescription=このツリーで値を 1 つ選択する必要があることを示すフラグ。デフォルト値は False です。@deprecated: この属性は、4.1 から非推奨です。ツリーのコンテキストで多くの意味を持たない場合は使用しないでください。 
#@EN@ Hyperlink Action
Tree_actionExpression_displayName=ハイパーリンクアクション
#@EN@ The action attribute is used to specify the action to take when this  component is activated by the user
Tree_actionExpression_shortDescription=action 属性を使用して、このコンポーネントがユーザーによってアクティブにされたときに実行するアクションを指定できます
#@EN@ ClientSide
Tree_clientSide_displayName=クライアント側
#@EN@ Set the clientSide attribute to true to specify that the Tree component          should run on the client
Tree_clientSide_shortDescription=ツリーコンポーネントをクライアントで実行するには、clientSide 属性を True に設定します
#@EN@ Hyperlink Target
Tree_target_displayName=ハイパーリンクターゲット
#@EN@ The resource at the specified URL is displayed in the frame that is  specified with the target attribute
Tree_target_shortDescription=指定された URL のリソースは、target 属性で指定されたフレーム内に表示されます。
#@EN@ Rendered Flag
Tree_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Tree_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Component Identifier
Tree_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
Tree_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ CSS Style Class(es)
Tree_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this     component is rendered. 
Tree_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Selected
Tree_selected_displayName=選択
#@EN@ Returns the id of the selected tree node
Tree_selected_shortDescription=選択されたツリーノードの ID を返します
#@EN@ Immediate
Tree_immediate_displayName=即時
#@EN@ Flag indicating that event handling for this component should be  	handled immediately (in Apply Request Values phase) rather than  	waiting until Invoke Application phase.  	May be desired for this component when required is true (although most  	likely not). 
Tree_immediate_shortDescription=このコンポーネントのイベント処理が、「アプリケーションの起動」の段階まで待たずに、すぐに (「要求値の適用」段階で) 処理されることを示すフラグ。required が True の場合に、このコンポーネントで必要となります (まれなケース)。 
#@EN@ Action Listener Expression
Tree_actionListenerExpression_displayName=アクションリスナー式
#@EN@ The actionListener attribute is used to specify a method to handle an  action event that is triggered when a component is activated by the user.  The actionListener attribute value must be a JavaServer Faces EL  expression that resolves to a method in a backing bean
Tree_actionListenerExpression_shortDescription=actionListener 属性を使用して、ユーザーによってコンポーネントがアクティブにされたときに発生させるアクションイベントを処理するメソッドを指定できます。この属性の値は、バッキング Bean のメソッドを解釈処理する JavaServer Faces の EL 式である必要があります
#@EN@ Expanded
Tree_expanded_displayName=展開
#@EN@ Set the expanded attribute to true to display the tree node as expanded when      the component is initially rendered
Tree_expanded_shortDescription=expanded 属性を True に設定すると、コンポーネントの初期描画時、ツリーノードが展開した状態で表示されます
#@EN@ Expand On Select
Tree_expandOnSelect_displayName=選択時に展開
#@EN@ Flag indicating that folder / container nodes will automatically expand  	when they are selected
Tree_expandOnSelect_shortDescription=選択されたときフォルダ/コンテナノードを自動的に展開することを示すフラグ
#@EN@ CSS Style(s)
Tree_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this     component is rendered. 
Tree_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Visible
Tree_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be      viewable by the user in the rendered HTML page
Tree_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ Hyperlink Url
Tree_url_displayName=ハイパーリンク URL
#@EN@ Indicates that the text that is specified with the text attribute  should be rendered as a hyperlink that resolves to the specified URL.  If the imageURL attribute is used with the url attribute, the image is  hyperlinked
Tree_url_shortDescription=text 属性で指定されたテキストが、指定された URL を持つハイパーリンクとして描画されることを示します。imageURL 属性と url 属性の両方が使用された場合、画像はハイパーリンクになります
#@EN@ Page
Page_displayName=ページ
#@EN@ The Page component is used to indicate the beginning of the part of the JSP  page that is used by the Sun Java Web UI Components. 
Page_shortDescription=Page コンポーネントを使用して、Sun Java Web UI コンポーネントが使用する JSP ページの先頭を示すことができます。 
#@EN@ XHTML Transitional
Page_xhtml_displayName=XHTML トランジショナル
#@EN@ XHTML transitional page or HTML  transitional page
Page_xhtml_shortDescription=XHTML トランジショナルページまたは HTML トランジショナルページ
#@EN@ Needs Frame
Page_frame_displayName=フレームが必要
#@EN@ Use the frame attribute to  indicate whether the page should render frames
Page_frame_shortDescription=frame 属性を使用して、ページにフレームを描画するかどうかを指定できます
#@EN@ Rendered Flag
Page_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Page_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Component Identifier
Page_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
Page_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Skip Hyperlink
SkipHyperlink_displayName=スキップハイパーリンク
#@EN@ The SkipLink component is used to create a single-pixel transparent image  (not visible within the browser page) which is hyperlinked to an anchor   beyond the section to skip. 
SkipHyperlink_shortDescription=SkipLink コンポーネントを使用し、スキップするセクションを越えた位置にあるアンカーにハイパーリンクされた単一のピクセル透明画像 (ブラウザのページには表示されない) を作成できます。 
#@EN@ Value
SkipHyperlink_value_displayName=値
#@EN@ The current value of this component
SkipHyperlink_value_shortDescription=このコンポーネントの現在の値
#@EN@ CSS Style Class(es)
SkipHyperlink_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
SkipHyperlink_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Immediate
SkipHyperlink_immediate_displayName=即時
#@EN@ Flag indicating that event handling for this component should be handled  immediately (in Apply Request Values phase) rather than waiting until   Invoke Application phase. 
SkipHyperlink_immediate_shortDescription=このコンポーネントのイベント処理が、「アプリケーションの起動」の段階まで待たずに、すぐに (「要求値の適用」段階で) 処理されることを示すフラグ。 
#@EN@ Action Expression
SkipHyperlink_actionExpression_displayName=アクション式
#@EN@ MethodExpression representing the application action to invoke when this  component is activated by the user
SkipHyperlink_actionExpression_shortDescription=ユーザーがこのコンポーネントがアクティブにしたときに起動するアプリケーションアクションを表すメソッド式
#@EN@ Action Listener Expression
SkipHyperlink_actionListenerExpression_displayName=アクションリスナー式
#@EN@ Use the actionListenerExpression attribute to cause the component to fire  an event
SkipHyperlink_actionListenerExpression_shortDescription=actionListenerExpression 属性を使用して、コンポーネントにイベントを発生させることができます
#@EN@ Description
SkipHyperlink_description_displayName=説明
#@EN@ Use the description attribute to provide text that describes the purpose   of the skip hyperlink
SkipHyperlink_description_shortDescription=description 属性を使用して、スキップハイパーリンクの目的を説明するテキストを指定できます
#@EN@ CSS Style(s)
SkipHyperlink_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
SkipHyperlink_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Tab Index
SkipHyperlink_tabIndex_displayName=タブ索引
#@EN@ Position of this element in the tabbing order of the current document
SkipHyperlink_tabIndex_shortDescription=現在のドキュメントのタブ順でのこの要素の位置
#@EN@ Version Page
VersionPage_displayName=バージョンページ
#@EN@ The VersionPage component is used to display a version page. 
VersionPage_shortDescription=VersionPage コンポーネントを使用して、バージョンページを表示できます。 
#@EN@ Version Information File
VersionPage_versionInformationFile_displayName=バージョン情報ファイル
#@EN@ The name of version information file containing the formatted application version and copyright message. 
VersionPage_versionInformationFile_shortDescription=書式付きのアプリケーションバージョンおよび著作権メッセージを含むバージョン情報ファイルの名前。 
#@EN@ Value
VersionPage_value_displayName=値
#@EN@ The current value of this component
VersionPage_value_shortDescription=このコンポーネントの現在の値
#@EN@ Converter
VersionPage_converter_displayName=コンバータ
#@EN@ Converter instance registered with this component.
VersionPage_converter_shortDescription=このコンポーネントに登録されているコンバータのインスタンス。
#@EN@ Rendered Flag
VersionPage_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
VersionPage_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Component Identifier
VersionPage_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
VersionPage_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ CSS Style Class(es)
VersionPage_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
VersionPage_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Product Image Description
VersionPage_productImageDescription_displayName=製品画像の説明
#@EN@ The description to use for the Product Name Image displayed in the version page. 
VersionPage_productImageDescription_shortDescription=バージョンページに表示する製品名画像に使用する説明。 
#@EN@ Product Image Height
VersionPage_productImageHeight_displayName=製品画像の高さ
#@EN@ The height to use for the Product Name Image 
VersionPage_productImageHeight_shortDescription=製品名画像に使用する高さ (ピクセル単位) 
#@EN@ Product Image URL
VersionPage_productImageURL_displayName=製品画像の URL
#@EN@ The url to use for the Product Name Image 
VersionPage_productImageURL_shortDescription=製品名画像に使用する画像ファイルの URL 
#@EN@ Copyright String
VersionPage_copyrightString_displayName=著作権文字列
#@EN@ The application copyright information. 
VersionPage_copyrightString_shortDescription=アプリケーションの著作権情報。 
#@EN@ CSS Style(s)
VersionPage_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
VersionPage_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Visible
VersionPage_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
VersionPage_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ Product Image Width
VersionPage_productImageWidth_displayName=製品画像の幅
#@EN@ The width to use for the Product Name Image 
VersionPage_productImageWidth_shortDescription=製品名画像に使用する幅 
#@EN@ Version String
VersionPage_versionString_displayName=バージョン文字列
#@EN@ The application version. 
VersionPage_versionString_shortDescription=アプリケーションのバージョン。 
#@EN@ Row Group
TableRowGroup_displayName=行グループ
#@EN@ Component that represents a group of table rows.    The TableRowGroup component provides a layout mechanism for displaying rows   of data
TableRowGroup_shortDescription=表行のグループを表すコンポーネント。TableRowGroup コンポーネントは、データの行を表示するレイアウト機能を提供します
#@EN@ Extra Footer HTML
TableRowGroup_extraFooterHtml_displayName=追加フッター HTML
#@EN@ Extra HTML code to be appended to the &lt;tr&gt; HTML element that   is rendered for the group footer
TableRowGroup_extraFooterHtml_shortDescription=グループフッターに描画される HTML &lt;tr&gt; 要素に追加される追加の HTML コード
#@EN@ Show Multiple Column Footers
TableRowGroup_multipleColumnFooters_displayName=複数の列フッターを表示
#@EN@ Use the multipleColumnFooters attribute when the   webuijsf:tableRowGroup contains nested webuijsf:tableColumn tags,   and you want the footers of all the webuijsf:tableColumn tags to be   shown
TableRowGroup_multipleColumnFooters_shortDescription=webuijsf:tableRowGroup に入れ子の webuijsf:tableColumn タグが含まれ、すべての webuijsf:tableColumn タグのフッターを表示する場合に、multipleColumnFooters 属性を使用します
#@EN@ Extra Header HTML
TableRowGroup_extraHeaderHtml_displayName=追加ヘッダー HTML
#@EN@ Extra HTML code to be appended to the &lt;tr&gt; HTML element that   is rendered for the group header
TableRowGroup_extraHeaderHtml_shortDescription=グループヘッダーに描画される HTML &lt;tr&gt; 要素に追加される追加の HTML コード
#@LC@ ### New message ###
#@EN@ Footer Text
TableRowGroup_footerText_displayName=フッターテキスト
#@LC@ ### New message ###
#@EN@ The text to be displayed in the group footer. 
TableRowGroup_footerText_shortDescription=グループのフッターに表示されるテキスト 
#@EN@ Is Above Column Header
TableRowGroup_aboveColumnHeader_displayName=列ヘッダーの上
#@EN@ Set the aboveColumnHeader attribute to true to display the group   header bar above the column headers bar
TableRowGroup_aboveColumnHeader_shortDescription=aboveColumnHeader 属性を True に設定すると、列ヘッダーのバーの上にグループヘッダーのバーを表示できます
#@EN@ Show Nested Table Column Footers
TableRowGroup_multipleTableColumnFooters_displayName=入れ子の表の列フッターを表示
#@EN@ Use the multipleTableColumnFooters attribute when the   webuijsf:tableRowGroup contains nested webuijsf:tableColumn tags,   and you want the table footers of all the webuijsf:tableColumn tags to   be shown
TableRowGroup_multipleTableColumnFooters_shortDescription=webuijsf:tableRowGroup に入れ子の webuijsf:tableColumn タグが含まれ、すべての webuijsf:tableColumn タグの表フッターを表示する場合に、multipleTableColumnFooters 属性を使用します
#@EN@ Is Above Column Footer
TableRowGroup_aboveColumnFooter_displayName=列フッターの上
#@EN@ Set the aboveColumnFooter attribute to true to display the group   footer bar above the column footers bar
TableRowGroup_aboveColumnFooter_shortDescription=aboveColumnFooter 属性を True に設定すると、列フッターのバーの上にグループフッターのバーが表示されます
#@EN@ Button
Button_displayName=ボタン
#@EN@ The Button component is used to display an input button. 
Button_shortDescription=Button コンポーネントを使用して、入力ボタンを表示できます。 
#@EN@ Double Click Script
Button_onDblClick_displayName=ダブルクリックスクリプト
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
Button_onDblClick_shortDescription=このコンポーネント上でマウスがダブルクリックされたときに実行するスクリプトコード。 
#@EN@ Image URL
Button_imageURL_displayName=画像 URL
#@EN@ Resource path of an image to be displayed to create the visual appearance of   this button instead of the standard button image
Button_imageURL_shortDescription=このボタンの外観を作成するために、標準ボタン画像の代わりに使用する画像リソースのパス
#@EN@ Key Press Script
Button_onKeyPress_displayName=キー押下スクリプト
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
Button_onKeyPress_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押して放したときに実行するスクリプトコード。 
#@EN@ Is Reset
Button_reset_displayName=リセット
#@EN@ Indicates that the button should be a HTML reset button
Button_reset_shortDescription=ボタンが HTML リセットボタンであることを示します
#@EN@ Focus Script
Button_onFocus_displayName=フォーカススクリプト
#@EN@ Scripting code executed when this component  receives focus
Button_onFocus_shortDescription=このコンポーネントがフォーカスを得たときに実行するスクリプトコード
#@EN@ Escape
Button_escape_displayName=エスケープ
#@EN@ Escape the html text so it won't be interpreted by the browser as HTML
Button_escape_shortDescription=ブラウザによって HTML として解釈されないよう、HTML テキストをエスケープします
#@EN@ Key Up Script
Button_onKeyUp_displayName=キーアップスクリプト
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
Button_onKeyUp_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを放したときに実行するスクリプトコード。 
#@EN@ Mouse Up Script
Button_onMouseUp_displayName=マウスアップスクリプト
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
Button_onMouseUp_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを放したときに実行するスクリプトコード。 
#@EN@ CSS Style Class(es)
Button_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Button_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Icon
Button_icon_displayName=アイコン
#@EN@ The identifier key of a theme image to be used for the button
Button_icon_shortDescription=ボタンに使用するテーマ画像の識別子キー
#@EN@ CSS Style(s)
Button_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Button_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Click Script
Button_onClick_displayName=クリックスクリプト
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
Button_onClick_shortDescription=このコンポーネント上でマウスがクリックされたときに実行するスクリプトコード。 
#@EN@ Is Mini
Button_mini_displayName=小型化
#@EN@ Indicates that the button should be rendered using a different style   than normal buttons
Button_mini_shortDescription=通常のボタンとは別のスタイルでボタンを描画することを示します
#@EN@ Blur Script
Button_onBlur_displayName=フォーカスオフスクリプト
#@EN@ Scripting code executed when this element loses focus. 
Button_onBlur_shortDescription=このコンポーネントがフォーカスを失ったときに実行するスクリプトコード。 
#@EN@ Tool Tip
Button_toolTip_displayName=ツールチップ
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
Button_toolTip_shortDescription=HTML 要素の title 属性の値を設定します。指定したテキストは、マウスカーソルがこの HTML 要素上に置かれたときにツールチップとして表示されます。 
#@EN@ Mouse Down Script
Button_onMouseDown_displayName=マウスダウンスクリプト
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
Button_onMouseDown_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを押したときに実行するスクリプトコード。 
#@EN@ Is Primary
Button_primary_displayName=主ボタン
#@EN@ Indicates that the button is the most commonly used button within a group. 
Button_primary_shortDescription=ボタンがグループ内でもっとも一般的に使われるボタンであることを示します。 
#@EN@ Value
Button_value_displayName=値
#@EN@ The current value of this component
Button_value_shortDescription=このコンポーネントの現在の値
#@EN@ Disabled
Button_disabled_displayName=使用不可
#@EN@ Indicates that activation of this component by the user is not currently   permitted
Button_disabled_shortDescription=ユーザーによるこのコンポーネントの起動が、現在許可されていないことを示します
#@EN@ Mouse Out Script
Button_onMouseOut_displayName=マウスアウトスクリプト
#@EN@ Scripting code executed when the user moves the mouse pointer off this component. 
Button_onMouseOut_shortDescription=このコンポーネントから、ユーザーがマウスカーソルを放したときに実行するスクリプトコード。 
#@EN@ Alt Text
Button_alt_displayName=代替テキスト
#@EN@ Alternative textual description of the image rendered by this component
Button_alt_shortDescription=このコンポーネントによって描画される画像を説明する代替テキスト
#@EN@ Mouse In Script
Button_onMouseOver_displayName=マウスインスクリプト
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
Button_onMouseOver_shortDescription=このコンポーネント内に、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ HTML Template
Button_htmlTemplate_displayName=HTML テンプレート
#@EN@ Alternative HTML template to be used by this component. 
Button_htmlTemplate_shortDescription=このコンポーネントで使用される代替 HTML テンプレート。 
#@EN@ Mouse Move Script
Button_onMouseMove_displayName=マウス移動スクリプト
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
Button_onMouseMove_shortDescription=コンポーネント内で、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ No Text Padding
Button_noTextPadding_displayName=テキストパディングなし
#@EN@ Indicates that padding should not be applied to the button text
Button_noTextPadding_shortDescription=ボタンテキストにパディングを適用しないことを示します
#@EN@ Button Text
Button_text_displayName=ボタンテキスト
#@EN@ Text to display on the button
Button_text_shortDescription=ボタンに表示するテキスト
#@EN@ Visible
Button_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
Button_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ Key Down Script
Button_onKeyDown_displayName=キーダウンスクリプト
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
Button_onKeyDown_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押したときに実行するスクリプトコード。 
#@EN@ Tab Index
Button_tabIndex_displayName=タブ索引
#@EN@ Position of this element in the tabbing order of the current document
Button_tabIndex_shortDescription=現在のドキュメントのタブ順でのこの要素の位置
#@EN@ Job Status
JobStatus_displayName=ジョブステータス
#@EN@ The JobStatus component is used to show the number of jobs currently running.    @deprecated See tld docs for more information on how to create a jobStatus  without using the jobStatus component 
JobStatus_shortDescription=JobStatus コンポーネントを使用して、現在実行中のジョブの数を表示できます。@deprecated jobStatus コンポーネントを使用しないで jobStatus を作成する方法の詳細については、TLD のマニュアルを参照してください。 
#@EN@ Double Click Script
JobStatus_onDblClick_displayName=ダブルクリックスクリプト
#@EN@ Specifies the position of the image with respect to its context.  Valid values are: bottom (the default); middle; top; left; right. 
JobStatus_onDblClick_shortDescription=その内容に対して、画像の位置を指定します。有効な値は、「下」(デフォルト)、「中央」、「上」、「左」、「右」です。 
#@EN@ Text Position
JobStatus_textPosition_displayName=テキストの位置
#@EN@ Specifies where the text will be placed relative to the image
JobStatus_textPosition_shortDescription=テキストの配置先を画像に対する相対位置で指定します
#@EN@ Number of Jobs
JobStatus_numJobs_displayName=ジョブ数
#@EN@ The number of currently executing jobs, displayed next to the job label. 
JobStatus_numJobs_shortDescription=現在実行中のジョブの数。ジョブラベルの横に表示されます。 
#@EN@ Column
TableColumn_displayName=列
#@EN@ Component that represents a table column.    The tableColumn component provides a layout mechanism for displaying columns   of data
TableColumn_shortDescription=表列を表すコンポーネント。tableColumn コンポーネントは、データの列を表示するレイアウト機能を提供します
#@EN@ Extra Footer HTML
TableColumn_extraFooterHtml_displayName=追加フッター HTML
#@EN@ Extra HTML code to be appended to the &lt;td&gt; HTML element that   is rendered for the column footer
TableColumn_extraFooterHtml_shortDescription=列フッターに描画される HTML &lt;td&gt; 要素に追加される追加の HTML コード
#@EN@ Extra Header HTML
TableColumn_extraHeaderHtml_displayName=追加ヘッダー HTML
#@EN@ Extra HTML code to be appended to the &lt;th&gt; HTML element that   is rendered for the column header
TableColumn_extraHeaderHtml_shortDescription=列ヘッダーに描画される HTML &lt;th&gt; 要素に追加される追加の HTML コード
#@LC@ ### New message ###
#@EN@ Table Footer Text
TableColumn_tableFooterText_displayName=表のフッターテキスト
#@LC@ ### New message ###
#@EN@ The text to be displayed in the table column footer
TableColumn_tableFooterText_shortDescription=表の列のフッターに表示されるテキスト
#@EN@ Extra Table Footer HTML
TableColumn_extraTableFooterHtml_displayName=追加表フッター HTML
#@EN@ Extra HTML code to be appended to the &lt;td&gt; HTML element that   is rendered for the table column footer
TableColumn_extraTableFooterHtml_shortDescription=表の列フッターに描画される HTML &lt;td&gt; 要素に追加される追加の HTML コード
#@EN@ Spacer Column
TableColumnBase_spacerColumn_displayName=スペーサ列
#@EN@ Use the spacerColumn attribute to use the column as a blank column   to enhance spacing in two or three column tables
TableColumnBase_spacerColumn_shortDescription=spacerColumn 属性を使用して、列を空白列として使用し、2 ないし 3 列以上の表内の間隔を広げることができます
#@EN@ Double Click Script
TableColumnBase_onDblClick_displayName=ダブルクリックスクリプト
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
TableColumnBase_onDblClick_shortDescription=このコンポーネント上でマウスがダブルクリックされたときに実行するスクリプトコード。 
#@EN@ Width
TableColumnBase_width_displayName=幅
#@EN@ Use the width attribute to specify the width of the cells of the   column
TableColumnBase_width_shortDescription=width 属性を使用して、列のセル幅を指定できます
#@EN@ Select Component Id
TableColumnBase_selectId_displayName=選択されたコンポーネント ID
#@EN@ Use the selectId attribute in select columns, which contain   checkboxes or radio buttons for selecting table rows
TableColumnBase_selectId_shortDescription=表行を選択するためのチェックボックスまたはラジオボタンがある選択列で selectId 属性を使用します
#@EN@ Sort Key
TableColumnBase_sort_displayName=ソートキー
#@EN@ Use the sort attribute to specify a FieldKey id or SortCriteria   that defines the criteria to use for sorting the contents of a   TableDataProvider
TableColumnBase_sort_shortDescription=sort 属性を使用して、表データプロバイダの内容のソートに使用する条件を定義するフィールドキー ID またはソート条件を指定できます
#@EN@ Key Press Script
TableColumnBase_onKeyPress_displayName=キー押下スクリプト
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
TableColumnBase_onKeyPress_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押して放したときに実行するスクリプトコード。 
#@EN@ Severity
TableColumnBase_severity_displayName=重要度
#@EN@ Use the severity attribute when including the webuijsf:alarm   component in a column, to match the severity of the alarm
TableColumnBase_severity_shortDescription=列に、アラームの重要度に応じた webuijsf:alarm コンポーネントを含めるときは、severity 属性を使用します
#@EN@ Columns Spanned By the Cell
TableColumnBase_colSpan_displayName=セルがまたがる列数
#@EN@ The COLSPAN attribute of TD specifies the number of columns that are  spanned by the cell
TableColumnBase_colSpan_shortDescription=TD の COLSPAN 属性は、セルがまたがる列数を指定します
#@EN@ Row Header
TableColumnBase_rowHeader_displayName=行ヘッダー
#@EN@ Use the rowHeader attribute to specify that the cells of the   column are acting as row headers
TableColumnBase_rowHeader_shortDescription=rowHeader 属性を使用して、列のセルが行ヘッダーであることを指定できます
#@EN@ Cell Background Color
TableColumnBase_bgColor_displayName=セルの背景色
#@EN@ The BGCOLOR attribute suggests a background color for the cell
TableColumnBase_bgColor_shortDescription=BGCOLOR 属性はセルの背景色を示します
#@EN@ Key Up Script
TableColumnBase_onKeyUp_displayName=Table_onKeyUp_displayName=
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
TableColumnBase_onKeyUp_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを放したときに実行するスクリプトコード。 
#@EN@ Mouse Up Script
TableColumnBase_onMouseUp_displayName=マウスアップスクリプト
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
TableColumnBase_onMouseUp_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを放したときに実行するスクリプトコード。 
#@EN@ CSS Style Class(es)
TableColumnBase_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
TableColumnBase_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Is Descending
TableColumnBase_descending_displayName=降順
#@EN@ Use the descending attribute to specify that the first   user-applied sort is descending
TableColumnBase_descending_shortDescription=descending 属性を使用して、ユーザーが最初に適用するソート順序を降順に指定できます
#@EN@ Alignment Character
TableColumnBase_char_displayName=位置揃え文字
#@EN@ Use the char attribute to specify a character to use for   horizontal alignment in each cell in the row
TableColumnBase_char_shortDescription=char 属性を使用して、行の各セルの水平位置揃えに使用する文字を指定できます
#@EN@ Is Embedded Actions
TableColumnBase_embeddedActions_displayName=埋め込みアクション
#@EN@ Set the embeddedActions attribute to true when the column includes   more than one embedded action
TableColumnBase_embeddedActions_shortDescription=列に 1 つ以上のアクションが埋め込まれている場合は、embeddedActions 属性を True に設定します
#@EN@ Height
TableColumnBase_height_displayName=高さ
#@EN@ The number of pixels for the cell's height
TableColumnBase_height_shortDescription=セルの高さ (ピクセル単位)
#@EN@ Footer Text
TableColumnBase_footerText_displayName=フッターテキスト
#@EN@ The text to be displayed in the column footer. 
TableColumnBase_footerText_shortDescription=列フッターに表示するテキスト。 
#@EN@ Horizontal Alignment
TableColumnBase_align_displayName=水平位置揃え
#@EN@ Use the align attribute to specify the horizontal alignment for   the content of each cell in the column
TableColumnBase_align_shortDescription=align 属性を使用して、列の各セルの内容の水平位置揃えを指定できます
#@EN@ Cells Covered By Header Cell
TableColumnBase_scope_displayName=ヘッダーセルがカバーするセル
#@EN@ Use the scope attribute to specify that the data cells of the   column are also acting as headers for rows or other columns of the table
TableColumnBase_scope_shortDescription=scope 属性を使用して、列のデータセルがその表の行または他の列のヘッダーとしての役割も持っていることを指定できます
#@EN@ CSS Style(s)
TableColumnBase_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
TableColumnBase_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Abbreviation for Header Cell
TableColumnBase_abbr_displayName=ヘッダーセルの省略名
#@EN@ ABBR gives an abbreviated version of the cell's content
TableColumnBase_abbr_shortDescription=ABBR 属性はセルの内容の省略名を表します
#@EN@ Sort Image URL
TableColumnBase_sortImageURL_displayName=ソート画像 URL
#@EN@ Absolute or relative URL to the image used for the sort button that is   displayed in the column header. 
TableColumnBase_sortImageURL_shortDescription=列ヘッダーに表示されるソートボタンに使用する画像の絶対 URL または相対 URL。 
#@EN@ Alignment Character Offset
TableColumnBase_charOff_displayName=位置揃え文字オフセット
#@EN@ Use the charOff attribute to specify the offset of the first   occurrence of the alignment character that is specified with the   char attribute
TableColumnBase_charOff_shortDescription=charOff 属性を使用して、char 属性で指定された位置揃え文字の最初の出現へのオフセットを指定できます
#@EN@ Click Script
TableColumnBase_onClick_displayName=クリックスクリプト
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
TableColumnBase_onClick_shortDescription=このコンポーネント上でマウスがクリックされたときに実行するスクリプトコード。 
#@EN@ Sort Icon
TableColumnBase_sortIcon_displayName=ソートアイコン
#@EN@ The theme identifier to use for the sort button that is displayed in the column   header
TableColumnBase_sortIcon_shortDescription=列ヘッダーに表示するソートボタンに使用するテーマ識別子
#@EN@ Mouse Down Script
TableColumnBase_onMouseDown_displayName=マウスダウンスクリプト
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
TableColumnBase_onMouseDown_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを押したときに実行するスクリプトコード。 
#@EN@ Tool Tip
TableColumnBase_toolTip_displayName=ツールチップ
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
TableColumnBase_toolTip_shortDescription=HTML 要素の title 属性の値を設定します。指定したテキストは、マウスカーソルがこの HTML 要素上に置かれたときにツールチップとして表示されます。 
#@EN@ Horizontal Alignment Key
TableColumnBase_alignKey_displayName=水平位置揃えせキー
#@EN@ Use the alignKey attribute to specify the FieldKey id or FieldKey   to be used as an identifier for a specific data element on which to align the   table cell data in the column
TableColumnBase_alignKey_shortDescription=alignKey 属性を使用して、列内の表セルデータを位置揃え対象にする特定のデータ要素の識別子として使用するフィールドキー ID またはフィールドキーを指定できます
#@EN@ List of Header Cells for Current Cell
TableColumnBase_headers_displayName=現在のセルのヘッダーセルリスト
#@EN@ The HEADERS attribute specifies the header cells that apply to the  TD
TableColumnBase_headers_shortDescription=HEADERS 属性は TD に適用されるヘッダーセルを指定します
#@EN@ Category of Header Cell
TableColumnBase_axis_displayName=ヘッダーセルのカテゴリ
#@EN@ The AXIS attribute provides a method of categorizing cells
TableColumnBase_axis_shortDescription=AXIS 属性は、セルを分類する方法を提供します
#@EN@ Vertical Position
TableColumnBase_valign_displayName=垂直位置揃え
#@EN@ Use the valign attribute to specify the vertical alignment for the   content of each cell in the column
TableColumnBase_valign_shortDescription=valign 属性を使用して、列の各セルの内容の垂直位置揃えを指定できます
#@EN@ Suppress Word Wrap
TableColumnBase_noWrap_displayName=折り返しを抑止
#@EN@ Use the noWrap attribute to disable word wrapping of this column's   cells in visual browsers
TableColumnBase_noWrap_shortDescription=noWrap 属性を使用して、ビジュアルブラウザでのこの列のセルの折り返しを無効にできます
#@EN@ Rows Spanned By the Cell
TableColumnBase_rowSpan_displayName=セルがまたがる行数
#@EN@ The ROWSPAN attribute of TD specifies the number of rows that are  spanned by the cell
TableColumnBase_rowSpan_shortDescription=TD の ROWSPAN 属性は、セルがまたがる行数を指定します
#@EN@ Mouse Out Script
TableColumnBase_onMouseOut_displayName=マウスアウトスクリプト
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
TableColumnBase_onMouseOut_shortDescription=このコンポーネントの外にマウスカーソルが移動したときに実行するスクリプトコード。 
#@EN@ Mouse In Script
TableColumnBase_onMouseOver_displayName=マウスインスクリプト
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
TableColumnBase_onMouseOver_shortDescription=このコンポーネント内に、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ Mouse Move Script
TableColumnBase_onMouseMove_displayName=マウス移動スクリプト
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
TableColumnBase_onMouseMove_shortDescription=コンポーネント内で、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ Empty Cell
TableColumnBase_emptyCell_displayName=空のセル
#@EN@ Use the emptyCell attribute to cause a theme-specific image to be   displayed when the content of a table cell is not applicable or is unexpectedly   empty
TableColumnBase_emptyCell_shortDescription=emptyCell 属性を使用して、表のセルが適用不可か予期しない空の場合に、テーマ固有の画像を表示することができます
#@EN@ Visible
TableColumnBase_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
TableColumnBase_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ Key Down Script
TableColumnBase_onKeyDown_displayName=キーダウンスクリプト
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
TableColumnBase_onKeyDown_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押したときに実行するスクリプトコード。 
#@EN@ header Text
TableColumnBase_headerText_displayName=ヘッダーテキスト
#@EN@ The text to be displayed in the column header. 
TableColumnBase_headerText_shortDescription=列ヘッダーに表示するテキスト。 
#@EN@ Alarm
Alarm_displayName=アラーム
#@EN@ The Alarm component is used to display a theme-specific image to indicate    the condition of an object. 
Alarm_shortDescription=Alarm コンポーネントを使用して、オブジェクトの状態を示すテーマ固有の画像を表示できます。 
#@EN@ Tool Tip
Alarm_toolTip_displayName=ツールチップ
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
Alarm_toolTip_shortDescription=HTML 要素の title 属性の値を設定します。指定したテキストは、マウスカーソルがこの HTML 要素上に置かれたときにツールチップとして表示されます。 
#@EN@ Mouse Down Script
Alarm_onMouseDown_displayName=マウスダウンスクリプト
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
Alarm_onMouseDown_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを押したときに実行するスクリプトコード。 
#@EN@ Value
Alarm_value_displayName=値
#@EN@ The current value of this component
Alarm_value_shortDescription=このコンポーネントの現在の値
#@EN@ Double Click Script
Alarm_onDblClick_displayName=ダブルクリックスクリプト
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
Alarm_onDblClick_shortDescription=このコンポーネント上でマウスがダブルクリックされたときに実行するスクリプトコード。 
#@EN@ Key Press Script
Alarm_onKeyPress_displayName=キー押下スクリプト
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
Alarm_onKeyPress_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押して放したときに実行するスクリプトコード。 
#@EN@ Severity
Alarm_severity_displayName=重要度
#@EN@ Specifies the severity of the alarm
Alarm_severity_shortDescription=アラームの重要度を指定します
#@EN@ Indicators
Alarm_indicators_displayName=インジケータ
#@EN@ A developer define types of Alarm
Alarm_indicators_shortDescription=開発者定義のアラームのタイプ
#@EN@ Mouse Out Script
Alarm_onMouseOut_displayName=マウスアウトスクリプト
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
Alarm_onMouseOut_shortDescription=このコンポーネントの外にマウスカーソルが移動したときに実行するスクリプトコード。 
#@EN@ Rendered Flag
Alarm_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Alarm_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Alt Text
Alarm_alt_displayName=代替テキスト
#@EN@ Alternative textual description of the image rendered by this component
Alarm_alt_shortDescription=このコンポーネントによって描画される画像を説明する代替テキスト
#@EN@ Component Identifier
Alarm_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
Alarm_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Mouse In Script
Alarm_onMouseOver_displayName=マウスインスクリプト
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
Alarm_onMouseOver_shortDescription=このコンポーネント内に、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ HTML Template
Alarm_htmlTemplate_displayName=HTML テンプレート
#@EN@ Alternative HTML template to be used by this component. 
Alarm_htmlTemplate_shortDescription=このコンポーネントで使用される代替 HTML テンプレート。 
#@EN@ Key Up Script
Alarm_onKeyUp_displayName=キーアップスクリプト
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
Alarm_onKeyUp_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを放したときに実行するスクリプトコード。 
#@EN@ Mouse Move Script
Alarm_onMouseMove_displayName=マウス移動スクリプト
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
Alarm_onMouseMove_shortDescription=コンポーネント内で、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ Mouse Up Script
Alarm_onMouseUp_displayName=マウスアップスクリプト
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
Alarm_onMouseUp_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを放したときに実行するスクリプトコード。 
#@EN@ CSS Style Class(es)
Alarm_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Alarm_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Alarm Text
Alarm_text_displayName=アラームテキスト
#@EN@ The text description of the alarm. 
Alarm_text_shortDescription=アラームの説明テキスト。 
#@EN@ Visible
Alarm_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
Alarm_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ CSS Style(s)
Alarm_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Alarm_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Key Down Script
Alarm_onKeyDown_displayName=キーダウンスクリプト
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
Alarm_onKeyDown_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押したときに実行するスクリプトコード。 
#@EN@ Click Script
Alarm_onClick_displayName=クリックスクリプト
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
Alarm_onClick_shortDescription=このコンポーネント上でマウスがクリックされたときに実行するスクリプトコード。 
#@EN@ Text Position
Alarm_textPosition_displayName=テキストの位置
#@EN@ Specifies where the text will be placed relative to the image
Alarm_textPosition_shortDescription=テキストの配置先を画像に対する相対位置で指定します
#@EN@ Menu
Menu_displayName=メニュー
#@EN@ This class represents a Menu component.  The class inherits from the com.sun.webui.jsf.component.WebUIInput  and implements javax.faces.component.ActionSource2.
Menu_shortDescription=このクラスは、Menu コンポーネントを表します。クラスは、com.sun.webui.jsf.component.WebUIInput から継承され、javax.faces.component.ActionSource2 を実装します。
#@EN@ Submit the Page on Change
Menu_submitForm_displayName=変更時にページを送信
#@EN@ When the submitForm attribute is set to true,  the form is immediately submitted when the user changes the  selection in the menu. 
Menu_submitForm_shortDescription=submitForm 属性が True の場合、ユーザーがメニューで選択を変更すると、ただちにフォームが送信されます。 
#@EN@ Mouse Down Script
Menu_onMouseDown_displayName=マウスダウンスクリプト
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
Menu_onMouseDown_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを押したときに実行するスクリプトコード。 
#@EN@ Double Click Script
Menu_onDblClick_displayName=ダブルクリックスクリプト
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
Menu_onDblClick_shortDescription=このコンポーネント上でマウスがダブルクリックされたときに実行するスクリプトコード。 
#@EN@ Key Press Script
Menu_onKeyPress_displayName=キー押下スクリプト
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
Menu_onKeyPress_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押して放したときに実行するスクリプトコード。 
#@EN@ Mouse Out Script
Menu_onMouseOut_displayName=マウスアウトスクリプト
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
Menu_onMouseOut_shortDescription=このコンポーネントの外にマウスカーソルが移動したときに実行するスクリプトコード。 
#@EN@ Rendered Flag
Menu_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Menu_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Component Identifier
Menu_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
Menu_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Mouse In Script
Menu_onMouseOver_displayName=マウスインスクリプト
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
Menu_onMouseOver_shortDescription=このコンポーネント内に、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ HTML Template
Menu_htmlTemplate_displayName=HTML テンプレート
#@EN@ Alternative HTML template to be used by this component. 
Menu_htmlTemplate_shortDescription=このコンポーネントで使用される代替 HTML テンプレート。 
#@EN@ Key Up Script
Menu_onKeyUp_displayName=キーアップスクリプト
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
Menu_onKeyUp_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを放したときに実行するスクリプトコード。 
#@EN@ Mouse Move Script
Menu_onMouseMove_displayName=マウス移動スクリプト
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
Menu_onMouseMove_shortDescription=コンポーネント内で、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ Mouse Up Script
Menu_onMouseUp_displayName=マウスアップスクリプト
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
Menu_onMouseUp_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを放したときに実行するスクリプトコード。 
#@EN@ CSS Style Class(es)
Menu_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this  component is rendered. 
Menu_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Items
Menu_items_displayName=項目
#@EN@ Specifies the items that the web application user can choose  from
Menu_items_shortDescription=Web アプリケーションユーザーが選択可能な項目を指定します
#@EN@ Value Change Script
Menu_onChange_displayName=値変更スクリプト
#@EN@ Scripting code executed when the element value of this component is changed. 
Menu_onChange_shortDescription=このコンポーネントの値が変更されたときに実行するスクリプトコード。 
#@EN@ CSS Style(s)
Menu_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this  component is rendered. 
Menu_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Visible
Menu_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
Menu_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ Key Down Script
Menu_onKeyDown_displayName=キーダウンスクリプト
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
Menu_onKeyDown_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押したときに実行するスクリプトコード。 
#@EN@ Click Script
Menu_onClick_displayName=クリックスクリプト
#@EN@ Scripting code executed when a mouse click  occurs over this component.The Menu element has a function called  getSelectedOption which can be invoked by onClick function handlers  to know which option has been selected
Menu_onClick_shortDescription=このコンポーネント上でマウスがクリックされたときに実行するスクリプトコード。Menu 要素には、getSelectedOption と呼ばれる機能があります。これは、どのオプションが選択されたかを認識するために、onClick 関数のハンドラによって呼び出されます
#@EN@ Immediate
EventSourceImpl_immediate_displayName=即時
#@EN@ The immediate flag. 
EventSourceImpl_immediate_shortDescription=即時フラグ。
#@LC@ ### New message ###
#@EN@ PhaseId
EventSourceImpl_phaseId_displayName=フェーズ ID
#@LC@ ### New message ###
#@EN@ The PhaseId in which events should be broadcast.  The default is PhaseId.INVOKE_APPLICATION or  PhaseId.ANY if isImmediate returns   true 
EventSourceImpl_phaseId_shortDescription=イベントが告知されるフェーズ ID。デフォルトでは、isImmediate が True を返す場合は PhaseId.INVOKE_APPLICATION または PhaseId.ANY です 
#@EN@ Menu Event Listener Expression
EventSourceImpl_eventListenerExpression_displayName=メニューイベントリスナー式
#@EN@ The EventListenerExpression attribute is used to specify a method to handle  an menu event that is triggered when this  component is activated by the user
EventSourceImpl_eventListenerExpression_shortDescription=EventListenerExpression 属性を使用して、このコンポーネントがユーザーによってアクティブにされたときに発生するメニューイベントを処理するメソッドを指定できます
#@EN@ Menu Event Expression
EventSourceImpl_eventExpression_displayName=メニューイベント式
#@EN@ The {@link MethodExpression} that, when invoked, yields a  literal outcome value. 
EventSourceImpl_eventExpression_shortDescription=呼び出し時に、リテラルの結果の値を引き出す {@link MethodExpression}。 
#@EN@ Wizard Step
WizardStep_displayName=ウィザードステップ
#@EN@ The WizardStep component represents a single step in a Wizard component  step sequence
WizardStep_shortDescription=WizardStep コンポーネントは、Wizard コンポーネントシーケンスの 1 つのステップを表します
#@EN@ summary
WizardStep_summary_displayName=サマリー
#@EN@ A brief description of this step, to be used in the numbered  list of steps in the Steps pane. 
WizardStep_summary_shortDescription=このステップの簡単な説明。ステップ区画の番号付きステップリストに使用されます。 
#@EN@ Cancel Script
WizardStep_onCancel_displayName=取消しボタンスクリプト
#@EN@ Scripting code executed when the Cancel button is clicked. 
WizardStep_onCancel_shortDescription=「取消し」ボタンがクリックされたときに実行するスクリプトコード。 
#@EN@ title
WizardStep_title_displayName=タイトル
#@EN@ A descriptive title to be displayed as the Step Title  in the Step Content pane
WizardStep_title_shortDescription=ステップ内容区画にステップタイトルとして表示される記述タイトル
#@EN@ detail
WizardStep_detail_displayName=詳細
#@EN@ The detail attribute supplies the text that is to be  displayed in the Step Instructions area, before the input components  of the Step Content pane
WizardStep_detail_shortDescription=detail 属性を使用して、ステップ内容区画の入力コンポーネントの前に、ステップ説明領域に表示するテキストを指定できます
#@EN@ Finish Script
WizardStep_onFinish_displayName=完了ボタンスクリプト
#@EN@ Scripting code executed when the Finish button is clicked. 
WizardStep_onFinish_shortDescription=「完了」ボタンがクリックされたときに実行するスクリプトコード。 
#@EN@ Next Script
WizardStep_onNext_displayName=次へボタンスクリプト
#@EN@ Scripting code executed when the Next button is clicked. 
WizardStep_onNext_shortDescription=「次へ」ボタンがクリックされたときに実行するスクリプトコード。 
#@EN@ Step Link Script
WizardStep_onStepLink_displayName=ステップリンクスクリプト
#@EN@ Scripting code executed when a Step link is clicked. 
WizardStep_onStepLink_shortDescription=ステップリンクがクリックされたときに実行するスクリプトコード。 
#@EN@ Rendered Flag
WizardStep_rendered_displayName=描画フラグ
#@EN@ Indicates whether the HTML code for the component should be included in the rendered HTML page
WizardStep_rendered_shortDescription=コンポーネントの HTML コードを HTML ページの描画対象に含めるかどうかを示します
#@EN@ Component Identifier
WizardStep_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
WizardStep_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Close Script
WizardStep_onClose_displayName=閉じるボタンスクリプト
#@EN@ Scripting code executed when the Close button is clicked. 
WizardStep_onClose_shortDescription=「閉じる」ボタンがクリックされたときに実行するスクリプトコード。 
#@EN@ results
WizardStep_results_displayName=結果
#@EN@ Set the results attribute to true when the wizard step  represents the View Results page
WizardStep_results_shortDescription=results 属性を True に設定すると、ウィザードステップは結果ページを表します
#@EN@ help
WizardStep_help_displayName=ヘルプ
#@EN@ Descriptive text that provides detailed help to the user  for this step
WizardStep_help_shortDescription=このステップの詳細なヘルプをユーザーに提供する説明テキスト
#@EN@ Help Tab Script
WizardStep_onHelpTab_displayName=ヘルプタブスクリプト
#@EN@ Scripting code executed when the Help tab is clicked. 
WizardStep_onHelpTab_shortDescription=「ヘルプ」タブがクリックされたときに実行するスクリプトコード。 
#@EN@ finish
WizardStep_finish_displayName=完了
#@EN@ Set the finish attribute to true when the wizard step  represents the Finish step
WizardStep_finish_shortDescription=finish 属性を True に設定すると、ウィザードステップは完了ステップを表します
#@EN@ Wizard Event Listener
WizardStep_eventListener_displayName=ウィザードイベントリスナー
#@EN@ The eventListener attribute is used to specify an  object to handle an event that is triggered when a user activates a   component in the step.  The eventListener attribute value must be a   JavaServer Faces EL expression that resolves to an instance  of com.sun.webui.jsf.event.WizardEventListener.    The return value of the wizard component's call to the  event listener's handleEvent() method controls the   processing of the current step, and determines whether the next step   or a previous step, etc
WizardStep_eventListener_shortDescription=eventListener 属性を使用して、ユーザーがステップ内でコンポーネントをアクティブにしたときに発生するイベントを処理するオブジェクトを指定できます。この属性の値は、com.sun.webui.jsf.event.WizardEventListener のインスタンスを解釈処理する JavaServer Faces の EL 式である必要があります。イベントリスナーの handleEvent() に対するウィザードコンポーネントの呼び出しの戻り値によって、現在実行されているステップが制御され、次のステップに進むか、前のステップに戻るかどうかなどが決定されます。
#@EN@ Steps Tab Script
WizardStep_onStepsTab_displayName=ステップタブスクリプト
#@EN@ Scripting code executed when the Steps tab is clicked. 
WizardStep_onStepsTab_shortDescription=「ステップ」タブがクリックされたときに実行するスクリプトコード。 
#@EN@ Previous Script
WizardStep_onPrevious_displayName=戻るボタンスクリプト
#@EN@ Scripting code executed when the Next button is clicked. 
WizardStep_onPrevious_shortDescription=「次へ」ボタンがクリックされたときに実行するスクリプトコード。 
#@EN@ Page Alert
PageAlert_displayName=ページ警告
#@EN@ The PageAlert component displays a full page alert. 
PageAlert_shortDescription=PageAlert コンポーネントはページ全体の警告を表示します。 
#@EN@ Summary Message
PageAlert_summary_displayName=概要メッセージ
#@EN@ Deprecated.Use the title attribute to display the message summary in the page title. 
PageAlert_summary_shortDescription=非推奨。title 属性を使用して、ページタイトルにメッセージ概要を表示できます 
#@EN@ CSS Style Class(es)
PageAlert_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
PageAlert_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Alert Type
PageAlert_type_displayName=警告タイプ
#@EN@ The type or category of alert
PageAlert_type_shortDescription=警告のタイプまたはカテゴリ
#@EN@ Title
PageAlert_title_displayName=タイトル
#@EN@ The text to display as the page title 
PageAlert_title_shortDescription=ページタイトルとして表示するテキスト 
#@EN@ Detail Message
PageAlert_detail_displayName=詳細メッセージ
#@EN@ Detailed message text for the alert
PageAlert_detail_shortDescription=警告の詳細メッセージテキスト
#@EN@ Visible
PageAlert_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
PageAlert_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ CSS Style(s)
PageAlert_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
PageAlert_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Rendered Flag
PageAlert_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
PageAlert_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Escape
PageAlert_escape_displayName=エスケープ
#@EN@ Flag indicating that the message text should be escaped so that it is   not interpreted by the browser. 
PageAlert_escape_shortDescription=メッセージテキストがブラウザで解釈されないようエスケープする必要があることを示すフラグ。 
#@EN@ Alt Text
PageAlert_alt_displayName=代替テキスト
#@EN@ Alternative textual description of the image rendered by this component
PageAlert_alt_shortDescription=このコンポーネントによって描画される画像を説明する代替テキスト
#@EN@ Tab Index
PageAlert_tabIndex_displayName=タブ索引
#@EN@ Position of this element in the tabbing order of the current document
PageAlert_tabIndex_shortDescription=現在のドキュメントのタブ順でのこの要素の位置
#@EN@ Component Identifier
PageAlert_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
PageAlert_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Editable Field
EditableField_displayName=編集可能なフィールド
#@EN@ The EditableField component renders input HTML element that is initially  rendered as readOnly field and becomes editable on certain client events  ( dblclick, space key)    EditableField Component class represents text input element, and it reuses  much of the TextField component functionality, as well as its renderers. 
EditableField_shortDescription=EditableField コンポーネントは、HTML 入力要素を描画します。HTML 入力要素は、はじめに readOnly フィールドとして描画され、ダブルクリック、スペースキー押下などの特定のイベントの際に編集可能になります。EditableField コンポーネントクラスはテキスト入力要素を表し、そのレンダラと同様に、TextField コンポーネント機能の多くを再利用します。
#@EN@ AutoValidate
EditableField_autoValidate_displayName=AutoValidate
#@EN@ Hide autoValidate.  EditableField provides submit logic on onBlur event,  and having autoValidate as well would be unnecessary  
EditableField_autoValidate_shortDescription=autoValidate を非表示にします。EditableField は、onBlur イベントで送信ロジックを提供し、autoValidate を不要にします 
#@EN@ autoSave
EditableField_autoSave_displayName=autoSave
#@EN@ Attribute indicating to turn on/off the autoSave functionality of the EditableField.  When on, an Ajax submit event will be generated every time component looses   focus with modified data
EditableField_autoSave_shortDescription=EditableField の autoSave 機能のオンまたはオフを示す属性。オンの場合は、変更されたデータがあるコンポーネントでフォーカスが失われるたびに AJAX 送信イベントが生成されます
#@EN@ Tab
Tab_displayName=タブ
#@EN@ The Tab component represents one tab in a tab set
Tab_shortDescription=Tab コンポーネントはタブセット内の 1 つのタブを表します
#@EN@ Value
Tab_value_displayName=値
#@EN@ The current value of this component
Tab_value_shortDescription=このコンポーネントの現在の値
#@EN@ text
Tab_text_displayName=テキスト
#@EN@ The display label for this tab
Tab_text_shortDescription=このタブの表示ラベル
#@EN@ Double Click Script
Tab_onDblClick_displayName=ダブルクリックスクリプト
#@EN@ Scripting code executed when a mouse double click occurs over this  component. 
Tab_onDblClick_shortDescription=このコンポーネント上でマウスがダブルクリックされたときに実行するスクリプトコード。 
#@EN@ selectedChildId
Tab_selectedChildId_displayName=選択されている子の ID
#@EN@ The id of this tab's currently selected Tab child or null if one is not  selected. 
Tab_selectedChildId_shortDescription=このタブで現在されているタブの子の ID。選択されていない場合は null。 
#@EN@ Notification Phrase
NotificationPhrase_displayName=通知フレーズ
#@EN@ The NotificationPhrase component is used to display a message in the   masthead.    @deprecated See tld docs for more information on how to create a   notificationPhrase without using the notificationPhrase component. 
NotificationPhrase_shortDescription=NotificationPhrase コンポーネントを使用して、マストヘッドにメッセージを表示できます。@deprecated notificationPhrase コンポーネントを使用しないで notificationPhrase を作成する方法の詳細については、TLD のマニュアルを参照してください。 
#@EN@ Double Click Script
NotificationPhrase_onDblClick_displayName=ダブルクリックスクリプト
#@EN@ Scripting code executed when a mouse double click occurs over this component. 
NotificationPhrase_onDblClick_shortDescription=このコンポーネント上でマウスがダブルクリックされたときに実行するスクリプトコード。 
#@EN@ Inline Help
HelpInline_displayName=インラインヘルプ
#@EN@ The HelpInline component is used to display inline help at the page and field  level. 
HelpInline_shortDescription=HelpInline コンポーネントを使用して、ページおよびフィールドレベルのインラインヘルプを表示できます。 
#@EN@ Value
HelpInline_value_displayName=値
#@EN@ The current value of this component
HelpInline_value_shortDescription=このコンポーネントの現在の値
#@EN@ CSS Style Class(es)
HelpInline_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
HelpInline_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ text
HelpInline_text_displayName=テキスト
#@EN@ The inline help text to display. 
HelpInline_text_shortDescription=表示するインラインヘルプテキスト。 
#@EN@ Converter
HelpInline_converter_displayName=コンバータ
#@EN@ The converter attribute is used to specify a method to translate native  property values to String and back for this component
HelpInline_converter_shortDescription=converter 属性を使用して、このコンポーネントの native プロパティー値を文字列に変換し、元に戻すメソッドを指定できます
#@EN@ Type of Help
HelpInline_type_displayName=ヘルプのタイプ
#@EN@ The type of inline help to display
HelpInline_type_shortDescription=表示するインラインヘルプのタイプ。
#@EN@ Visible
HelpInline_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
HelpInline_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ CSS Style(s)
HelpInline_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
HelpInline_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Rendered Flag
HelpInline_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
HelpInline_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Component Identifier
HelpInline_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
HelpInline_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Markup
Markup_displayName=マークアップ
#@EN@ The Markup component allows HTML elements to be inserted into the JSP page   where HTML is not permitted inside a JSF tag. 
Markup_shortDescription=Markup コンポーネントを使用して、JSF タグ内に HTML を使用できない JSP ページに HTML 要素を挿入できます。 
#@EN@ CSS Style Class(es)
Markup_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Markup_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Single Tag
Markup_singleton_displayName=単独タグ
#@EN@ Flag indicating that tag is a singleton tag and that it should end with  a trailing / 
Markup_singleton_shortDescription=タグが単独タグであり、末尾に「/」を付ける必要があることを示すフラグ 
#@EN@ Extra Attributes
Markup_extraAttributes_displayName=追加属性
#@EN@ Add the rest of the attribute name=&quot;value&quot; type pairs inside this   attribute
Markup_extraAttributes_shortDescription=この属性の内部に、ほかの attribute name=&quot;value&quot; のペアを追加します
#@EN@ Tag Name
Markup_tag_displayName=タグ名
#@EN@ Name of the HTML element to render. 
Markup_tag_shortDescription=描画する HTML 要素の名前。 
#@EN@ CSS Style(s)
Markup_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Markup_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Rendered Flag
Markup_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Markup_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Component Identifier
Markup_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
Markup_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Common Tasks Section
CommonTasksSection_displayName=共通タスクセクション
#@EN@ The CommonTasksSection component is used to present a number  of tasks that might commonly be performed by the user. 
CommonTasksSection_shortDescription=CommonTasksSection コンポーネントを使用して、ユーザーがよく実行する可能性がある多くのタスクを表すことができます。 
#@EN@ CSS Style Class(es)
CommonTasksSection_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
CommonTasksSection_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Common Tasks section Text
CommonTasksSection_title_displayName=共通タスクセクションのテキスト
#@EN@ The title text to be displayed for the common tasks section. 
CommonTasksSection_title_shortDescription=共通タスクセクションに表示するタイトルテキスト。 
#@EN@ Visible
CommonTasksSection_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
CommonTasksSection_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ CSS Style(s)
CommonTasksSection_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
CommonTasksSection_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Rendered Flag
CommonTasksSection_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
CommonTasksSection_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ columns
CommonTasksSection_columns_displayName=列
#@EN@ Specify the number of task columns to display in the common tasks section.   
CommonTasksSection_columns_shortDescription=共通タスクセクションに表示するタスク列数を指定します。   
#@EN@ Component Identifier
CommonTasksSection_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
CommonTasksSection_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Inline help to be displayed
CommonTasksSection_helpText_displayName=表示するインラインヘルプ
#@EN@ The help text to be displayed for the common tasks section. 
CommonTasksSection_helpText_shortDescription=共通タスクセクションに表示するヘルプテキスト。 
#@EN@ Label
Label_displayName=ラベル
#@EN@ The Label component displays a label for a component and  implements methods to aid a Label renderer to   render error and required indicators  based on the state of the labeled component.    A distinction is made between the component that is identified as the  target of the for attribute and the component that is  used to determine the status of the indicators
Label_shortDescription=ラベルコンポーネントは、コンポーネントのラベルを表示し、ラベル付けされたコンポーネントの状態に基づいてエラーインジケータおよび必要なインジケータを描画するためにラベルレンダラを補助するメソッドを実装します。for 属性のターゲットとして識別されるコンポーネントとインジケータの状態を決定するために使用されるコンポーネントが区別されます。
#@EN@ Tool Tip
Label_toolTip_displayName=ツールチップ
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
Label_toolTip_shortDescription=HTML 要素の title 属性の値を設定します。指定したテキストは、マウスカーソルがこの HTML 要素上に置かれたときにツールチップとして表示されます。 
#@EN@ Mouse Down Script
Label_onMouseDown_displayName=マウスダウンスクリプト
#@EN@ Scripting code executed when the user presses a mouse button   while the mouse pointer is on the component. 
Label_onMouseDown_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを押したときに実行するスクリプトコード。 
#@EN@ Value
Label_value_displayName=値
#@EN@ The current value of this component
Label_value_shortDescription=このコンポーネントの現在の値
#@EN@ Hide the Required and Invalid icons
Label_hideIndicators_displayName=必須アイコンと無効なアイコンを非表示
#@EN@ Use the hideIndicators attribute to prevent display of the  required and invalid icons with the label
Label_hideIndicators_shortDescription=hideIndicators 属性は、ラベルを持つ必須アイコンと無効なアイコンの表示を禁止します
#@EN@ Mouse Out Script
Label_onMouseOut_displayName=マウスアウトスクリプト
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
Label_onMouseOut_shortDescription=このコンポーネントの外にマウスカーソルが移動したときに実行するスクリプトコード。 
#@EN@ Required Field Indicator
Label_requiredIndicator_displayName=必須フィールドインジケータ
#@EN@ Flag indicating that the labeled component should be marked as  required
Label_requiredIndicator_shortDescription=ラベル付きコンポーネントに必須のマークを付けることを示すフラグ
#@EN@ indicatorComponent
Label_indicatorComponent_displayName=indicatorComponent
#@EN@ The component instance to be used to determine the status of the  required and error indicators. 
Label_indicatorComponent_shortDescription=必要なインジケータおよびエラーインジケータの状態を決定するために使用されるコンポーネントのインスタンス。 
#@EN@ Mouse In Script
Label_onMouseOver_displayName=マウスインスクリプト
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
Label_onMouseOver_shortDescription=このコンポーネント内に、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ HTML Template
Label_htmlTemplate_displayName=HTML テンプレート
#@EN@ Alternative HTML template to be used by this component
Label_htmlTemplate_shortDescription=このコンポーネントで使用される代替 HTML テンプレート
#@EN@ Mouse Move Script
Label_onMouseMove_displayName=マウス移動スクリプト
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
Label_onMouseMove_shortDescription=コンポーネント内で、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ Mouse Up Script
Label_onMouseUp_displayName=マウスアップスクリプト
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
Label_onMouseUp_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを放したときに実行するスクリプトコード。 
#@EN@ CSS Style Class(es)
Label_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Label_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Label Text
Label_text_displayName=ラベルテキスト
#@EN@ The label text to be displayed for this label
Label_text_shortDescription=このラベルに表示するラベルテキスト
#@EN@ Visible
Label_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
Label_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ CSS Style(s)
Label_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Label_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Style Level
Label_labelLevel_displayName=スタイルレベル
#@EN@ Style level for this label, where lower values typically specify  progressively larger font sizes, and/or bolder font weights.  Valid values are 1, 2, and 3
Label_labelLevel_shortDescription=このラベルのスタイルレベル。通常、値が小さいほど、フォントサイズおよび/またはフォントの太さが大きくなります。有効な値は「1」、「2」および「3」です
#@EN@ Click Script
Label_onClick_displayName=クリックスクリプト
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
Label_onClick_shortDescription=このコンポーネント上でマウスがクリックされたときに実行するスクリプトコード。 
#@EN@ Input Component
Label_for_displayName=入力コンポーネント
#@EN@ Use this attribute to specify the labeled component
Label_for_shortDescription=この属性を使用して、ラベル付きコンポーネントを指定します
#@EN@ Time
Time_displayName=時間
#@EN@ This component is for internal use only 
Time_shortDescription=このコンポーネントは内部でのみ使用されます 
#@EN@ Time Zone
Time_timeZone_displayName=タイムゾーン
#@EN@ Time Zone
Time_timeZone_shortDescription=タイムゾーン
#@EN@ CSS Style Class(es)
Time_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS Style Class(es)
Time_styleClass_shortDescription=CSS スタイルクラス
#@EN@ Disabled
Time_disabled_displayName=使用不可
#@EN@ Disabled
Time_disabled_shortDescription=使用不可
#@EN@ Visible
Time_visible_displayName=表示
#@EN@ Visible
Time_visible_shortDescription=表示
#@EN@ CSS Style(s)
Time_style_displayName=CSS スタイル
#@EN@ CSS Style(s)
Time_style_shortDescription=CSS スタイル
#@EN@ Read-only
Time_readOnly_displayName=読み取り専用
#@EN@ Read-only
Time_readOnly_shortDescription=読み取り専用
#@EN@ Tab Index
Time_tabIndex_displayName=タブ索引
#@EN@ Tab Index
Time_tabIndex_shortDescription=タブ索引
#@EN@ Calendar
Calendar_displayName=カレンダ
#@EN@ The Calendar component is used to allow a user to select a date. 
Calendar_shortDescription=Calendar コンポーネントを使用すると、ユーザーが日付を選択できます。 
#@EN@ Date Format Pattern
Calendar_dateFormatPattern_displayName=日付の書式パターン
#@EN@ The date format pattern to use (e.g., yyyy-MM-dd).
Calendar_dateFormatPattern_shortDescription=使用する日付の書式パターン (yyyy-MM-dd など)。
#@EN@ Time Zone
Calendar_timeZone_displayName=タイムゾーン
#@EN@ The java.util.TimeZone used with this  component
Calendar_timeZone_shortDescription=このコンポーネントで使用する java.util.TimeZone
#@EN@ Maximum Length
Calendar_maxLength_displayName=最大長
#@EN@ The maximum number of characters that can be entered for this field. 
Calendar_maxLength_shortDescription=このフィールドに入力可能な最大文字数。 
#@EN@ Last selectable date
Calendar_maxDate_displayName=選択可能な最後の日付
#@EN@ The last selectable date.
Calendar_maxDate_shortDescription=選択可能な最後の日付。
#@EN@ Text
Calendar_text_displayName=テキスト
#@EN@ Literal value to be rendered in this input field.  If this property is specified by a value binding  expression, the corresponding value will be updated  if validation succeeds. 
Calendar_text_shortDescription=この入力フィールドに描画されるリテラル値。このプロパティーが値バインド式によって指定される場合、妥当性検査が成功すると対応する値が更新されます。 
#@EN@ Trim
Calendar_trim_displayName=トリム
#@EN@ Flag indicating that any leading and trailing blanks will be  trimmed prior to conversion to the destination data type.  Default value is true. 
Calendar_trim_shortDescription=対象のデータタイプに変換する前に、前後の余分な空白をすべて削除することを示すフラグ。デフォルト値は True です。 
#@EN@ Required
Calendar_required_displayName=必須
#@EN@ Flag indicating that an input value for this field is mandatory, and   failure to provide one will trigger a validation error. 
Calendar_required_shortDescription=このフィールドへの値の入力を必須にすることを示すフラグで、入力が失敗すると妥当性検査エラーを発生させます。 
#@EN@ Selected Date
Calendar_selectedDate_displayName=選択された日付
#@EN@ The date currently selected.
Calendar_selectedDate_shortDescription=現在選択されている日付。
#@EN@ Date Format Pattern Help
Calendar_dateFormatPatternHelp_displayName=日付の書式パターンのヘルプ
#@EN@ A message below the textfield for the date, indicating the  string format to use when entering a date as text into the  textfield.      The component internally relies on an instance of  java.text.SimpleDateFormat to produce the hint
Calendar_dateFormatPatternHelp_shortDescription=日付のテキストフィールドの下に表示されるメッセージ。テキストフィールドに日付をテキストとして入力するときに使用する文字列書式を示します。このコンポーネントは内部的に java.text.SimpleDateFormat のインスタンスによってヒントを生成します
#@EN@ First selectable date
Calendar_minDate_displayName=選択可能な最初の日付
#@EN@ The first selectable date.
Calendar_minDate_shortDescription=選択可能な最初の日付。
#@EN@ Tab Set
TabSet_displayName=タブセット
#@EN@ A set of one or more tabs
TabSet_shortDescription=1 つ以上のタブのセット
#@EN@ Value
TabSet_value_displayName=値
#@EN@ The current value of this component. 
TabSet_value_shortDescription=このコンポーネントの現在の値。 
#@EN@ CSS Style Class(es)
TabSet_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this  component is rendered. 
TabSet_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Selected
TabSet_selected_displayName=選択
#@EN@ The id of the selected tab. 
TabSet_selected_shortDescription=選択されたタブの ID。 
#@EN@ Converter
TabSet_converter_displayName=コンバータ
#@EN@ The converter attribute is used to specify a method to translate native  property values to String and back for this component
TabSet_converter_shortDescription=converter 属性を使用して、このコンポーネントの native プロパティー値を文字列に変換し、元に戻すメソッドを指定できます
#@EN@ Required
TabSet_required_displayName=必須
#@EN@ Flag indicating that an input value for this field is mandatory, and   failure to provide one will trigger a validation error. 
TabSet_required_shortDescription=このフィールドへの値の入力を必須にすることを示すフラグで、入力が失敗すると妥当性検査エラーを発生させます。 
#@EN@ Action Listener Expression
TabSet_actionListenerExpression_displayName=アクションリスナー式
#@EN@ Set the method expression that identifies a method that handles  the action event fired when one of this tab set's tabs is used to submit  the page
TabSet_actionListenerExpression_shortDescription=このタブセットのタブの 1 つがページの送信に使用されたときに発生するアクションイベントを処理するメソッドを特定するメソッド式を設定します
#@EN@ Validator Expression
TabSet_validatorExpression_displayName=バリデータ式
#@EN@ The validator attribute is used to specify a method in a backing bean to  validate input to the component
TabSet_validatorExpression_shortDescription=validator 属性を使用して、コンポーネントへの入力を検査するバッキング Bean 内のメソッドを指定できます
#@EN@ Lightweight Tab Set
TabSet_lite_displayName=軽量タブセット
#@EN@ Returns true if the tabs should render in a visually lighter style, with reduced  shading and bolding
TabSet_lite_shortDescription=陰影や太字を減らすことで視覚的に軽いスタイルでタブを描画する場合は True を返します
#@EN@ Visible
TabSet_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
TabSet_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ CSS Style(s)
TabSet_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this  component is rendered. 
TabSet_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Mini
TabSet_mini_displayName=小型
#@EN@ Set this attribute to true in a first level tab set, to create tabs that  have the smaller &quot;mini&quot; tab style
TabSet_mini_shortDescription=第 1 レベルのタブセットでこの属性を True に設定すると、小型のスタイルでタブを作成できます
#@EN@ Last Selected Child Saved
TabSet_lastSelectedChildSaved_displayName=最後に選択された子の保存
#@EN@ Returns true if the tabs in this tab set should remember  which of their tab children was last selected
TabSet_lastSelectedChildSaved_shortDescription=このタブセット内のタブが、最後に選択された子タブを記憶する場合は、True を返します
#@EN@ Alert
Alert_displayName=警告
#@EN@ The Alert component is used to render an inline alert message. 
Alert_shortDescription=Alert コンポーネントを使用して、インライン警告メッセージを描画できます。 
#@EN@ Summary Message
Alert_summary_displayName=概要メッセージ
#@EN@ Summary message text for the alert
Alert_summary_shortDescription=警告用の概要メッセージテキスト
#@EN@ Value
Alert_value_displayName=値
#@EN@ The current value of this component
Alert_value_shortDescription=このコンポーネントの現在の値
#@EN@ Converter
Alert_converter_displayName=コンバータ
#@EN@ The converter attribute is used to specify a method to translate native  property values to String and back for this component
Alert_converter_shortDescription=converter 属性を使用して、このコンポーネントの native プロパティー値を文字列に変換し、元に戻すメソッドを指定できます
#@EN@ Link Action Method Expression
Alert_linkActionExpression_displayName=リンクアクションメソッド式
#@EN@ The linkActionExpression attribute is used to specify the action to take when the   embedded hyperlink component is activated by the user
Alert_linkActionExpression_shortDescription=linkActionExpression 属性を使用して、埋め込みハイパーリンクコンポーネントがユーザーによってアクティブにされたときに実行するアクションを指定できます
#@EN@ Link Tooltip
Alert_linkToolTip_displayName=リンクツールチップ
#@EN@ Sets the value of the title attribute for the HTML element
Alert_linkToolTip_shortDescription=HTML 要素の title 属性の値を設定します
#@EN@ Alert Type
Alert_type_displayName=警告タイプ
#@EN@ The type or category of alert
Alert_type_shortDescription=警告のタイプまたはカテゴリ
#@EN@ Detail Message
Alert_detail_displayName=詳細メッセージ
#@EN@ Optional detailed message text for the alert
Alert_detail_shortDescription=警告の詳細メッセージテキスト (省略可能)
#@EN@ Indicators
Alert_indicators_displayName=インジケータ
#@EN@ A developer define types of Alert
Alert_indicators_shortDescription=開発者定義の警告のタイプ
#@EN@ Link URL
Alert_linkURL_displayName=リンク URL
#@EN@ Absolute, relative, or context relative (starting with &quot;/&quot;) URL to the   resource to navigate to when the link that is specified with linkText is selected. 
Alert_linkURL_shortDescription=linkText で指定されたリンクが選択されたときのナビゲート先となるリソースへの絶対 URL、相対 URL、またはコンテキスト相対 (&quot;/&quot; から始まる) URL。 
#@EN@ Alt Text
Alert_alt_displayName=代替テキスト
#@EN@ Alternative textual description of the image rendered by this component
Alert_alt_shortDescription=このコンポーネントによって描画される画像を説明する代替テキスト
#@EN@ HTML Template
Alert_htmlTemplate_displayName=HTML テンプレート
#@EN@ Alternative HTML template to be used by this component. 
Alert_htmlTemplate_shortDescription=このコンポーネントで使用される代替 HTML テンプレート。 
#@EN@ Link Target
Alert_linkTarget_displayName=リンクターゲット
#@EN@ The window (target) in which to load the link that is specified with linkText. 
Alert_linkTarget_shortDescription=linkText で指定されたリンクを読み込むウィンドウ (ターゲット)。 
#@EN@ CSS Style Class(es)
Alert_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Alert_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Visible
Alert_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
Alert_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ CSS Style(s)
Alert_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Alert_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Link Text
Alert_linkText_displayName=リンクテキスト
#@EN@ The text for an optional link that is appended to the detail message. 
Alert_linkText_shortDescription=詳細メッセージに追加される任意のリンクのテキスト。 
#@EN@ Tab Index
Alert_tabIndex_displayName=タブ索引
#@EN@ Position of this element in the tabbing order of the current document
Alert_tabIndex_shortDescription=現在のドキュメントのタブ順でのこの要素の位置
#@EN@ Common Tasks Group
CommonTasksGroup_displayName=共通タスクグループ
#@EN@ The CommonTasksGroup component is used to group related CommonTasks  in a CommonTasksSection component. 
CommonTasksGroup_shortDescription=CommonTasksGroup コンポーネントを使用して、CommonTasks コンポーネント内の関連する共通タスクをグループにまとめることができます。 
#@EN@ CSS Style Class(es)
CommonTasksGroup_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
CommonTasksGroup_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Common Tasks Group Text
CommonTasksGroup_title_displayName=共通タスクグループのテキスト
#@EN@ The title text to be displayed for the common tasks group. 
CommonTasksGroup_title_shortDescription=共通タスクグループに表示するタイトルテキスト。 
#@EN@ Visible
CommonTasksGroup_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
CommonTasksGroup_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ CSS Style(s)
CommonTasksGroup_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
CommonTasksGroup_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Rendered Flag
CommonTasksGroup_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
CommonTasksGroup_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Component Identifier
CommonTasksGroup_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
CommonTasksGroup_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Body
Body_displayName=本文
#@EN@ The Body component is used to contain the other components of the page. 
Body_shortDescription=Body コンポーネントを使用して、ページのほかのコンポーネントを含めます。 
#@EN@ Mouse Down Script
Body_onMouseDown_displayName=マウスダウンスクリプト
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
Body_onMouseDown_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを押したときに実行するスクリプトコード。 
#@EN@ Image URL
Body_imageURL_displayName=画像 URL
#@EN@ The path to an image to be used as a background for the page
Body_imageURL_shortDescription=ページの背景画像として使用する画像へのパス
#@EN@ Double Click Script
Body_onDblClick_displayName=ダブルクリックスクリプト
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
Body_onDblClick_shortDescription=このコンポーネント上でマウスがダブルクリックされたときに実行するスクリプトコード。 
#@EN@ Onload Script
Body_onLoad_displayName=ロードスクリプト
#@EN@ Scripting code executed when when this page is loaded in a browser. 
Body_onLoad_shortDescription=このページがブラウザに読み込まれたときに実行するスクリプトコード。 
#@EN@ Key Press Script
Body_onKeyPress_displayName=キー押下スクリプト
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
Body_onKeyPress_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押して放したときに実行するスクリプトコード。 
#@EN@ Unload Script
Body_onUnload_displayName=読み込み解除スクリプト
#@EN@ Scripting code executed when this page is unloaded from a browser as a user exits the page. 
Body_onUnload_shortDescription=ユーザーがページを終了することで、このページがブラウザから読み込み解除されたときに実行するスクリプトコード。 
#@EN@ Focus Script
Body_onFocus_displayName=フォーカススクリプト
#@EN@ Scripting code executed when this component  receives focus
Body_onFocus_shortDescription=このコンポーネントがフォーカスを得たときに実行するスクリプトコード
#@EN@ Mouse Out Script
Body_onMouseOut_displayName=マウスアウトスクリプト
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
Body_onMouseOut_shortDescription=このコンポーネントの外にマウスカーソルが移動したときに実行するスクリプトコード。 
#@EN@ Rendered Flag
Body_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Body_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Preserve Focus
Body_preserveFocus_displayName=フォーカスを保持
#@EN@ Use the preserveFocus attribute to indicate whether the last   element to have the focus, receives the focus the  next time the page is rendered
Body_preserveFocus_shortDescription=preserveFocus 属性を使用して、最後にフォーカスを持つ要素が、次にそのページが描画されたときにフォーカスを受け取るかどうかを指定できます。
#@EN@ Component to receive focus
Body_focus_displayName=フォーカスを受け取るコンポーネント
#@EN@ Specify the ID of the component that should receive   focus when the page is loaded
Body_focus_shortDescription=ページが読み込まれたときにフォーカスを受け取るコンポーネントの ID を指定します
#@EN@ Component Identifier
Body_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
Body_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Mouse In Script
Body_onMouseOver_displayName=マウスインスクリプト
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
Body_onMouseOver_shortDescription=このコンポーネント内に、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ Key Up Script
Body_onKeyUp_displayName=キーアップスクリプト
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
Body_onKeyUp_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを放したときに実行するスクリプトコード。 
#@EN@ Mouse Move Script
Body_onMouseMove_displayName=マウス移動スクリプト
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
Body_onMouseMove_shortDescription=コンポーネント内で、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ Mouse Up Script
Body_onMouseUp_displayName=マウスアップスクリプト
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
Body_onMouseUp_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを放したときに実行するスクリプトコード。 
#@EN@ CSS Style Class(es)
Body_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Body_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@LC@ ### New message ###
#@EN@ Preserve Scroll Position
Body_preserveScroll_displayName=スクロール位置の保持
#@LC@ ### New message ###
#@EN@ Use the preserveScroll attribute to indicate whether the page  should remember the scroll position when navigating to and from  the page
Body_preserveScroll_shortDescription=preserveScroll 属性は、ページへ、またはページからナビゲートしたときに、スクロール位置を保持するかどうかを示すために使用します
#@EN@ Visible
Body_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
Body_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ CSS Style(s)
Body_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Body_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Key Down Script
Body_onKeyDown_displayName=キーダウンスクリプト
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
Body_onKeyDown_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押したときに実行するスクリプトコード。 
#@EN@ Click Script
Body_onClick_displayName=クリックスクリプト
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
Body_onClick_shortDescription=このコンポーネント上でマウスがクリックされたときに実行するスクリプトコード。 
#@EN@ Blur Script
Body_onBlur_displayName=フォーカスオフスクリプト
#@EN@ Scripting code executed when this element loses focus. 
Body_onBlur_shortDescription=このコンポーネントがフォーカスを失ったときに実行するスクリプトコード。 
#@EN@ Breadcrumbs
Breadcrumbs_displayName=パンくずリスト
#@EN@ The Breadcrumbs component is used to display a list of hyperlinks, as an aid to  navigation.   Breadcrumbs show the user's location within an application, and the physical   or logical path to the current page
Breadcrumbs_shortDescription=Breadcrumbs コンポーネントを使用して、ナビゲーションの補助としてハイパーリンクの一覧を表示できます。パンくずリストは、アプリケーション内でのユーザーの位置および現在のページの物理パスまたは論理パスを表示します
#@EN@ CSS Style Class(es)
Breadcrumbs_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Breadcrumbs_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Pages
Breadcrumbs_pages_displayName=ページ
#@EN@ An array of zero or more Hyperlink components that constitute the current  path
Breadcrumbs_pages_shortDescription=現在のパスを構成する 0 個以上のハイパーリンクコンポーネントの配列
#@EN@ Immediate
Breadcrumbs_immediate_displayName=即時
#@EN@ Indicates whether actions should be handled immediately when generated by   hyperlinks that are part of this component
Breadcrumbs_immediate_shortDescription=このコンポーネントに含まれるハイパーリンクによってアクションが生成された場合にそのアクションをただちに処理するかどうかを指定します
#@EN@ Visible
Breadcrumbs_visible_displayName=表示
#@EN@ Indicates whether the component and its child components should be viewable   by the user in the rendered HTML page
Breadcrumbs_visible_shortDescription=コンポーネントおよびその子コンポーネントを描画される HTML ページに表示するかどうかを指定できます
#@EN@ CSS Style(s)
Breadcrumbs_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Breadcrumbs_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Rendered Flag
Breadcrumbs_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Breadcrumbs_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Tab Index
Breadcrumbs_tabIndex_displayName=タブ索引
#@EN@ Position of this element in the tabbing order of the current document
Breadcrumbs_tabIndex_shortDescription=現在のドキュメントのタブ順でのこの要素の位置
#@EN@ Component Identifier
Breadcrumbs_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
Breadcrumbs_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Message
Message_displayName=メッセージ
#@EN@ The Message component is used to display error and warning messages for   another component. 
Message_shortDescription=Message コンポーネントを使用して、他のコンポーネントのエラーメッセージや警告メッセージを表示できます。 
#@EN@ CSS Style Class(es)
Message_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Message_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Show Summary Message
Message_showSummary_displayName=概要メッセージを表示
#@EN@ Set this attribute to true to display the summary message. 
Message_showSummary_shortDescription=この属性を True に設定すると、概要メッセージを表示できます。 
#@EN@ Visible
Message_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
Message_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ CSS Style(s)
Message_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Message_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Rendered Flag
Message_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Message_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Show Detail Message
Message_showDetail_displayName=詳細メッセージを表示
#@EN@ Set this attribute to true to display the detailed message. 
Message_showDetail_shortDescription=この属性を True に設定すると、詳細メッセージを表示できます。 
#@EN@ Alt Text
Message_alt_displayName=代替テキスト
#@EN@ Description of the image rendered by this component
Message_alt_shortDescription=このコンポーネントによって描画される画像の説明
#@EN@ Tab Index
Message_tabIndex_displayName=タブ索引
#@EN@ Position of this element in the tabbing order of the current document
Message_tabIndex_shortDescription=現在のドキュメントのタブ順でのこの要素の位置
#@EN@ Component Identifier
Message_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
Message_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Input Component
Message_for_displayName=入力コンポーネント
#@EN@ Identifier for the component associated with this message component. 
Message_for_shortDescription=このメッセージコンポーネントに関連付けるコンポーネントの識別子。 
#@EN@ Masthead
Masthead_displayName=マストヘッド
#@EN@ The Masthead component displays a masthead or page banner at the top of the  page. 
Masthead_shortDescription=Masthead コンポーネントはページの最上部にマストヘッド (ページバナー) を表示します。 
#@EN@ Alarm Counts
Masthead_alarmCounts_displayName=アラーム数
#@EN@ A JavaServer Faces EL expression that resolves to a backing bean or a   backing bean property that is an array of integers that specify the   down, critical, major, and minor alarm counts. 
Masthead_alarmCounts_shortDescription=down (停止)、critical (重度)、major (中度)、minor (軽度) アラーム数を指定する整数型の配列であるバッキング Bean またはバッキング Bean プロパティーを解釈処理する JavaServer Faces の EL 式。 
#@EN@ Rendered Flag
Masthead_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Masthead_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Current User Info Label
Masthead_userInfoLabel_displayName=現在のユーザー情報ラベル
#@EN@ The label text to display for the current User information. 
Masthead_userInfoLabel_shortDescription=現在のユーザー情報として表示するテキストラベル。 
#@EN@ Component Identifier
Masthead_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
Masthead_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Date Time
Masthead_dateTime_displayName=日時
#@EN@ Set to true to display a date and time stamp in the status area. 
Masthead_dateTime_shortDescription=True に設定すると、日時スタンプをステータス領域に表示できます。 
#@EN@ Is Secondary
Masthead_secondary_displayName=副ウィンドウ
#@EN@ Set to true to indicate that the masthead is to be used in a secondary/popup window. 
Masthead_secondary_shortDescription=True に設定すると、マストヘッドが副ウィンドウやポップアップウィンドウで使用されます。 
#@EN@ CSS Style Class(es)
Masthead_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Masthead_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Product Image Height
Masthead_productImageHeight_displayName=製品画像の高さ
#@EN@ The height to use for the Product Name Image, in pixels
Masthead_productImageHeight_shortDescription=製品名画像に使用する高さ (ピクセル単位)
#@EN@ Product Image URL
Masthead_productImageURL_displayName=製品画像の URL
#@EN@ The url to the image file to use for the Product Name Image. 
Masthead_productImageURL_shortDescription=製品名画像に使用する画像ファイルの URL。 
#@EN@ CSS Style(s)
Masthead_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Masthead_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Current Server Info Label
Masthead_serverInfoLabel_displayName=現在のサーバー情報ラベル
#@EN@ The label text to display for the current Server information. 
Masthead_serverInfoLabel_shortDescription=現在のサーバー情報として表示するテキストラベル。 
#@EN@ Current Server Info
Masthead_serverInfo_displayName=現在のサーバー情報
#@EN@ Text to display for the current Server information, such as the name   of the server whose data is being displayed. 
Masthead_serverInfo_shortDescription=表示中のデータがあるサーバー名などの、現在のサーバー情報として表示するテキスト。 
#@EN@ Notification Message
Masthead_notificationMsg_displayName=通知メッセージ
#@EN@ Text to display for the notification info in the status area 
Masthead_notificationMsg_shortDescription=ステータス領域に通知情報として表示するテキスト 
#@EN@ Value
Masthead_value_displayName=値
#@EN@ The current value of this component
Masthead_value_shortDescription=このコンポーネントの現在の値
#@EN@ Converter
Masthead_converter_displayName=コンバータ
#@EN@ Converter instance registered with this component.
Masthead_converter_shortDescription=このコンポーネントに登録されているコンバータのインスタンス。
#@EN@ Current Role Info
Masthead_roleInfo_displayName=現在のロール情報
#@EN@ Text to display for the current Role information, such as the name of   the user who is running the application. 
Masthead_roleInfo_shortDescription=アプリケーションを実行中のユーザ名などの、現在のロール情報として表示するテキスト。 
#@EN@ Current User Info
Masthead_userInfo_displayName=現在のユーザー情報
#@EN@ Text to display for the current User information, such as the name of   the user who is running the application. 
Masthead_userInfo_shortDescription=アプリケーションを実行中のユーザー名などの、現在のユーザー情報として表示するテキスト。 
#@EN@ Brand Image URL
Masthead_brandImageURL_displayName=ブランド画像の URL
#@EN@ The url to the image file to use as the Brand Image
Masthead_brandImageURL_shortDescription=ブランド画像として使用する画像ファイルの URL
#@EN@ Utility Bar Links
Masthead_utilities_displayName=ユーティリティーバーのリンク
#@EN@ A JavaServer Faces EL expression that resolves to a backing bean or   a backing bean property that is an array of one or more custom   Hyperlink components to display in the utility bar
Masthead_utilities_shortDescription=ユーティリティーバーに表示する 1 つ以上のカスタムハイパーリンクコンポーネントの配列であるバッキング Bean またはバッキング Bean プロパティーを解釈処理する JavaServer Faces の EL 式
#@EN@ Product Image Description
Masthead_productImageDescription_displayName=製品画像の説明
#@EN@ The description for the product name image, used as alt text for the image. 
Masthead_productImageDescription_shortDescription=製品名画像の代替テキストとして使用する説明。 
#@EN@ Brand Image Width
Masthead_brandImageWidth_displayName=ブランド画像の幅
#@EN@ The width to use for the Brand Image, in pixels
Masthead_brandImageWidth_shortDescription=ブランド画像に使用する幅 (ピクセル単位)
#@EN@ Visible
Masthead_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
Masthead_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ Current Role Info Label
Masthead_roleInfoLabel_displayName=現在のロール情報ラベル
#@EN@ The label text to display for the current User information. 
Masthead_roleInfoLabel_shortDescription=現在のユーザー情報として表示するテキストラベル。 
#@EN@ Product Image Width
Masthead_productImageWidth_displayName=製品画像の幅
#@EN@ The width to use for the Product Name Image, in pixels
Masthead_productImageWidth_shortDescription=製品名画像に使用する幅 (ピクセル単位)
#@EN@ Brand Image Description
Masthead_brandImageDescription_displayName=ブランド画像の説明
#@EN@ The description to use for the Brand Image, used as alt text for the image. 
Masthead_brandImageDescription_shortDescription=ブランド画像の代替テキストとして使用する説明。 
#@EN@ Job Count
Masthead_jobCount_displayName=ジョブ数
#@EN@ The number of currently executing jobs or tasks
Masthead_jobCount_shortDescription=現在実行中のジョブまたはタスクの数
#@EN@ Brand Image Height
Masthead_brandImageHeight_displayName=ブランド画像の高さ
#@EN@ The height to use for the Brand Image, in pixels
Masthead_brandImageHeight_shortDescription=ブランド画像に使用する高さ (ピクセル単位)
#@EN@ Drop Down List
DropDown_displayName=ドロップダウンリスト
#@EN@ The DropDown component is used to display a drop down menu to allow  users to select one or more items from a list. 
DropDown_shortDescription=DropDown コンポーネントを使用して、ユーザーがリストから 1 つ以上の項目を選択できるドロップダウンメニューを表示できます。 
#@EN@ Tool Tip
DropDown_toolTip_displayName=ツールチップ
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers  over the HTML element. 
DropDown_toolTip_shortDescription=HTML 要素の title 属性の値を設定します。指定したテキストは、マウスカーソルがこの HTML 要素上に置かれたときにツールチップとして表示されます。 
#@EN@ Submit the Page on Change
DropDown_submitForm_displayName=変更時にページを送信
#@EN@ When the submitForm attribute is set to true,  the form is immediately submitted when the user changes the  selection in the drop down list. 
DropDown_submitForm_shortDescription=submitForm 属性が True の場合、ユーザーがドロップダウンリストで選択を変更すると、ただちにフォームが送信されます。 
#@EN@ HTML Template
DropDown_htmlTemplate_displayName=HTML テンプレート
#@EN@ Alternative HTML template to be used by this component. 
DropDown_htmlTemplate_shortDescription=このコンポーネントで使用される代替 HTML テンプレート。 
#@EN@ Value
DropDown_value_displayName=値
#@EN@ The current value of this component
DropDown_value_shortDescription=このコンポーネントの現在の値
#@EN@ Number of Items to Display
DropDown_rows_displayName=表示項目数
#@EN@ The number of items to display
DropDown_rows_shortDescription=表示する項目の数
#@EN@ Action Expression
DropDown_actionExpression_displayName=アクション式
#@EN@ The actionExpression attribute is used to specify the action to take when this  component is activated by the user
DropDown_actionExpression_shortDescription=actionExpression 属性を使用して、このコンポーネントがユーザーによってアクティブにされたときに実行するアクションを指定できます
#@EN@ Text Selected Script
DropDown_onSelect_displayName=テキスト選択スクリプト
#@EN@ Scripting code executed when some text in this  component value is selected. 
DropDown_onSelect_shortDescription=このコンポーネント値のテキストが選択されたときに実行するスクリプトコード。 
#@EN@ Action Listener Expression
DropDown_actionListenerExpression_displayName=アクションリスナー式
#@EN@ The actionListenerExpression attribute is used to specify a method to handle  an action event that is triggered when this  component is activated by the user
DropDown_actionListenerExpression_shortDescription=actionListenerExpression 属性を使用して、このコンポーネントがユーザーによってアクティブにされたときに発生するアクションイベントを処理するメソッドを指定できます
#@EN@ Read-only
DropDown_readOnly_displayName=読み取り専用
#@EN@ If this attribute is set to true, the value of the component is  rendered as text, preceded by the label if one was defined.   Deprecated: The attribute is deprecated starting from version 4.1 
DropDown_readOnly_shortDescription=この属性が True の場合、コンポーネントの値はテキストとして描画され、ラベルが定義されている場合はラベルが前に付きます。非推奨: この属性は、version 4.1 以降は非推奨となっています
#@EN@ Navigate to Component Value
DropDown_navigateToValue_displayName=コンポーネント値にナビゲート
#@EN@ When this attribute is set to true, the value of the menu selection  is used as the action, to determine which page is displayed next  according to the registered navigation rules
DropDown_navigateToValue_shortDescription=この属性が True の場合、メニューからの選択値がアクションとして使用され、登録されているナビゲーション規則に従って次に表示するページが決定されます
#@EN@ Do not display selected value
DropDown_forgetValue_displayName=選択済み値を非表示
#@EN@ If this flag is set to true, then the component is always  rendered with no initial selection
DropDown_forgetValue_shortDescription=このフラグが True の場合、コンポーネントは常に初期選択なしで描画されます。
#@EN@ Checkbox
Checkbox_displayName=チェックボックス
#@EN@ The Checkbox component is used to display a checkbox input element.    The Checkbox can be used as a single checkbox  or one checkbox among a group of checkboxes
Checkbox_shortDescription=Checkbox コンポーネントを使用して、チェックボックス入力要素を表示できます。このコンポーネントは単一のチェックボックスとして使用することも、チェックボックスのグループの 1 つとして使用することもできます
#@EN@ HTML Template
Checkbox_htmlTemplate_displayName=HTML テンプレート
#@EN@ Alternative HTML template to be used by this component. 
Checkbox_htmlTemplate_shortDescription=このコンポーネントで使用される代替 HTML テンプレート。 
#@EN@ Value
Checkbox_value_displayName=値
#@EN@ The current value of this component
Checkbox_value_shortDescription=このコンポーネントの現在の値
#@EN@ Required
Checkbox_required_displayName=必須
#@EN@ Flag indicating that an input value for this field is mandatory, and   failure to provide one will trigger a validation error. 
Checkbox_required_shortDescription=このフィールドへの値の入力を必須にすることを示すフラグで、入力が失敗すると妥当性検査エラーを発生させます。 
#@EN@ Items
Checkbox_items_displayName=項目
#@EN@ Specifies the options that the web application user can choose  from
Checkbox_items_shortDescription=Web アプリケーションユーザーが選択可能なオプションを指定します
#@EN@ Label Level
Checkbox_labelLevel_displayName=ラベルレベル
#@EN@ Sets the style level for the generated label, provided the  label attribute has been set
Checkbox_labelLevel_shortDescription=label 属性が設定されている場合に、生成されるラベルに対するスタイルレベルを設定します
#@EN@ imageURL
RbCbSelector_imageURL_displayName=imageURL
#@EN@ A context relative path of an image to be displayed with  the control
RbCbSelector_imageURL_shortDescription=コントロールと共に表示される画像のコンテキスト相対パス
#@EN@ Group Name
RbCbSelector_name_displayName=グループ名
#@EN@ Identifies the control as participating as part  of a group
RbCbSelector_name_shortDescription=グループを構成しているものとしてコントロールを識別します
#@EN@ selectedValue
RbCbSelector_selectedValue_displayName=選択されている値
#@EN@ Return the value of the selectedValue property.  If selectedValue is null, then a Boolean  true instance is returned and the control will behave as a  boolean control. 
RbCbSelector_selectedValue_shortDescription=selectedValue プロパティーの値を返します。selectedValue が null の場合は、boolean が True のインスタンスが返され、コントロールは boolean コントロールと同じように動作します。 
#@EN@ Selected
RbCbSelector_selected_displayName=選択
#@EN@ The object that represents the selections made from the  available options
RbCbSelector_selected_shortDescription=使用可能なオプションから作られる選択肢を表すオブジェクト。
#@EN@ AccordionTab
AccordionTab_displayName=AccordionTab
#@EN@ An accordion tab component
AccordionTab_shortDescription=折りたたみ式のタブコンポーネント
#@EN@ Multiple tab selected
AccordionTab_multipleSelect_displayName=複数のタブが選択されています
#@EN@ This attribute is to handle the case where the AccordionTab is itself  a container of AccordionTabs.  Returns true if multiple tabs can be selected at the same time.  By default this is set to false and only one accordion tab can be  selected at any given time
AccordionTab_multipleSelect_shortDescription=この属性は、AccordionTab が、自身の AccordionTab のコンテナである場合の処理を行います。複数のタブを同時に選択する場合は、True を返します。デフォルトでは、これは False に設定されており、随時選択できる折りたたみ式のタブは 1 つだけです
#@EN@ Tab Content Height
AccordionTab_contentHeight_displayName=タブコンテンツの高さ
#@EN@ Height of each tab content
AccordionTab_contentHeight_shortDescription=各タブのコンテンツの高さ
#@EN@ HTML Template
TabContent_htmlTemplate_displayName=HTML テンプレート
#@EN@ Alternative HTML template to be used by this component. 
TabContent_htmlTemplate_shortDescription=このコンポーネントで使用される代替 HTML テンプレート。 
#@EN@ CSS Style Class(es)
TabContent_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element of the   TabContent. 
TabContent_styleClass_shortDescription=TabContent の一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Is this tab selected
TabContent_selected_displayName=選択されたタブ
#@EN@ Returns true if this tab is selected
TabContent_selected_shortDescription=このタブが選択されると True を返します
#@EN@ Tab Title
TabContent_title_displayName=タブタイトル
#@EN@ The title of this tab. 
TabContent_title_shortDescription=このタブのタイトル。 
#@EN@ CSS Style(s) of the tabContent
TabContent_style_displayName=tabContent の CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this  component is rendered. 
TabContent_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Visible
TabContent_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
TabContent_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ Table2
Table2_displayName=Table2
#@EN@ Component that represents a table.   The Table2 component provides a layout mechanism for displaying table actions.  UI guidelines describe specific behavior that can applied to the rows and   columns of data such as sorting, filtering, pagination, selection, and custom   user actions
Table2_shortDescription=表を表すコンポーネント。Table2 コンポーネントは、表のアクションを表示するレイアウト機能を提供します。UI ガイドラインでは、ソートやフィルタリング、ページ設定、選択、カスタムユーザーアクションなどのデータ行とデータ列に適用可能な固有の動作について解説しています
#@EN@ HTML Template
Table2_htmlTemplate_displayName=HTML テンプレート
#@EN@ Alternative HTML template to be used by this component. 
Table2_htmlTemplate_shortDescription=このコンポーネントで使用される代替 HTML テンプレート。 
#@EN@ Double Click Script
TableBase_onDblClick_displayName=ダブルクリックスクリプト
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
TableBase_onDblClick_shortDescription=このコンポーネント上でマウスがダブルクリックされたときに実行するスクリプトコード。 
#@EN@ Table Width
TableBase_width_displayName=表の幅
#@EN@ Use the width attribute to specify the width of the table
TableBase_width_shortDescription=width 属性は表の幅を指定します
#@EN@ Table Title
TableBase_title_displayName=表タイトル
#@EN@ The text displayed for the table title. 
TableBase_title_shortDescription=表タイトルに表示するテキスト。 
#@EN@ Key Press Script
TableBase_onKeyPress_displayName=キー押下スクリプト
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
TableBase_onKeyPress_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押して放したときに実行するスクリプトコード。 
#@EN@ Inner Borders
TableBase_rules_displayName=内側のボーダー
#@EN@ The RULES attribute, poorly supported by browsers, specifies the  borders between table cells
TableBase_rules_shortDescription=RULES 属性は表のセル間のボーダーを指定します。ブラウザによるサポート状況はよくありません。
#@EN@ Deselect Multiple Click Script
TableBase_deselectMultipleButtonOnClick_displayName=複数選択解除クリックスクリプト
#@EN@ Scripting code that is executed when the user clicks the deselect multiple   button
TableBase_deselectMultipleButtonOnClick_shortDescription=複数選択解除ボタンがクリックされたときに実行するスクリプトコード
#@EN@ Show Clear Sort Button
TableBase_clearSortButton_displayName=ソートを取り消すボタンを表示
#@EN@ In the View-Changing Controls area of the Action Bar, display a button that   clears any sorting of the table
TableBase_clearSortButton_shortDescription=アクションバーの表示変更コントロール領域に、表のソートを取り消すボタンを表示します
#@EN@ Filter Component Id
TableBase_filterId_displayName=フィルタコンポーネント ID
#@EN@ The element id to be applied to the outermost HTML element that is rendered   for the dropDown component used to display filter options
TableBase_filterId_shortDescription=フィルタオプションの表示に使用する dropDown コンポーネントに描画される一番外側の HTML 要素に適用する要素 ID
#@EN@ Is Hidden Selected Rows
TableBase_hiddenSelectedRows_displayName=選択行を非表示
#@EN@ Flag indicating that selected rows might be currently hidden from view
TableBase_hiddenSelectedRows_shortDescription=選択されている行を非表示にすることを示すフラグ
#@EN@ Table Background Color
TableBase_bgColor_displayName=表の背景色
#@EN@ The deprecated BGCOLOR attribute suggests a background color for the  table
TableBase_bgColor_shortDescription=非推奨の BGCOLOR 属性は、表の背景色を示します
#@EN@ Key Up Script
TableBase_onKeyUp_displayName=キーアップスクリプト
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
TableBase_onKeyUp_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを放したときに実行するスクリプトコード。 
#@EN@ Mouse Up Script
TableBase_onMouseUp_displayName=マウスアップスクリプト
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
TableBase_onMouseUp_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを放したときに実行するスクリプトコード。 
#@EN@ CSS Style Class(es)
TableBase_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
TableBase_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Show Deselect Multiple Button
TableBase_deselectMultipleButton_displayName=複数選択解除ボタンを表示
#@EN@ In the Action Bar, display a deselect button for tables in which multiple rows   can be selected, to allow users to deselect all table rows that are currently   displayed
TableBase_deselectMultipleButton_shortDescription=アクションバーに選択解除ボタンを表示します。このボタンは複数の行を選択できる表用で、ユーザーは表示されているすべての行を一度に選択解除できます
#@EN@ Filter Panel Focus ID
TableBase_filterPanelFocusId_displayName=フィルタパネルフォーカス ID
#@EN@ The element id used to set focus when the filter panel is open. 
TableBase_filterPanelFocusId_shortDescription=フィルタパネルが開かれたときにフォーカスを設定するために使用する要素 ID。 
#@EN@ Show Augmented Title
TableBase_augmentTitle_displayName=追加タイトルを表示
#@EN@ Flag indicating that the table title should be augmented with the range of items   currently displayed and the total number of items in the table
TableBase_augmentTitle_shortDescription=表タイトルに、現在表示されている項目の範囲と表内の総項目数を追加することを示すフラグ
#@EN@ Table Alignment
TableBase_align_displayName=表の位置揃え
#@EN@ The deprecated ALIGN attribute suggests the horizontal alignment of  the table on visual browsers
TableBase_align_shortDescription=非推奨の ALIGN 属性は、ビジュアルブラウザでの表の水平位置揃えを示します
#@EN@ Light Weight Table
TableBase_lite_displayName=軽量表
#@EN@ Renders the table in a style that makes the table look lighter weight, generally   by omitting the shading around the table and in the title bar. 
TableBase_lite_shortDescription=一般に表周囲およびタイトルバー内の陰影を省略することによって軽いスタイルで表を描画します。 
#@EN@ CSS Style(s)
TableBase_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
TableBase_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Spacing Between Cells
TableBase_cellSpacing_displayName=セル間の余白
#@EN@ The amount of whitespace that should be placed between cells, and between the   edges of the table content area and the sides of the table
TableBase_cellSpacing_shortDescription=セル間、および表内容の端と表の 4 辺の間の空白の量
#@EN@ Border Width
TableBase_border_displayName=ボーダーの幅
#@EN@ The BORDER attribute specifies the width in pixels of the border around a table. 
TableBase_border_shortDescription=BORDER 属性は、表の周りのボーダーの幅をピクセル単位で指定します。 
#@EN@ Click Script
TableBase_onClick_displayName=クリックスクリプト
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
TableBase_onClick_shortDescription=このコンポーネント上でマウスがクリックされたときに実行するスクリプトコード。 
#@EN@ Filter Text
TableBase_filterText_displayName=フィルタテキスト
#@EN@ Text to be inserted into the table title bar when a filter is applied
TableBase_filterText_shortDescription=フィルタの適用時に表のタイトルバーに挿入するテキスト
#@EN@ Show Pagination Controls
TableBase_paginationControls_displayName=ページ設定コントロールを表示
#@EN@ Show the table pagination controls, which allow users to change which page is   displayed
TableBase_paginationControls_shortDescription=表示するページを変更するための表ページ設定コントロールを表示します
#@EN@ Mouse Down Script
TableBase_onMouseDown_displayName=マウスダウンスクリプト
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
TableBase_onMouseDown_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを押したときに実行するスクリプトコード。 
#@EN@ Tool Tip
TableBase_toolTip_displayName=ツールチップ
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
TableBase_toolTip_shortDescription=HTML 要素の title 属性の値を設定します。指定したテキストは、マウスカーソルがこの HTML 要素上に置かれたときにツールチップとして表示されます。 
#@EN@ Sort Panel Focus ID
TableBase_sortPanelFocusId_displayName=ソートパネルフォーカス ID
#@EN@ The element id used to set focus when the sort panel is open. 
TableBase_sortPanelFocusId_shortDescription=ソートパネルが開かれたときにフォーカスを設定するために使用する要素 ID。 
#@EN@ Purpose of Table
TableBase_summary_displayName=表の目的
#@EN@ Text that describes this table's purpose and structure, for user agents   rendering to non-visual media such as speech and Braille. 
TableBase_summary_shortDescription=この表の目的と構造を説明するテキスト。スピーチや点字などビジュアル以外のメディアで表現するユーザーエージェント用です。 
#@EN@ Show Sort Panel Toggle Button
TableBase_sortPanelToggleButton_displayName=ソートパネルを切り替えるボタンを表示
#@EN@ Show the button that is used to open and close the sort panel. 
TableBase_sortPanelToggleButton_shortDescription=ソートパネルを開いたり閉じたりするためのボタンを表示します。 
#@EN@ Show Select Multiple Button
TableBase_selectMultipleButton_displayName=複数選択ボタンを表示
#@EN@ Show the button that is used for selecting multiple rows
TableBase_selectMultipleButton_shortDescription=複数行の選択に使用するボタンを表示します
#@EN@ Preferences Panel Focus ID
TableBase_preferencesPanelFocusId_displayName=設定パネルフォーカス ID
#@EN@ The element id used to set focus when the preferences panel is open. 
TableBase_preferencesPanelFocusId_shortDescription=設定パネルが開かれたときにフォーカスを設定するために使用する要素 ID。 
#@EN@ Mouse Out Script
TableBase_onMouseOut_displayName=マウスアウトスクリプト
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
TableBase_onMouseOut_shortDescription=このコンポーネントの外にマウスカーソルが移動したときに実行するスクリプトコード。 
#@EN@ Show Paginate Button
TableBase_paginateButton_displayName=ページ設定ボタンを表示
#@EN@ Show table paginate button to allow users to switch between viewing all data on   a single page (unpaginated) or to see data in multiple pages (paginated). 
TableBase_paginateButton_shortDescription=すべてのデータを単一ページに表示する (ページ設定なし) か、データを複数ページに分けて表示する (ページ設定あり) かを切り替える表ページ設定ボタンを表示します。 
#@EN@ Select Multiple Click Script
TableBase_selectMultipleButtonOnClick_displayName=複数選択クリックスクリプト
#@EN@ Scripting code executed when the user clicks the mouse on the select multiple   button. 
TableBase_selectMultipleButtonOnClick_shortDescription=複数選択ボタンがクリックされたときに実行するスクリプトコード。 
#@EN@ Mouse In Script
TableBase_onMouseOver_displayName=マウスインスクリプト
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
TableBase_onMouseOver_shortDescription=このコンポーネント内に、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ Mouse Move Script
TableBase_onMouseMove_displayName=マウス移動スクリプト
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
TableBase_onMouseMove_shortDescription=コンポーネント内で、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ Outer Border
TableBase_frame_displayName=外側のボーダー
#@EN@ The BORDER attribute specifies the width in pixels of the border  around a table. 
TableBase_frame_shortDescription=BORDER 属性は、表の周りのボーダーの幅をピクセル単位で指定します。 
#@EN@ Spacing Within Cells
TableBase_cellPadding_displayName=セル内の余白
#@EN@ The amount of whitespace that should be placed between the cell contents and the   cell borders, on all four sides of the cell
TableBase_cellPadding_shortDescription=セルの 4 辺すべてについて、セルの内容とそのボーダーの間の空白の量
#@EN@ Deselect Single Click Script
TableBase_deselectSingleButtonOnClick_displayName=単一選択解除クリックスクリプト
#@EN@ Scripting code that is executed when the user clicks the deselect single button.  You should use the JavaScript setTimeout() function to invoke the   script to ensure that the radio button is deselected immediately, instead of   waiting for the script to complete. 
TableBase_deselectSingleButtonOnClick_shortDescription=単一選択解除ボタンがクリックされたときに実行するスクリプトコード。JavaScript setTimeout() 関数を使用してこのスクリプトを呼び出し、スクリプトの終了を待たずにラジオボタンがすぐに選択解除されるようにしてください。 
#@EN@ Items Text
TableBase_itemsText_displayName=項目テキスト
#@EN@ Text to add to the title of an unpaginated table
TableBase_itemsText_shortDescription=ページ設定のない表のタイトルに追加するテキスト
#@EN@ Show Deselect Single Button
TableBase_deselectSingleButton_displayName=単一選択解除ボタンを表示
#@EN@ In the Action Bar, display a deselect button for tables in which only a single   table row can be selected at a time
TableBase_deselectSingleButton_shortDescription=アクションバーに選択解除ボタンを表示します。このボタンは、一度に 1 行だけ選択できる表用です。
#@EN@ Visible
TableBase_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
TableBase_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ Key Down Script
TableBase_onKeyDown_displayName=キーダウンスクリプト
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
TableBase_onKeyDown_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押したときに実行するスクリプトコード。 
#@EN@ Tab Index
TableBase_tabIndex_displayName=タブ索引
#@EN@ Position of this element in the tabbing order of the current document
TableBase_tabIndex_shortDescription=現在のドキュメントのタブ順でのこの要素の位置
#@EN@ Editable List
EditableList_displayName=編集可能リスト
#@EN@ The EditableList component allows users to create and modify a list of   strings.    Use this component when web application users need to create and modify a   list of strings
EditableList_shortDescription=EditableList コンポーネントを使用すると、文字列リストを作成したり、変更したりできます。Web アプリケーションユーザーが文字列リストを作成したり、変更したりする必要がある場合に、このコンポーネントを使用します
#@EN@ List
EditableList_list_displayName=リスト
#@EN@ The object that represents the list
EditableList_list_shortDescription=リストを表すオブジェクト
#@EN@ Tool Tip
EditableList_toolTip_displayName=ツールチップ
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
EditableList_toolTip_shortDescription=HTML 要素の title 属性の値を設定します。指定したテキストは、マウスカーソルがこの HTML 要素上に置かれたときにツールチップとして表示されます。 
#@EN@ Value
EditableList_value_displayName=値
#@EN@ The current value of this component
EditableList_value_shortDescription=このコンポーネントの現在の値
#@EN@ Maximum String Length
EditableList_maxLength_displayName=最大文字列長
#@EN@ The maximum number of characters allowed for each string in the list. 
EditableList_maxLength_shortDescription=リスト内の各文字列の最大文字数。 
#@EN@ Number of Items to Display
EditableList_rows_displayName=表示項目数
#@EN@ The number of items to display, which determines the length of the   rendered listbox
EditableList_rows_shortDescription=表示する項目数。これによって、描画されるリストボックスの長さが決まります
#@EN@ Converter
EditableList_converter_displayName=コンバータ
#@EN@ The converter attribute is used to specify a method to translate native  property values to String and back for this component
EditableList_converter_shortDescription=converter 属性を使用して、このコンポーネントの native プロパティー値を文字列に変換し、元に戻すメソッドを指定できます
#@EN@ Multiple
EditableList_multiple_displayName=複数
#@EN@ Flag indicating that the application user can select  more than one option at a time in the listbox. 
EditableList_multiple_shortDescription=アプリケーションユーザーが、リストボックスから一度に複数のオプションを選択できることを示すフラグ。 
#@EN@ List Validator Expression
EditableList_listValidatorExpression_displayName=リストバリデータ式
#@EN@ A validator which will be applied to the contents of the list  (e.g
EditableList_listValidatorExpression_shortDescription=リストの内容に適用されるバリデータ (リストに最小数のエントリがあるかどうかの検査など)。
#@EN@ Disabled
EditableList_disabled_displayName=使用不可
#@EN@ Flag indicating that the user is not permitted to activate this  component, and that the component's value will not be submitted with the  form. 
EditableList_disabled_shortDescription=ユーザーがこのコンポーネントをアクティブにすることを禁止し、コンポーネントの値がフォームで送信されないことを示すフラグ 
#@EN@ Validator Expression
EditableList_validatorExpression_displayName=バリデータ式
#@EN@ The validator attribute is used to specify a method in a backing bean to  validate input to the component
EditableList_validatorExpression_shortDescription=validator 属性を使用して、コンポーネントへの入力を検査するバッキング Bean 内のメソッドを指定できます
#@EN@ Sorted
EditableList_sorted_displayName=ソート
#@EN@ Set sorted to true if the list items should be  sorted in locale-specific alphabetical order
EditableList_sorted_shortDescription=sorted 属性を True に設定すると、リスト項目をロケール固有のアルファベット順にソートできます
#@EN@ Field Validator Expression
EditableList_fieldValidatorExpression_displayName=フィールドバリデータ式
#@EN@ A validator that will be applied to entries made into the  textfield
EditableList_fieldValidatorExpression_shortDescription=テキストフィールドに入力される内容に適用するバリデータ
#@EN@ CSS Style Class(es)
EditableList_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
EditableList_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Immediate
EditableList_immediate_displayName=即時
#@EN@ Flag indicating that event handling for this component should be handled  immediately (in Apply Request Values phase) rather than waiting until   Invoke Application phase. 
EditableList_immediate_shortDescription=このコンポーネントのイベント処理が、「アプリケーションの起動」の段階まで待たずに、すぐに (「要求値の適用」段階で) 処理されることを示すフラグ。 
#@EN@ Textfield Label
EditableList_fieldLabel_displayName=テキストフィールドラベル
#@EN@ Text to be used as the label next to the input text field. 
EditableList_fieldLabel_shortDescription=入力テキストフィールドの横のラベルとして使用するテキスト。 
#@EN@ List Label
EditableList_listLabel_displayName=リストラベル
#@EN@ Text to be used as the label next to the list box. 
EditableList_listLabel_shortDescription=リストボックスの横のラベルとして使用するテキスト。 
#@EN@ Visible
EditableList_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
EditableList_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ Show List On Top
EditableList_listOnTop_displayName=リストラベルを上に表示
#@EN@ Specifies the display order of the parts of this component
EditableList_listOnTop_shortDescription=このコンポーネントの構成要素の表示順を指定します
#@EN@ CSS Style(s)
EditableList_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
EditableList_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Label Level
EditableList_labelLevel_displayName=ラベルレベル
#@EN@ Sets the style level for the generated labels
EditableList_labelLevel_shortDescription=生成されるラベルのスタイルレベルを設定します
#@EN@ Read-only
EditableList_readOnly_displayName=読み取り専用
#@EN@ If this attribute is set to true, the value of the component is  rendered as text, preceded by the label if one was defined. 
EditableList_readOnly_shortDescription=この属性が True の場合、コンポーネントの値はテキストとして描画され、ラベルが定義されている場合はラベルが前に付きます。 
#@EN@ Tab Index
EditableList_tabIndex_displayName=タブ索引
#@EN@ Position of this element in the tabbing order of the current document
EditableList_tabIndex_shortDescription=現在のドキュメントのタブ順でのこの要素の位置
#@EN@ Static Text
StaticText_displayName=静的テキスト
#@EN@ The StaticText component is used to display text that is not interactive in   the rendered HTML page. 
StaticText_shortDescription=StaticText コンポーネントを使用して、描画される HTML ページに静的なテキストを表示できます。 
#@EN@ Mouse Down Script
StaticText_onMouseDown_displayName=マウスダウンスクリプト
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
StaticText_onMouseDown_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを押したときに実行するスクリプトコード。 
#@EN@ Tool Tip
StaticText_toolTip_displayName=ツールチップ
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
StaticText_toolTip_shortDescription=HTML 要素の title 属性の値を設定します。指定したテキストは、マウスカーソルがこの HTML 要素上に置かれたときにツールチップとして表示されます。 
#@EN@ Value
StaticText_value_displayName=値
#@EN@ The current value of this component
StaticText_value_shortDescription=このコンポーネントの現在の値
#@EN@ Double Click Script
StaticText_onDblClick_displayName=ダブルクリックスクリプト
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
StaticText_onDblClick_shortDescription=このコンポーネント上でマウスがダブルクリックされたときに実行するスクリプトコード。 
#@EN@ Converter
StaticText_converter_displayName=コンバータ
#@EN@ The converter attribute is used to specify a method to translate native  property values to String and back for this component
StaticText_converter_shortDescription=converter 属性を使用して、このコンポーネントの native プロパティー値を文字列に変換し、元に戻すメソッドを指定できます
#@EN@ Mouse Out Script
StaticText_onMouseOut_displayName=マウスアウトスクリプト
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
StaticText_onMouseOut_shortDescription=このコンポーネントの外にマウスカーソルが移動したときに実行するスクリプトコード。 
#@EN@ Rendered Flag
StaticText_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
StaticText_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Escape
StaticText_escape_displayName=エスケープ
#@EN@ Escape the html text so it won't be interpreted by the browser as HTML 
StaticText_escape_shortDescription=ブラウザによって HTML として解釈されないよう、HTML テキストをエスケープします 
#@EN@ Component Identifier
StaticText_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
StaticText_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Mouse In Script
StaticText_onMouseOver_displayName=マウスインスクリプト
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
StaticText_onMouseOver_shortDescription=このコンポーネント内に、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ HTML Template
StaticText_htmlTemplate_displayName=HTML テンプレート
#@EN@ Alternative HTML template to be used by this component. 
StaticText_htmlTemplate_shortDescription=このコンポーネントで使用される代替 HTML テンプレート。 
#@EN@ Mouse Move Script
StaticText_onMouseMove_displayName=マウス移動スクリプト
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
StaticText_onMouseMove_shortDescription=コンポーネント内で、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ Mouse Up Script
StaticText_onMouseUp_displayName=マウスアップスクリプト
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
StaticText_onMouseUp_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを放したときに実行するスクリプトコード。 
#@EN@ CSS Style Class(es)
StaticText_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
StaticText_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Text
StaticText_text_displayName=テキスト
#@EN@ The text to be displayed for this component. 
StaticText_text_shortDescription=このコンポーネントに表示するテキスト。 
#@EN@ CSS Style(s)
StaticText_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
StaticText_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Visible
StaticText_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
StaticText_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ Click Script
StaticText_onClick_displayName=クリックスクリプト
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
StaticText_onClick_shortDescription=このコンポーネント上でマウスがクリックされたときに実行するスクリプトコード。 
#@EN@ WizardSubstepBranch
WizardSubstepBranch_displayName=ウィザードサブステップ分岐
#@EN@ The WizardSubstepBranch component represents a conditional branch in a  wizard step sequence
WizardSubstepBranch_shortDescription=WizardSubstepBranch コンポーネントは、ウィザードステップのシーケンスにおける条件分岐を表します
#@EN@ summary
WizardSubstepBranch_summary_displayName=サマリー
#@EN@ A brief description of this step, to be used in the numbered  list of steps in the Steps pane. 
WizardSubstepBranch_summary_shortDescription=このステップの簡単な説明。ステップ区画の番号付きステップリストに使用されます。 
#@EN@ Cancel Script
WizardSubstepBranch_onCancel_displayName=取消しボタンスクリプト
#@EN@ Scripting code executed when the Cancel button is clicked. 
WizardSubstepBranch_onCancel_shortDescription=「取消し」ボタンがクリックされたときに実行するスクリプトコード。 
#@EN@ title
WizardSubstepBranch_title_displayName=タイトル
#@EN@ A descriptive title to be displayed as the Step Title  in the Step Content pane
WizardSubstepBranch_title_shortDescription=ステップ内容区画にステップタイトルとして表示される記述タイトル
#@EN@ detail
WizardSubstepBranch_detail_displayName=詳細
#@EN@ The detail attribute supplies the text that is to be  displayed in the Step Instructions area, before the input components  of the Step Content pane
WizardSubstepBranch_detail_shortDescription=detail 属性を使用して、ステップ内容区画の入力コンポーネントの前に、ステップ説明領域に表示するテキストを指定できます
#@EN@ Finish Script
WizardSubstepBranch_onFinish_displayName=完了ボタンスクリプト
#@EN@ Scripting code executed when the Finish button is clicked. 
WizardSubstepBranch_onFinish_shortDescription=「完了」ボタンがクリックされたときに実行するスクリプトコード。 
#@EN@ Next Script
WizardSubstepBranch_onNext_displayName=次へボタンスクリプト
#@EN@ Scripting code executed when the Next button is clicked. 
WizardSubstepBranch_onNext_shortDescription=「次へ」ボタンがクリックされたときに実行するスクリプトコード。 
#@EN@ Step Link Script
WizardSubstepBranch_onStepLink_displayName=ステップリンクスクリプト
#@EN@ Scripting code executed when a Step link is clicked. 
WizardSubstepBranch_onStepLink_shortDescription=ステップリンクがクリックされたときに実行するスクリプトコード。 
#@EN@ results
WizardSubstepBranch_results_displayName=結果
#@EN@ Set the results attribute to true when the wizard step  represents the View Results page
WizardSubstepBranch_results_shortDescription=results 属性を True に設定すると、ウィザードステップは結果ページを表します
#@EN@ taken
WizardSubstepBranch_taken_displayName=分岐
#@EN@ The taken attribute is used to evaluate whether the  steps of this branch sequence are displayed
WizardSubstepBranch_taken_shortDescription=taken 属性を使用して、この分岐シーケンスのステップを表示するかどうかを指定できます
#@EN@ Component Identifier
WizardSubstepBranch_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
WizardSubstepBranch_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Close Script
WizardSubstepBranch_onClose_displayName=閉じるボタンスクリプト
#@EN@ Scripting code executed when the Close button is clicked. 
WizardSubstepBranch_onClose_shortDescription=「閉じる」ボタンがクリックされたときに実行するスクリプトコード。 
#@EN@ help
WizardSubstepBranch_help_displayName=ヘルプ
#@EN@ Descriptive text that provides detailed help to the user  for this step
WizardSubstepBranch_help_shortDescription=このステップの詳細なヘルプをユーザーに提供する説明テキスト
#@EN@ Help Tab Script
WizardSubstepBranch_onHelpTab_displayName=ヘルプタブスクリプト
#@EN@ Scripting code executed when the Help tab is clicked. 
WizardSubstepBranch_onHelpTab_shortDescription=「ヘルプ」タブがクリックされたときに実行するスクリプトコード。 
#@EN@ finish
WizardSubstepBranch_finish_displayName=完了
#@EN@ Set the finish attribute to true when the wizard step  represents the Finish step
WizardSubstepBranch_finish_shortDescription=finish 属性を True に設定すると、ウィザードステップは完了ステップを表します
#@EN@ Wizard Event Listener
WizardSubstepBranch_eventListener_displayName=ウィザードイベントリスナー
#@EN@ The eventListener attribute is used to specify an  object to handle an event that is triggered when a user activates a   component in the step.  The eventListener attribute value must be a   JavaServer Faces EL expression that resolves to an instance  of com.sun.webui.jsf.event.WizardEventListener.    The return value of the wizard component's call to the  event listener's handleEvent() method controls the   processing of the current step, and determines whether the next step   or a previous step, etc
WizardSubstepBranch_eventListener_shortDescription=eventListener 属性を使用して、ユーザーがステップ内でコンポーネントをアクティブにしたときに発生するイベントを処理するオブジェクトを指定できます。この属性の値は、com.sun.webui.jsf.event.WizardEventListener のインスタンスを解釈処理する JavaServer Faces の EL 式である必要があります。イベントリスナーの handleEvent() に対するウィザードコンポーネントの呼び出しの戻り値によって、現在実行されているステップが制御され、次のステップに進むか、前のステップに戻るかどうかなどが決定されます。
#@EN@ Steps Tab Script
WizardSubstepBranch_onStepsTab_displayName=ステップタブスクリプト
#@EN@ Scripting code executed when the Steps tab is clicked. 
WizardSubstepBranch_onStepsTab_shortDescription=「ステップ」タブがクリックされたときに実行するスクリプトコード。 
#@EN@ Previous Script
WizardSubstepBranch_onPrevious_displayName=戻るボタンスクリプト
#@EN@ Scripting code executed when the Next button is clicked. 
WizardSubstepBranch_onPrevious_shortDescription=「次へ」ボタンがクリックされたときに実行するスクリプトコード。 
#@EN@ Table2Column
Table2Column_displayName=Table2Column
#@EN@ Component that represents a table column.    The Table2Column component provides a layout mechanism for displaying columns   of data
Table2Column_shortDescription=表列を表すコンポーネント。Table2Column コンポーネントは、データの列を表示するレイアウト機能を提供します
#@EN@ Property Sheet
PropertySheet_displayName=プロパティーシート
#@EN@ The PropertySheet component is a NamingContainer    used to layout PropertySheetSection components on a page.  Each PropertySheetSection may in turn have any number of  Property components within it
PropertySheet_shortDescription=PropertySheet コンポーネントは、ページ上の PropertySheetSection コンポーネントのレイアウトに使用するネーミングコンテナです。各 PropertySheetSection には、任意の数の Property コンポーネントを含めることができます
#@EN@ CSS Style Class(es)
PropertySheet_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
PropertySheet_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Required Field Legend
PropertySheet_requiredFields_displayName=必須フィールドの説明
#@EN@ Specifies whether to display a required field legend in the   upper right area of the property sheet
PropertySheet_requiredFields_shortDescription=プロパティーシートの右上に必須フィールドの説明を表示するかどうかを指定します
#@EN@ Show Jump Links
PropertySheet_jumpLinks_displayName=ジャンプリンクを表示
#@EN@ This boolean attribute allows you to control whether jump links  will be created at the top of this PropertySheet  or not
PropertySheet_jumpLinks_shortDescription=この boolean 属性を使用して、この PropertySheet の最上部にジャンプリンクを作成するかどうかを指定できます
#@EN@ Visible
PropertySheet_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
PropertySheet_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ CSS Style(s)
PropertySheet_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
PropertySheet_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Rendered Flag
PropertySheet_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
PropertySheet_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Component Identifier
PropertySheet_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
PropertySheet_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ WizardBranch
WizardBranch_displayName=ウィザード分岐
#@EN@ WizardBranch
WizardBranch_shortDescription=ウィザード分岐
#@EN@ summary
WizardBranch_summary_displayName=サマリー
#@EN@ A brief description of this step, to be used in the numbered  list of steps in the Steps pane. 
WizardBranch_summary_shortDescription=このステップの簡単な説明。ステップ区画の番号付きステップリストに使用されます。 
#@EN@ Cancel Script
WizardBranch_onCancel_displayName=取消しボタンスクリプト
#@EN@ Scripting code executed when the Cancel button is clicked. 
WizardBranch_onCancel_shortDescription=「取消し」ボタンがクリックされたときに実行するスクリプトコード。 
#@EN@ title
WizardBranch_title_displayName=タイトル
#@EN@ A descriptive title to be displayed as the Step Title  in the Step Content pane
WizardBranch_title_shortDescription=ステップ内容区画にステップタイトルとして表示される記述タイトル
#@EN@ detail
WizardBranch_detail_displayName=詳細
#@EN@ The detail attribute supplies the text that is to be  displayed in the Step Instructions area, before the input components  of the Step Content pane
WizardBranch_detail_shortDescription=detail 属性を使用して、ステップ内容区画の入力コンポーネントの前に、ステップ説明領域に表示するテキストを指定できます
#@EN@ Finish Script
WizardBranch_onFinish_displayName=完了ボタンスクリプト
#@EN@ Scripting code executed when the Finish button is clicked. 
WizardBranch_onFinish_shortDescription=「完了」ボタンがクリックされたときに実行するスクリプトコード。 
#@EN@ Next Script
WizardBranch_onNext_displayName=次へボタンスクリプト
#@EN@ Scripting code executed when the Next button is clicked. 
WizardBranch_onNext_shortDescription=「次へ」ボタンがクリックされたときに実行するスクリプトコード。 
#@EN@ Step Link Script
WizardBranch_onStepLink_displayName=ステップリンクスクリプト
#@EN@ Scripting code executed when a Step link is clicked. 
WizardBranch_onStepLink_shortDescription=ステップリンクがクリックされたときに実行するスクリプトコード。 
#@EN@ results
WizardBranch_results_displayName=結果
#@EN@ Set the results attribute to true when the wizard step  represents the View Results page
WizardBranch_results_shortDescription=results 属性を True に設定すると、ウィザードステップは結果ページを表します
#@EN@ taken
WizardBranch_taken_displayName=分岐
#@EN@ The taken attribute is used to evaluate whether the steps of  the branch are displayed
WizardBranch_taken_shortDescription=taken 属性を使用して、この分岐シーケンスのステップを表示するかどうかを評価できます
#@EN@ Component Identifier
WizardBranch_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
WizardBranch_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Close Script
WizardBranch_onClose_displayName=閉じるボタンスクリプト
#@EN@ Scripting code executed when the Close button is clicked. 
WizardBranch_onClose_shortDescription=「閉じる」ボタンがクリックされたときに実行するスクリプトコード。 
#@EN@ help
WizardBranch_help_displayName=ヘルプ
#@EN@ Descriptive text that provides detailed help to the user  for this step
WizardBranch_help_shortDescription=このステップの詳細なヘルプをユーザーに提供する説明テキスト
#@EN@ placeholderText
WizardBranch_placeholderText_displayName=プレースフォルダテキスト
#@EN@ Text that describes to users what happens when they make a selection in   the step that sets up the branch
WizardBranch_placeholderText_shortDescription=ユーザーが分岐を設定するステップで選択を行ったときの結果を説明するテキスト
#@EN@ Help Tab Script
WizardBranch_onHelpTab_displayName=ヘルプタブスクリプト
#@EN@ Scripting code executed when the Help tab is clicked. 
WizardBranch_onHelpTab_shortDescription=「ヘルプ」タブがクリックされたときに実行するスクリプトコード。 
#@EN@ finish
WizardBranch_finish_displayName=完了
#@EN@ Set the finish attribute to true when the wizard step  represents the Finish step
WizardBranch_finish_shortDescription=finish 属性を True に設定すると、ウィザードステップは完了ステップを表します
#@EN@ Wizard Event Listener
WizardBranch_eventListener_displayName=ウィザードイベントリスナー
#@EN@ The eventListener attribute is used to specify an  object to handle an event that is triggered when a user activates a   component in the step.  The eventListener attribute value must be a   JavaServer Faces EL expression that resolves to an instance  of com.sun.webui.jsf.event.WizardEventListener.    The return value of the wizard component's call to the  event listener's handleEvent() method controls the   processing of the current step, and determines whether the next step   or a previous step, etc
WizardBranch_eventListener_shortDescription=eventListener 属性を使用して、ユーザーがステップ内でコンポーネントをアクティブにしたときに発生するイベントを処理するオブジェクトを指定できます。この属性の値は、com.sun.webui.jsf.event.WizardEventListener のインスタンスを解釈処理する JavaServer Faces の EL 式である必要があります。イベントリスナーの handleEvent() に対するウィザードコンポーネントの呼び出しの戻り値によって、現在実行されているステップが制御され、次のステップに進むか、前のステップに戻るかどうかなどが決定されます。
#@EN@ Steps Tab Script
WizardBranch_onStepsTab_displayName=ステップタブスクリプト
#@EN@ Scripting code executed when the Steps tab is clicked. 
WizardBranch_onStepsTab_shortDescription=「ステップ」タブがクリックされたときに実行するスクリプトコード。 
#@EN@ Previous Script
WizardBranch_onPrevious_displayName=戻るボタンスクリプト
#@EN@ Scripting code executed when the Next button is clicked. 
WizardBranch_onPrevious_shortDescription=「次へ」ボタンがクリックされたときに実行するスクリプトコード。 
#@EN@ Layout Panel
PanelLayout_displayName=レイアウトパネル
#@EN@ The PanelLayout component is used to display a group of related components. 
PanelLayout_shortDescription=PanelLayout コンポーネントを使用して、関連コンポーネントのグループを表示できます。 
#@EN@ CSS Style Class(es)
PanelLayout_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
PanelLayout_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Visible
PanelLayout_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
PanelLayout_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ CSS Style(s)
PanelLayout_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
PanelLayout_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Rendered Flag
PanelLayout_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
PanelLayout_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Component Identifier
PanelLayout_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
PanelLayout_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Panel Layout
PanelLayout_panelLayout_displayName=パネルレイアウト
#@EN@ Use absolute grid positioning, or flow layout 
PanelLayout_panelLayout_shortDescription=絶対グリッド位置またはフローレイアウトを使用します 
#@EN@ Header
TableHeader_displayName=ヘッダー
#@EN@ Component that represents various table headers, including sortable,   selection, and group headers.    Note: Column headers and footers are rendered by TableRowGroupRenderer
TableHeader_shortDescription=各種の表ヘッダー (ソート可能ヘッダー、選択ヘッダー、グループヘッダーなど) を表すコンポーネント。注: 列ヘッダーおよびフッターは TableRowGroupRenderer によって描画されます
#@EN@ Width
TableHeader_width_displayName=幅
#@EN@ Use the width attribute to specify the width of the cells of the   column
TableHeader_width_shortDescription=width 属性を使用して、列のセル幅を指定できます
#@EN@ Double Click Script
TableHeader_onDblClick_displayName=ダブルクリックスクリプト
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
TableHeader_onDblClick_shortDescription=このコンポーネント上でマウスがダブルクリックされたときに実行するスクリプトコード。 
#@EN@ Key Press Script
TableHeader_onKeyPress_displayName=キー押下スクリプト
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
TableHeader_onKeyPress_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押して放したときに実行するスクリプトコード。 
#@EN@ Columns Spanned By the Cell
TableHeader_colSpan_displayName=セルがまたがる列数
#@EN@ The COLSPAN attribute of TH specifies the number of columns that are  spanned by the cell
TableHeader_colSpan_shortDescription=TH の COLSPAN 属性は、セルがまたがる列数を指定します
#@EN@ Is Sort Header
TableHeader_sortHeader_displayName=ソートヘッダー
#@EN@ Flag indicating this component should render a sortable column header
TableHeader_sortHeader_shortDescription=このコンポーネントがソート可能な列ヘッダーを描画することを示すフラグ
#@EN@ Cell Background Color
TableHeader_bgColor_displayName=セルの背景色
#@EN@ The BGCOLOR attribute suggests a background color for the cell
TableHeader_bgColor_shortDescription=BGCOLOR 属性はセルの背景色を示します
#@EN@ Key Up Script
TableHeader_onKeyUp_displayName=キーアップスクリプト
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
TableHeader_onKeyUp_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを放したときに実行するスクリプトコード。 
#@EN@ Mouse Up Script
TableHeader_onMouseUp_displayName=マウスアップスクリプト
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
TableHeader_onMouseUp_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを放したときに実行するスクリプトコード。 
#@EN@ CSS Style Class(es)
TableHeader_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
TableHeader_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Alignment Character
TableHeader_char_displayName=位置揃え文字
#@EN@ Use the char attribute to specify a character to use for   horizontal alignment in each cell in the row
TableHeader_char_shortDescription=char 属性を使用して、行の各セルの水平位置揃えに使用する文字を指定できます
#@EN@ Height
TableHeader_height_displayName=高さ
#@EN@ The number of pixels for the cell's height
TableHeader_height_shortDescription=セルの高さ (ピクセル単位)
#@EN@ Horizontal Alignment
TableHeader_align_displayName=水平位置揃え
#@EN@ Use the align attribute to specify the horizontal alignment for   the content of each cell in the column
TableHeader_align_shortDescription=align 属性を使用して、列の各セルの内容の水平位置揃えを指定できます
#@EN@ Cells Covered By Header Cell
TableHeader_scope_displayName=ヘッダーセルがカバーするセル
#@EN@ Use the scope attribute to specify that the data cells of the   column are also acting as headers for rows or other columns of the table
TableHeader_scope_shortDescription=scope 属性を使用して、列のデータセルがその表の行または他の列のヘッダーとしての役割も持っていることを指定できます
#@EN@ CSS Style(s)
TableHeader_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
TableHeader_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Abbreviation for Header Cell
TableHeader_abbr_displayName=ヘッダーセルの省略名
#@EN@ ABBR gives an abbreviated version of the cell's content
TableHeader_abbr_shortDescription=ABBR 属性はセルの内容の省略名を表します
#@EN@ Click Script
TableHeader_onClick_displayName=クリックスクリプト
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
TableHeader_onClick_shortDescription=このコンポーネント上でマウスがクリックされたときに実行するスクリプトコード。 
#@EN@ Alignment Character Offset
TableHeader_charOff_displayName=位置揃え文字オフセット
#@EN@ Use the charOff attribute to specify the offset of the first   occurrence of the alignment character that is specified with the   char attribute
TableHeader_charOff_shortDescription=charOff 属性を使用して、char 属性で指定された位置揃え文字の最初の出現へのオフセットを指定できます
#@EN@ Tool Tip
TableHeader_toolTip_displayName=ツールチップ
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
TableHeader_toolTip_shortDescription=HTML 要素の title 属性の値を設定します。指定したテキストは、マウスカーソルがこの HTML 要素上に置かれたときにツールチップとして表示されます。 
#@EN@ Mouse Down Script
TableHeader_onMouseDown_displayName=マウスダウンスクリプト
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
TableHeader_onMouseDown_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを押したときに実行するスクリプトコード。 
#@EN@ List of Header Cells for Current Cell
TableHeader_headers_displayName=現在のセルのヘッダーセルリスト
#@EN@ The HEADERS attribute specifies the header cells that apply to the  TH
TableHeader_headers_shortDescription=HEADERS 属性は TH に適用されるヘッダーセルを指定します
#@EN@ Category of Header Cell
TableHeader_axis_displayName=ヘッダーセルのカテゴリ
#@EN@ The AXIS attribute provides a method of categorizing cells
TableHeader_axis_shortDescription=AXIS 属性は、セルを分類する方法を提供します
#@EN@ Is Group Header
TableHeader_groupHeader_displayName=グループヘッダー
#@EN@ Flag indicating this component should render a group header
TableHeader_groupHeader_shortDescription=このコンポーネントがグループヘッダーを描画することを示すフラグ
#@EN@ Extra HTML
TableHeader_extraHtml_displayName=追加 HTML
#@EN@ Extra HTML to be appended to the tag output by this renderer. 
TableHeader_extraHtml_shortDescription=このレンダリングによってタグ出力に追加される HTML。 
#@EN@ Vertical Position
TableHeader_valign_displayName=垂直位置揃え
#@EN@ Use the valign attribute to specify the vertical alignment for the   content of each cell in the column
TableHeader_valign_shortDescription=valign 属性を使用して、列の各セルの内容の垂直位置揃えを指定できます
#@EN@ Suppress Word Wrap
TableHeader_noWrap_displayName=折り返しを抑止
#@EN@ Use the noWrap attribute to disable word wrapping of this column's   cells in visual browsers
TableHeader_noWrap_shortDescription=noWrap 属性を使用して、ビジュアルブラウザでのこの列のセルの折り返しを無効にできます
#@EN@ Rows Spanned By the Cell
TableHeader_rowSpan_displayName=セルがまたがる行数
#@EN@ The ROWSPAN attribute of TH specifies the number of rows that are  spanned by the cell
TableHeader_rowSpan_shortDescription=TH の ROWSPAN 属性は、セルがまたがる行数を指定します
#@EN@ Mouse Out Script
TableHeader_onMouseOut_displayName=マウスアウトスクリプト
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
TableHeader_onMouseOut_shortDescription=このコンポーネントの外にマウスカーソルが移動したときに実行するスクリプトコード。 
#@EN@ Mouse In Script
TableHeader_onMouseOver_displayName=マウスインスクリプト
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
TableHeader_onMouseOver_shortDescription=このコンポーネント内に、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ Is Select Header
TableHeader_selectHeader_displayName=選択ヘッダー
#@EN@ Flag indicating this component should render a selection column header
TableHeader_selectHeader_shortDescription=このコンポーネントが選択列ヘッダーを描画することを示すフラグ
#@EN@ Mouse Move Script
TableHeader_onMouseMove_displayName=マウス移動スクリプト
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
TableHeader_onMouseMove_shortDescription=コンポーネント内で、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ Visible
TableHeader_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
TableHeader_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ Key Down Script
TableHeader_onKeyDown_displayName=キーダウンスクリプト
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
TableHeader_onKeyDown_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押したときに実行するスクリプトコード。 
#@EN@ Actions
TableActions_displayName=アクション
#@EN@ Component that represents a table action bar.    Note: Column headers and footers are rendered by TableRowGroupRenderer
TableActions_shortDescription=表のアクションバーを表すコンポーネント。注: 列ヘッダーおよびフッターは TableRowGroupRenderer によって描画されます
#@EN@ Width
TableActions_width_displayName=幅
#@EN@ Use the width attribute to specify the width of the cells of the   column
TableActions_width_shortDescription=width 属性を使用して、列のセル幅を指定できます
#@EN@ Double Click Script
TableActions_onDblClick_displayName=ダブルクリックスクリプト
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
TableActions_onDblClick_shortDescription=このコンポーネント上でマウスがダブルクリックされたときに実行するスクリプトコード。 
#@EN@ Key Press Script
TableActions_onKeyPress_displayName=キー押下スクリプト
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
TableActions_onKeyPress_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押して放したときに実行するスクリプトコード。 
#@EN@ Columns Spanned By the Cell
TableActions_colSpan_displayName=セルがまたがる列数
#@EN@ The COLSPAN attribute of TD specifies the number of columns that are  spanned by the cell
TableActions_colSpan_shortDescription=TD の COLSPAN 属性は、セルがまたがる列数を指定します
#@EN@ Cell Background Color
TableActions_bgColor_displayName=セルの背景色
#@EN@ The BGCOLOR attribute suggests a background color for the cell
TableActions_bgColor_shortDescription=BGCOLOR 属性はセルの背景色を示します
#@EN@ Key Up Script
TableActions_onKeyUp_displayName=キーアップスクリプト
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
TableActions_onKeyUp_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを放したときに実行するスクリプトコード。 
#@EN@ Mouse Up Script
TableActions_onMouseUp_displayName=マウスアップスクリプト
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
TableActions_onMouseUp_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを放したときに実行するスクリプトコード。 
#@EN@ CSS Style Class(es)
TableActions_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
TableActions_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Alignment Character
TableActions_char_displayName=位置揃え文字
#@EN@ Use the char attribute to specify a character to use for   horizontal alignment in each cell in the row
TableActions_char_shortDescription=char 属性を使用して、行の各セルの水平位置揃えに使用する文字を指定できます
#@EN@ Height
TableActions_height_displayName=高さ
#@EN@ The number of pixels for the cell's height
TableActions_height_shortDescription=セルの高さ (ピクセル単位)
#@EN@ Horizontal Alignment
TableActions_align_displayName=水平位置揃え
#@EN@ Use the align attribute to specify the horizontal alignment for   the content of each cell in the column
TableActions_align_shortDescription=align 属性を使用して、列の各セルの内容の水平位置揃えを指定できます
#@EN@ Cells Covered By Header Cell
TableActions_scope_displayName=ヘッダーセルがカバーするセル
#@EN@ Use the scope attribute to specify that the data cells of the   column are also acting as headers for rows or other columns of the table
TableActions_scope_shortDescription=scope 属性を使用して、列のデータセルがその表の行または他の列のヘッダーとしての役割も持っていることを指定できます
#@EN@ Abbreviation for Header Cell
TableActions_abbr_displayName=ヘッダーセルの省略名
#@EN@ ABBR gives an abbreviated version of the cell's content
TableActions_abbr_shortDescription=ABBR 属性はセルの内容の省略名を表します
#@EN@ CSS Style(s)
TableActions_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
TableActions_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Click Script
TableActions_onClick_displayName=クリックスクリプト
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
TableActions_onClick_shortDescription=このコンポーネント上でマウスがクリックされたときに実行するスクリプトコード。 
#@EN@ Alignment Character Offset
TableActions_charOff_displayName=位置揃え文字オフセット
#@EN@ Use the charOff attribute to specify the offset of the first   occurrence of the alignment character that is specified with the   char attribute
TableActions_charOff_shortDescription=charOff 属性を使用して、char 属性で指定された位置揃え文字の最初の出現へのオフセットを指定できます
#@EN@ Tool Tip
TableActions_toolTip_displayName=ツールチップ
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
TableActions_toolTip_shortDescription=HTML 要素の title 属性の値を設定します。指定したテキストは、マウスカーソルがこの HTML 要素上に置かれたときにツールチップとして表示されます。 
#@EN@ Is Actions Bottom
TableActions_actionsBottom_displayName=下部のアクション
#@EN@ Flag indicating this component should render actions at the bottom of   the table
TableActions_actionsBottom_shortDescription=このコンポーネントが表の下部のアクションを描画することを示すフラグ
#@EN@ Mouse Down Script
TableActions_onMouseDown_displayName=マウスダウンスクリプト
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
TableActions_onMouseDown_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを押したときに実行するスクリプトコード。 
#@EN@ List of Header Cells for Current Cell
TableActions_headers_displayName=現在のセルのヘッダーセルリスト
#@EN@ The HEADERS attribute specifies the header cells that apply to the  TD
TableActions_headers_shortDescription=HEADERS 属性は TD に適用されるヘッダーセルを指定します
#@EN@ Category of Header Cell
TableActions_axis_displayName=ヘッダーセルのカテゴリ
#@EN@ The AXIS attribute provides a method of categorizing cells
TableActions_axis_shortDescription=AXIS 属性は、セルを分類する方法を提供します
#@EN@ Extra HTML
TableActions_extraHtml_displayName=追加 HTML
#@EN@ Extra HTML to be appended to the tag output by this renderer. 
TableActions_extraHtml_shortDescription=このレンダリングによってタグ出力に追加される HTML。 
#@EN@ Vertical Position
TableActions_valign_displayName=垂直位置揃え
#@EN@ Use the valign attribute to specify the vertical alignment for the   content of each cell in the column
TableActions_valign_shortDescription=valign 属性を使用して、列の各セルの内容の垂直位置揃えを指定できます
#@EN@ Suppress Word Wrap
TableActions_noWrap_displayName=折り返しを抑止
#@EN@ Use the noWrap attribute to disable word wrapping of this column's   cells in visual browsers
TableActions_noWrap_shortDescription=noWrap 属性を使用して、ビジュアルブラウザでのこの列のセルの折り返しを無効にできます
#@EN@ Rows Spanned By the Cell
TableActions_rowSpan_displayName=セルがまたがる行数
#@EN@ The ROWSPAN attribute of TD specifies the number of rows that are  spanned by the cell
TableActions_rowSpan_shortDescription=TD の ROWSPAN 属性は、セルがまたがる行数を指定します
#@EN@ Mouse Out Script
TableActions_onMouseOut_displayName=マウスアウトスクリプト
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
TableActions_onMouseOut_shortDescription=このコンポーネントの外にマウスカーソルが移動したときに実行するスクリプトコード。 
#@EN@ Mouse In Script
TableActions_onMouseOver_displayName=マウスインスクリプト
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
TableActions_onMouseOver_shortDescription=このコンポーネント内に、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ Mouse Move Script
TableActions_onMouseMove_displayName=マウス移動スクリプト
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
TableActions_onMouseMove_shortDescription=コンポーネント内で、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ Visible
TableActions_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
TableActions_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ Key Down Script
TableActions_onKeyDown_displayName=キーダウンスクリプト
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
TableActions_onKeyDown_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押したときに実行するスクリプトコード。 
#@EN@ Table
Table_displayName=表
#@EN@ Component that represents a table.   The table component provides a layout mechanism for displaying table actions.  UI guidelines describe specific behavior that can applied to the rows and   columns of data such as sorting, filtering, pagination, selection, and custom   user actions
Table_shortDescription=表を表すコンポーネント。表コンポーネントは、表のアクションを表示するレイアウト機能を提供します。UI ガイドラインでは、ソートやフィルタリング、ページ設定、選択、カスタムユーザーアクションなどのデータ行とデータ列に適用可能な固有の動作について解説しています
#@EN@ Extra Footer HTML
Table_extraFooterHtml_displayName=追加フッター HTML
#@EN@ Extra HTML code to be appended to the &lt;td&gt; HTML element that   is rendered for the table footer
Table_extraFooterHtml_shortDescription=表フッターに描画される HTML &lt;td&gt; 要素に追加される追加の HTML コード
#@EN@ Extra Title HTML
Table_extraTitleHtml_displayName=追加タイトル HTML
#@EN@ Extra HTML code to be appended to the &lt;caption&gt; HTML element   that is rendered for the table title
Table_extraTitleHtml_shortDescription=表タイトルに描画される HTML &lt;caption&gt; 要素に追加される追加の HTML コード
#@EN@ Extra Action (bottom) HTML
Table_extraActionBottomHtml_displayName=追加アクション HTML (下部)
#@EN@ Extra HTML code to be appended to the &lt;td&gt; HTML element that    is rendered for the Action Bar (bottom)
Table_extraActionBottomHtml_shortDescription=アクションバー (下部) に描画される HTML &lt;td&gt; 要素に追加される追加の HTML コード
#@LC@ ### New message ###
#@EN@ Footer Text
Table_footerText_displayName=フッターテキスト
#@LC@ ### New message ###
#@EN@ The text to be displayed in the table footer, which expands across the width of   the table. 
Table_footerText_shortDescription=表のフッターに表示されるテキストで、表の幅を拡張します。 
#@EN@ Extra Action (top) HTML
Table_extraActionTopHtml_displayName=追加アクション HTML (上部)
#@EN@ Extra HTML code to be appended to the &lt;td&gt; HTML element that   is rendered for the Action Bar (top)
Table_extraActionTopHtml_shortDescription=アクションバー (上部) に描画される HTML &lt;td&gt; 要素に追加される追加の HTML コード
#@EN@ Is Internal Virtual Form
Table_internalVirtualForm_displayName=内部仮想フォーム
#@EN@ Flag indicating that this component should use a virtual form
Table_internalVirtualForm_shortDescription=このコンポーネントが仮想フォームを使用することを示すフラグ
#@EN@ Extra Panel HTML
Table_extraPanelHtml_displayName=追加パネル HTML
#@EN@ Extra HTML code to be appended to the &lt;td&gt; HTML element that   is rendered for an embedded panel
Table_extraPanelHtml_shortDescription=埋め込みパネルに描画される HTML &lt;td&gt; 要素に追加される追加の HTML コード
#@EN@ Radio Button
RadioButton_displayName=ラジオボタン
#@EN@ A component that represents a radio button.    The RadioButton can be used as a single radio button  or one radio button among a group of radio button
RadioButton_shortDescription=ラジオボタンを表すコンポーネント。ラジオボタンは、単一のラジオボタンとして使用することも、ラジオボタンのグループの 1 つとして使用することもできます
#@EN@ HTML Template
RadioButton_htmlTemplate_displayName=HTML テンプレート
#@EN@ Alternative HTML template to be used by this component. 
RadioButton_htmlTemplate_shortDescription=このコンポーネントで使用される代替 HTML テンプレート。 
#@EN@ Value
RadioButton_value_displayName=値
#@EN@ The current value of this component
RadioButton_value_shortDescription=このコンポーネントの現在の値
#@EN@ Required
RadioButton_required_displayName=必須
#@EN@ Flag indicating that an input value for this field is mandatory, and   failure to provide one will trigger a validation error. 
RadioButton_required_shortDescription=このフィールドへの値の入力を必須にすることを示すフラグで、入力が失敗すると妥当性検査エラーを発生させます。 
#@EN@ Items
RadioButton_items_displayName=項目
#@EN@ Specifies the options that the web application user can choose  from
RadioButton_items_shortDescription=Web アプリケーションユーザーが選択可能なオプションを指定します
#@EN@ Text Selected Script
RadioButton_onSelect_displayName=テキスト選択スクリプト
#@EN@ Scripting code executed when some text in this  component value is selected. 
RadioButton_onSelect_shortDescription=このコンポーネント値のテキストが選択されたときに実行するスクリプトコード。 
#@EN@ Label Level
RadioButton_labelLevel_displayName=ラベルレベル
#@EN@ Sets the style level for the generated label, provided the  label attribute has been set
RadioButton_labelLevel_shortDescription=label 属性が設定されている場合に、生成されるラベルに対するスタイルレベルを設定します
#@EN@ Form
Form_displayName=フォーム
#@EN@ The Form component is used to create a form element. 
Form_shortDescription=Form コンポーネントを使用して、フォーム要素を作成できます。 
#@EN@ Mouse Down Script
Form_onMouseDown_displayName=マウスダウンスクリプト
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
Form_onMouseDown_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを押したときに実行するスクリプトコード。 
#@EN@ Double Click Script
Form_onDblClick_displayName=ダブルクリックスクリプト
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
Form_onDblClick_shortDescription=このコンポーネント上でマウスがダブルクリックされたときに実行するスクリプトコード。 
#@EN@ Content Type of the Request
Form_enctype_displayName=要求のコンテンツタイプ
#@EN@ Use this attribute to set the content-type of the HTTP request  generated by this form
Form_enctype_shortDescription=この属性を使用すると、このフォームで生成される HTTP 要求の content-type を設定できます
#@EN@ Virtual Forms Configuration
Form_virtualFormsConfig_displayName=仮想フォームの構成
#@EN@ The configuration of the virtual forms within this literal form, represented as a String.  Each virtual form is described by three parts, separated with pipe (&quot;|&quot;) characters:  the virtual form name, a space-separated list of component ids that participate in the   virtual form, and a space-separated list of component ids that submit the virtual form.  Multiple such virtual form &quot;descriptors&quot; are separated by commas
Form_virtualFormsConfig_shortDescription=文字列で表現された、このリテラルフォーム内の仮想フォームの構成。それぞれの仮想フォームは、パイプ文字 (&quot;|&quot;) で区切られ、仮想フォーム名、仮想フォームに所属するコンポーネントの ID を空白文字で区切ったリスト、および仮想フォームを送信するコンポーネント ID を空白文字で区切ったリストの 3 つの部分で記述されます。このような仮想フォームの記述子が複数ある場合は、コンマで区切られます
#@EN@ Key Press Script
Form_onKeyPress_displayName=キー押下スクリプト
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
Form_onKeyPress_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押して放したときに実行するスクリプトコード。 
#@EN@ Target
Form_target_displayName=ターゲット
#@EN@ Use this attribute to set the target of the XHTML form tag. 
Form_target_shortDescription=この属性を使用して、XHTML form タグのターゲットを設定できます。 
#@EN@ Mouse Out Script
Form_onMouseOut_displayName=マウスアウトスクリプト
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
Form_onMouseOut_shortDescription=このコンポーネントの外にマウスカーソルが移動したときに実行するスクリプトコード。 
#@EN@ Rendered Flag
Form_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Form_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Auto Complete
Form_autoComplete_displayName=自動補完
#@EN@ Use this non-XHTML compliant boolean attribute to turn off autocompletion   feature of Internet Explorer and Firefox browsers
Form_autoComplete_shortDescription=この非 XHTML 準拠の boolean 属性を使用して、Internet Explorer および Firefox ブラウザの自動補完機能を無効にすることができます
#@EN@ Component Identifier
Form_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
Form_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Mouse In Script
Form_onMouseOver_displayName=マウスインスクリプト
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
Form_onMouseOver_shortDescription=このコンポーネント内に、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ Key Up Script
Form_onKeyUp_displayName=キーアップスクリプト
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
Form_onKeyUp_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを放したときに実行するスクリプトコード。 
#@EN@ Mouse Move Script
Form_onMouseMove_displayName=マウス移動スクリプト
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
Form_onMouseMove_shortDescription=コンポーネント内で、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ Mouse Up Script
Form_onMouseUp_displayName=マウスアップスクリプト
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
Form_onMouseUp_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを放したときに実行するスクリプトコード。 
#@EN@ CSS Style Class(es)
Form_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Form_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Form Submit Script
Form_onSubmit_displayName=フォーム送信スクリプト
#@EN@ Scripting code executed when this form is submitted. 
Form_onSubmit_shortDescription=このフォームが送信されたときに実行するスクリプトコード。 
#@EN@ Form Reset Script
Form_onReset_displayName=フォームリセットスクリプト
#@EN@ Scripting code executed when this form is reset. 
Form_onReset_shortDescription=このフォームがリセットされたときに実行するスクリプトコード。 
#@EN@ Internal Virtual Form Descriptors
Form_internalVirtualForms_displayName=内部仮想フォーム記述子
#@EN@ The virtual forms used &quot;internally&quot; by components (such as Table).  Component authors can manipulate this set of virtual forms independent  of the set exposed to developers
Form_internalVirtualForms_shortDescription=表などのコンポーネントによって内部的に使用される仮想フォーム。コンポーネント作成者は、開発者に公開する仮想フォームセットとは別にこの仮想フォームセットを操作できます
#@EN@ Visible
Form_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be   viewable by the user in the rendered HTML page. 
Form_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます。 
#@EN@ CSS Style(s)
Form_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Form_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Key Down Script
Form_onKeyDown_displayName=キーダウンスクリプト
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
Form_onKeyDown_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押したときに実行するスクリプトコード。 
#@EN@ Click Script
Form_onClick_displayName=クリックスクリプト
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
Form_onClick_shortDescription=このコンポーネント上でマウスがクリックされたときに実行するスクリプトコード。 
#@EN@ Virtual Form Descriptors
Form_virtualForms_displayName=仮想フォーム記述子
#@EN@ The virtual forms within this literal form, represented as an  array of Form.VirtualFormDescriptor objects
Form_virtualForms_shortDescription=Form.VirtualFormDescriptor オブジェクトの配列として表現された、このリテラルフォーム内の仮想フォーム
#@EN@ Hidden Field
HiddenField_displayName=非表示フィールド
#@EN@ The HiddenField component is used to create a hidden input field. 
HiddenField_shortDescription=HiddenField コンポーネントを使用して、非表示入力フィールドを作成できます。 
#@EN@ HTML Template
HiddenField_htmlTemplate_displayName=HTML テンプレート
#@EN@ Alternative HTML template to be used by this component. 
HiddenField_htmlTemplate_shortDescription=このコンポーネントで使用される代替 HTML テンプレート。 
#@EN@ Value
HiddenField_value_displayName=値
#@EN@ The current value of this component
HiddenField_value_shortDescription=このコンポーネントの現在の値
#@EN@ Text
HiddenField_text_displayName=テキスト
#@EN@ Literal value to be rendered in this hidden field.  If this property is specified by a value binding  expression, the corresponding value will be updated  if validation succeeds. 
HiddenField_text_shortDescription=この非表示フィールドに描画されるリテラル値。このプロパティーが値バインド式で指定される場合、妥当性検査が成功すると対応する値が更新されます。 
#@EN@ Required
HiddenField_required_displayName=必須
#@EN@ Flag indicating that an input value for this field is mandatory, and   failure to provide one will trigger a validation error. 
HiddenField_required_shortDescription=このフィールドへの値の入力を必須にすることを示すフラグで、入力が失敗すると妥当性検査エラーを発生させます。 
#@EN@ Disabled
HiddenField_disabled_displayName=使用不可
#@EN@ Flag indicating that the hidden field should not send its value to the  server. 
HiddenField_disabled_shortDescription=非表示フィールドの値をサーバーに送信しないことを示すフラグ。 
#@EN@ Image
Icon_displayName=画像
#@EN@ The Icon component is used to display a theme-specific image in the   rendered HTML page. 
Icon_shortDescription=Icon コンポーネントを使用して、描画される HTML ページにテーマ固有の画像を表示できます。 
#@EN@ Anchor
Anchor_displayName=アンカー
#@EN@ The Anchor component is used to create an XHTML &lt;a&gt; anchor element.    Use the webuijsf:anchor tag to            Create an anchor that traverses to the specified url.       Anchor a position in the page so that you can jump to it.          The value of the id attribute of the rendered anchor element will be the component id,  not the component's client id
Anchor_shortDescription=Anchor コンポーネントを使用して、XHTML の &lt;a&gt; アンカー要素を作成できます。webuijsf:anchor タグを使用して、指定した URL をたどるアンカーを作成します。アンカーを付けると、ページ内のアンカーがある位置にジャンプできます。描画されたアンカー要素の id 属性の値は、コンポーネント ID になります。コンポーネントのクライアント ID ではありません
#@EN@ Double Click Script
Anchor_onDblClick_displayName=ダブルクリックスクリプト
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
Anchor_onDblClick_shortDescription=このコンポーネント上でマウスがダブルクリックされたときに実行するスクリプトコード。 
#@EN@ Shape
Anchor_shape_displayName=形状
#@EN@ The shape of the hot spot on the screen (for use in client-side image   maps)
Anchor_shape_shortDescription=画面上のホットスポットの形状 (クライアント側の画像マップに使用)。
#@EN@ Key Press Script
Anchor_onKeyPress_displayName=キー押下スクリプト
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
Anchor_onKeyPress_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押して放したときに実行するスクリプトコード。 
#@EN@ Target
Anchor_target_displayName=ターゲット
#@EN@ The resource at the specified URL is displayed in the frame that is   specified with the target attribute
Anchor_target_shortDescription=指定された URL のリソースは、target 属性で指定されたフレーム内に表示されます。
#@EN@ Focus Script
Anchor_onFocus_displayName=フォーカススクリプト
#@EN@ Scripting code executed when this component  receives focus
Anchor_onFocus_shortDescription=このコンポーネントがフォーカスを得たときに実行するスクリプトコード
#@EN@ Charset
Anchor_charset_displayName=文字セット
#@EN@ Specifies the character encoding of the target URL 
Anchor_charset_shortDescription=ターゲット URL の文字エンコーディングを指定します 
#@EN@ URL Lang
Anchor_urlLang_displayName=URL 言語
#@EN@ The language code of the resource designated by this anchor. 
Anchor_urlLang_shortDescription=このアンカーで指定されたリソースの言語コード。 
#@EN@ Rev
Anchor_rev_displayName=Rev
#@EN@ Specifies the relationship between the target URL and the current   document 
Anchor_rev_shortDescription=ターゲットの URL と現在のドキュメントとの関係を指定します 
#@EN@ Key Up Script
Anchor_onKeyUp_displayName=キーアップスクリプト
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
Anchor_onKeyUp_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを放したときに実行するスクリプトコード。 
#@EN@ Mouse Up Script
Anchor_onMouseUp_displayName=マウスアップスクリプト
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
Anchor_onMouseUp_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを放したときに実行するスクリプトコード。 
#@EN@ CSS Style Class(es)
Anchor_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when  this component is rendered. 
Anchor_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ CSS Style(s)
Anchor_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Anchor_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ URL
Anchor_url_displayName=URL
#@EN@ Absolute, relative, or context relative (starting with &quot;/&quot;) URL to the   resource selected by this anchor
Anchor_url_shortDescription=このアンカーで選択されるリソースへの絶対 URL、相対 URL、またはコンテキスト相対 (&quot;/&quot; から始まる) URL
#@EN@ Click Script
Anchor_onClick_displayName=クリックスクリプト
#@EN@ Scripting code executed when a mouse click occurs over this component.  If the component submits the form (by using the action attribute), the   script that you use with the onClick attribute should not return from   the function
Anchor_onClick_shortDescription=このコンポーネント上でマウスがクリックされたときに実行するスクリプトコード。コンポーネントが action 属性を使ってフォームを送信する場合、onClick 属性で使用するスクリプトは、関数から復帰してはなりません
#@EN@ Blur Script
Anchor_onBlur_displayName=フォーカスオフスクリプト
#@EN@ Scripting code executed when this element loses focus. 
Anchor_onBlur_shortDescription=このコンポーネントがフォーカスを失ったときに実行するスクリプトコード。 
#@EN@ Tool Tip
Anchor_toolTip_displayName=ツールチップ
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
Anchor_toolTip_shortDescription=HTML 要素の title 属性の値を設定します。指定したテキストは、マウスカーソルがこの HTML 要素上に置かれたときにツールチップとして表示されます。 
#@EN@ Mouse Down Script
Anchor_onMouseDown_displayName=マウスダウンスクリプト
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
Anchor_onMouseDown_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを押したときに実行するスクリプトコード。 
#@EN@ Type
Anchor_type_displayName=タイプ
#@EN@ The MIME content type of the resource specified by this component. 
Anchor_type_shortDescription=このコンポーネントで指定されたリソースの MIME コンテンツタイプ。 
#@EN@ Disabled
Anchor_disabled_displayName=使用不可
#@EN@ Flag indicating that clicking of this component by the user is not  currently permitted
Anchor_disabled_shortDescription=ユーザーがこのコンポーネントをクリックすることが、現在許可されていないことを示すフラグ
#@EN@ AccessKey
Anchor_accessKey_displayName=AccessKey
#@EN@ This attribute assigns an access key to an element
Anchor_accessKey_shortDescription=この属性は、要素へのアクセスキーを割り当てます
#@EN@ Mouse Out Script
Anchor_onMouseOut_displayName=マウスアウトスクリプト
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
Anchor_onMouseOut_shortDescription=このコンポーネントの外にマウスカーソルが移動したときに実行するスクリプトコード。 
#@EN@ Mouse In Script
Anchor_onMouseOver_displayName=マウスインスクリプト
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
Anchor_onMouseOver_shortDescription=このコンポーネント内に、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ HTML Template
Anchor_htmlTemplate_displayName=HTML テンプレート
#@EN@ Alternative HTML template to be used by this component. 
Anchor_htmlTemplate_shortDescription=このコンポーネントで使用される代替 HTML テンプレート。 
#@EN@ Mouse Move Script
Anchor_onMouseMove_displayName=マウス移動スクリプト
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
Anchor_onMouseMove_shortDescription=コンポーネント内で、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ text
Anchor_text_displayName=テキスト
#@EN@ The text to be displayed for the anchor element. 
Anchor_text_shortDescription=アンカー要素に表示するテキスト。 
#@EN@ Rel
Anchor_rel_displayName=関係
#@EN@ Specifies the relationship between the current document and the target   URL 
Anchor_rel_shortDescription=現在のドキュメントとターゲットの URL との関係を指定します 
#@EN@ Visible
Anchor_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
Anchor_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ Key Down Script
Anchor_onKeyDown_displayName=キーダウンスクリプト
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
Anchor_onKeyDown_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押したときに実行するスクリプトコード。 
#@EN@ Tab Index
Anchor_tabIndex_displayName=タブ索引
#@EN@ Position of this element in the tabbing order of the current document
Anchor_tabIndex_shortDescription=現在のドキュメントのタブ順でのこの要素の位置
#@EN@ Coords
Anchor_coords_displayName=Coords
#@EN@ Specifies the coordinates appropriate to the shape attribute to define  a region of an image for image maps 
Anchor_coords_shortDescription=画像マップのイメージの領域を定義する shape 属性に、適切な座標を指定します 
#@EN@ Meta
Meta_displayName=メタ
#@EN@ The Meta component is used to create an HTML  element in the rendered  HTML page. 
Meta_shortDescription=Meta コンポーネントを使用して、描画される HTML ページに HTML 要素を作成できます。 
#@EN@ Content
Meta_content_displayName=内容
#@EN@ The content attribute is used to specify the data to  associate with a   name attribute or httpEquiv attribute in the webuijsf:meta tag. 
Meta_content_shortDescription=content 属性を使用して、webuijsf:meta タグ内の  name または httpEquiv 属性に関連付けるデータを指定できます。 
#@EN@ Rendered Flag
Meta_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Meta_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Scheme
Meta_scheme_displayName=スキーマ
#@EN@ Defines a format to be used to interpret the value of the content   attribute. 
Meta_scheme_shortDescription=content 属性の値の解釈に使用される形式を定義します。 
#@EN@ HTTP header
Meta_httpEquiv_displayName=HTTP ヘッダー
#@EN@ The httpEquiv attribute is used to specify a value for the http-equiv   attribute of an HTML Meta element
Meta_httpEquiv_shortDescription=httpEquiv 属性を使用して、HTML meta 要素の http-equiv 属性の値を指定できます
#@EN@ Name
Meta_name_displayName=名前
#@EN@ The identifier that is assigned to a property in the meta element
Meta_name_shortDescription=meta 要素内のプロパティーに割り当てられた識別子。
#@EN@ Component Identifier
Meta_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
Meta_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Help Window
HelpWindow_displayName=ヘルプウィンドウ
#@EN@ The HelpWindow component displays a link that opens a popup window for a help  system. 
HelpWindow_shortDescription=HelpWindow コンポーネントはヘルプシステム用のポップアップウィンドウを開くリンクを表示します。 
#@EN@ Double Click Script
HelpWindow_onDblClick_displayName=ダブルクリックスクリプト
#@EN@ Scripting code executed when a mouse double click occurs over this  component. 
HelpWindow_onDblClick_shortDescription=このコンポーネント上でマウスがダブルクリックされたときに実行するスクリプトコード。 
#@EN@ Image Url
HelpWindow_imageURL_displayName=画像 URL
#@EN@ Absolute or relative URL to the image to be rendered. 
HelpWindow_imageURL_shortDescription=描画される画像の絶対 URL または相対 URL。 
#@EN@ Target
HelpWindow_target_displayName=ターゲット
#@EN@ The resource at the specified URL is displayed in the frame that is   specified with the target attribute
HelpWindow_target_shortDescription=指定された URL のリソースは、target 属性で指定されたフレーム内に表示されます。
#@EN@ URL Lang
HelpWindow_urlLang_displayName=URL 言語
#@EN@ The language code of the resource designated by this hyperlink. 
HelpWindow_urlLang_shortDescription=このハイパーリンクで指定されたリソースの言語コード。 
#@EN@ CSS Style Class(es)
HelpWindow_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
HelpWindow_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Help Set Path
HelpWindow_helpSetPath_displayName=ヘルプセットのパス
#@EN@ The context relative path to the help set to be displayed
HelpWindow_helpSetPath_shortDescription=表示するヘルプセットのコンテキスト相対パス
#@EN@ Height
HelpWindow_height_displayName=高さ
#@EN@ When specified, the width and height attributes tell the client browser to override the natural image or object size in favor of these values, specified in pixels
HelpWindow_height_shortDescription=width および height 属性を指定すると、クライアントブラウザは、画像またはオブジェクト本来のサイズではなく、ピクセル単位で指定されたこれらの値を優先します
#@EN@ Action Listener Expression
HelpWindow_actionListenerExpression_displayName=アクションリスナー式
#@EN@ Use the actionListenerExpression attribute to cause the component to fire  an event
HelpWindow_actionListenerExpression_shortDescription=actionListenerExpression 属性を使用して、コンポーネントにイベントを発生させることができます
#@EN@ Icon
HelpWindow_icon_displayName=アイコン
#@EN@ The identifier of the desired theme image. 
HelpWindow_icon_shortDescription=使用するテーマ画像の識別子。 
#@EN@ Vertical Space
HelpWindow_vspace_displayName=上下余白
#@EN@ Specifies the amount of white space in pixels to be inserted above and below the   image
HelpWindow_vspace_shortDescription=画像の上下に挿入する空白の量をピクセル単位で指定します
#@EN@ CSS Style(s)
HelpWindow_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
HelpWindow_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Border
HelpWindow_border_displayName=ボーダー
#@EN@ Specifies the width of the img border in pixels.  The default value for this attribute depends on the client browser 
HelpWindow_border_shortDescription=画像のボーダーの幅をピクセル単位で指定します。この属性のデフォルト値は、クライアントブラウザによって異なります 
#@EN@ URL
HelpWindow_url_displayName=URL
#@EN@ Absolute, relative, or context relative (starting with &quot;/&quot;) URL to the   resource selected by this hyperlink
HelpWindow_url_shortDescription=このハイパーリンクで選択されるリソースへの絶対 URL、相対 URL、またはコンテキスト相対 (&quot;/&quot; から始まる) URL
#@EN@ Help File
HelpWindow_helpFile_displayName=ヘルプファイル
#@EN@ The help file to be displayed in the help window content   frame when the help link is clicked
HelpWindow_helpFile_shortDescription=ヘルプリンクがクリックされたときにヘルプウィンドウの内容フレームに表示するヘルプファイル
#@EN@ Align
HelpWindow_Align_displayName=位置揃え
#@EN@ Align
HelpWindow_Align_shortDescription=位置揃え
#@EN@ Value
HelpWindow_value_displayName=値
#@EN@ The current value of this component
HelpWindow_value_shortDescription=このコンポーネントの現在の値
#@EN@ Type
HelpWindow_type_displayName=タイプ
#@EN@ The MIME content type of the resource specified by this component. 
HelpWindow_type_shortDescription=このコンポーネントで指定されたリソースの MIME コンテンツタイプ。 
#@EN@ Action Expression
HelpWindow_actionExpression_displayName=アクション式
#@EN@ MethodExpression representing the application action to invoke when this  component is activated by the user
HelpWindow_actionExpression_shortDescription=ユーザーがこのコンポーネントがアクティブにしたときに起動するアプリケーションアクションを表すメソッド式
#@EN@ Link Icon
HelpWindow_linkIcon_displayName=リンクアイコン
#@EN@ Set linkIcon to true to display the default icon in front of the   text for the help window link
HelpWindow_linkIcon_shortDescription=linkIcon 属性を True に設定すると、ヘルプウィンドウのリンクのテキストの前にデフォルトのアイコンが表示されます
#@EN@ Help Window Title
HelpWindow_windowTitle_displayName=ヘルプウィンドウのタイトル
#@EN@ The text to display in the browser window frame for the help window
HelpWindow_windowTitle_shortDescription=ヘルプウィンドウのブラウザウィンドウフレームに表示するテキスト
#@EN@ Alt Text
HelpWindow_alt_displayName=代替テキスト
#@EN@ Alternative textual description of the image rendered by this component
HelpWindow_alt_shortDescription=このコンポーネントによって描画される画像を説明する代替テキスト
#@EN@ text
HelpWindow_text_displayName=テキスト
#@EN@ The text to be displayed for the hyperlink. 
HelpWindow_text_shortDescription=ハイパーリンクに表示するテキスト。 
#@EN@ Immediate
HelpWindow_immediate_displayName=即時
#@EN@ Flag indicating that event handling for this component should be handled  immediately (in Apply Request Values phase) rather than waiting until   Invoke Application phase. 
HelpWindow_immediate_shortDescription=このコンポーネントのイベント処理が、「アプリケーションの起動」の段階まで待たずに、すぐに (「要求値の適用」段階で) 処理されることを示すフラグ。 
#@EN@ Horizontal Space
HelpWindow_hspace_displayName=左右余白
#@EN@ Specifies the amount of white space in pixels to be inserted to the left and   right of the image
HelpWindow_hspace_shortDescription=画像の左右に挿入する空白の量をピクセル単位で指定します
#@EN@ Visible
HelpWindow_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
HelpWindow_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ Link Text
HelpWindow_linkText_displayName=リンクテキスト
#@EN@ The text to display for the hyperlink that opens the help window. 
HelpWindow_linkText_shortDescription=ヘルプウィンドウを開くハイパーリンクに表示するテキスト。 
#@EN@ Text Position
HelpWindow_textPosition_displayName=テキストの位置
#@EN@ Specifies where the text will be placed relative to the image
HelpWindow_textPosition_shortDescription=テキストの配置先を画像に対する相対位置で指定します
#@EN@ Tree Node
TreeNode_displayName=ツリーノード
#@EN@ The TreeNode component is used to insert a node in a tree structure. 
TreeNode_shortDescription=TreeNode コンポーネントを使用して、ツリー構造にノードを挿入できます。 
#@EN@ Tool Tip
TreeNode_toolTip_displayName=ツールチップ
#@EN@ Sets the value of the title attribute for the HTML element.      The specified text will display as a tooltip if the mouse cursor hovers       over the HTML element. 
TreeNode_toolTip_shortDescription=HTML 要素の title 属性の値を設定します。指定したテキストは、マウスカーソルがこの HTML 要素上に置かれたときにツールチップとして表示されます。 
#@EN@ Image URL
TreeNode_imageURL_displayName=画像 URL
#@EN@ Absolute or relative URL to the image to be rendered for the tree node
TreeNode_imageURL_shortDescription=ツリーノードに描画される画像の絶対 URL または相対 URL
#@EN@ Hyperlink Action
TreeNode_actionExpression_displayName=ハイパーリンクアクション
#@EN@ The actionExpression attribute is used to specify the action to take when this  component is activated by the user
TreeNode_actionExpression_shortDescription=actionExpression 属性を使用して、このコンポーネントがユーザーによってアクティブにされたときに実行するアクションを指定できます
#@EN@ Hyperlink Target
TreeNode_target_displayName=ハイパーリンクターゲット
#@EN@ The resource at the specified URL is displayed in the frame that is         specified with the target attribute
TreeNode_target_shortDescription=指定された URL のリソースは、target 属性で指定されたフレーム内に表示されます。
#@EN@ Rendered Flag
TreeNode_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
TreeNode_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Component Identifier
TreeNode_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
TreeNode_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ CSS Style Class(es)
TreeNode_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this          component is rendered. 
TreeNode_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Text
TreeNode_text_displayName=テキスト
#@EN@ Specifies the text for this component
TreeNode_text_shortDescription=このコンポーネントのテキストを指定します
#@EN@ Action Listener Expression
TreeNode_actionListenerExpression_displayName=アクションリスナー式
#@EN@ The actionListenerExpression attribute is used to specify a method   to handle an action event that is triggered when a component is activated   by the user
TreeNode_actionListenerExpression_shortDescription=actionListenerExpression 属性を使用して、このコンポーネントがユーザーによってアクティブにされたときに発生するアクションイベントを処理するメソッドを指定できます
#@EN@ Expanded
TreeNode_expanded_displayName=展開
#@EN@ Set the expanded attribute to true to display the tree node as expanded when      the component is initially rendered
TreeNode_expanded_shortDescription=expanded 属性を True に設定すると、コンポーネントの初期描画時、ツリーノードが展開した状態で表示されます
#@EN@ CSS Style(s)
TreeNode_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this           component is rendered. 
TreeNode_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Visible
TreeNode_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be      viewable by the user in the rendered HTML page
TreeNode_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ Hyperlink Url
TreeNode_url_displayName=ハイパーリンク URL
#@EN@ Indicates that the text that is specified with the text attribute         should be rendered as a hyperlink that resolves to the specified URL
TreeNode_url_shortDescription=text 属性で指定されたテキストが、指定された URL を持つハイパーリンクとして描画されることを示します
#@EN@ WizardBranchSteps
WizardBranchSteps_displayName=ウィザード分岐ステップ
#@EN@ The WizardBranchSteps component groups a sequence of   {@link WizardStep WizardStep} children into a conditional branch.  This component has no visual representation in the wizard step list.  If this branch is taken, they steps appear as if they were  specified as children of the {@link Wizard Wizard} component. 
WizardBranchSteps_shortDescription=WizardBranchSteps コンポーネントは、一連の WizardStep を 1 つの条件付き分岐にグループ化します。ウィザードステップリストでは、このコンポーネントは視覚表現されません。この分岐が選ばれると、Wizard コンポーネントの子として指定されているかのように、そのステップが表示されます。
#@EN@ summary
WizardBranchSteps_summary_displayName=サマリー
#@EN@ A brief description of this step, to be used in the numbered  list of steps in the Steps pane. 
WizardBranchSteps_summary_shortDescription=このステップの簡単な説明。ステップ区画の番号付きステップリストに使用されます。 
#@EN@ Cancel Script
WizardBranchSteps_onCancel_displayName=取消しボタンスクリプト
#@EN@ Scripting code executed when the Cancel button is clicked. 
WizardBranchSteps_onCancel_shortDescription=「取消し」ボタンがクリックされたときに実行するスクリプトコード。 
#@EN@ title
WizardBranchSteps_title_displayName=タイトル
#@EN@ A descriptive title to be displayed as the Step Title  in the Step Content pane
WizardBranchSteps_title_shortDescription=ステップ内容区画にステップタイトルとして表示される記述タイトル
#@EN@ detail
WizardBranchSteps_detail_displayName=詳細
#@EN@ The detail attribute supplies the text that is to be  displayed in the Step Instructions area, before the input components  of the Step Content pane
WizardBranchSteps_detail_shortDescription=detail 属性を使用して、ステップ内容区画の入力コンポーネントの前に、ステップ説明領域に表示するテキストを指定できます
#@EN@ Finish Script
WizardBranchSteps_onFinish_displayName=完了ボタンスクリプト
#@EN@ Scripting code executed when the Finish button is clicked. 
WizardBranchSteps_onFinish_shortDescription=「完了」ボタンがクリックされたときに実行するスクリプトコード。 
#@EN@ Next Script
WizardBranchSteps_onNext_displayName=次へボタンスクリプト
#@EN@ Scripting code executed when the Next button is clicked. 
WizardBranchSteps_onNext_shortDescription=「次へ」ボタンがクリックされたときに実行するスクリプトコード。 
#@EN@ Step Link Script
WizardBranchSteps_onStepLink_displayName=ステップリンクスクリプト
#@EN@ Scripting code executed when a Step link is clicked. 
WizardBranchSteps_onStepLink_shortDescription=ステップリンクがクリックされたときに実行するスクリプトコード。 
#@EN@ results
WizardBranchSteps_results_displayName=結果
#@EN@ Set the results attribute to true when the wizard step  represents the View Results page
WizardBranchSteps_results_shortDescription=results 属性を True に設定すると、ウィザードステップは結果ページを表します
#@EN@ taken
WizardBranchSteps_taken_displayName=分岐
#@EN@ The taken attribute is used to evaluate whether the  steps of this branch sequence are displayed
WizardBranchSteps_taken_shortDescription=taken 属性を使用して、この分岐シーケンスのステップを表示するかどうかを指定できます
#@EN@ Component Identifier
WizardBranchSteps_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
WizardBranchSteps_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Close Script
WizardBranchSteps_onClose_displayName=閉じるボタンスクリプト
#@EN@ Scripting code executed when the Close button is clicked. 
WizardBranchSteps_onClose_shortDescription=「閉じる」ボタンがクリックされたときに実行するスクリプトコード。 
#@EN@ help
WizardBranchSteps_help_displayName=ヘルプ
#@EN@ Descriptive text that provides detailed help to the user  for this step
WizardBranchSteps_help_shortDescription=このステップの詳細なヘルプをユーザーに提供する説明テキスト
#@EN@ Help Tab Script
WizardBranchSteps_onHelpTab_displayName=ヘルプタブスクリプト
#@EN@ Scripting code executed when the Help tab is clicked. 
WizardBranchSteps_onHelpTab_shortDescription=「ヘルプ」タブがクリックされたときに実行するスクリプトコード。 
#@EN@ finish
WizardBranchSteps_finish_displayName=完了
#@EN@ Set the finish attribute to true when the wizard step  represents the Finish step
WizardBranchSteps_finish_shortDescription=finish 属性を True に設定すると、ウィザードステップは完了ステップを表します
#@EN@ Wizard Event Listener
WizardBranchSteps_eventListener_displayName=ウィザードイベントリスナー
#@EN@ The eventListener attribute is used to specify an  object to handle an event that is triggered when a user activates a   component in the step.  The eventListener attribute value must be a   JavaServer Faces EL expression that resolves to an instance  of com.sun.webui.jsf.event.WizardEventListener.    The return value of the wizard component's call to the  event listener's handleEvent() method controls the   processing of the current step, and determines whether the next step   or a previous step, etc
WizardBranchSteps_eventListener_shortDescription=eventListener 属性を使用して、ユーザーがステップ内でコンポーネントをアクティブにしたときに発生するイベントを処理するオブジェクトを指定できます。この属性の値は、com.sun.webui.jsf.event.WizardEventListener のインスタンスを解釈処理する JavaServer Faces の EL 式である必要があります。イベントリスナーの handleEvent() に対するウィザードコンポーネントの呼び出しの戻り値によって、現在実行されているステップが制御され、次のステップに進むか、前のステップに戻るかどうかなどが決定されます。
#@EN@ Steps Tab Script
WizardBranchSteps_onStepsTab_displayName=ステップタブスクリプト
#@EN@ Scripting code executed when the Steps tab is clicked. 
WizardBranchSteps_onStepsTab_shortDescription=「ステップ」タブがクリックされたときに実行するスクリプトコード。 
#@EN@ Previous Script
WizardBranchSteps_onPrevious_displayName=戻るボタンスクリプト
#@EN@ Scripting code executed when the Next button is clicked. 
WizardBranchSteps_onPrevious_shortDescription=「次へ」ボタンがクリックされたときに実行するスクリプトコード。 
#@EN@ Time Stamp
TimeStamp_displayName=タイムスタンプ
#@EN@ The TimeStamp component is used to display a text string that contains a time  stamp, which indicates the date and time that the current page was last  updated or displayed
TimeStamp_shortDescription=TimeStamp コンポーネントを使用して、タイムスタンプを含む文字列を表示できます。タイムスタンプは、現在のページが最後に更新または表示された日時を示します
#@EN@ Value
TimeStamp_value_displayName=値
#@EN@ The current value of this component
TimeStamp_value_shortDescription=このコンポーネントの現在の値
#@EN@ CSS Style Class(es)
TimeStamp_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
TimeStamp_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Text
TimeStamp_text_displayName=テキスト
#@EN@ The text to display for this time stamp
TimeStamp_text_shortDescription=このタイムスタンプに表示するテキスト
#@EN@ Converter
TimeStamp_converter_displayName=コンバータ
#@EN@ Converter instance registered with this component.
TimeStamp_converter_shortDescription=このコンポーネントに登録されているコンバータのインスタンス。
#@EN@ Visible
TimeStamp_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
TimeStamp_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ CSS Style(s)
TimeStamp_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
TimeStamp_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Rendered Flag
TimeStamp_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
TimeStamp_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Component Identifier
TimeStamp_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
TimeStamp_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ ProgressBar
ProgressBar_displayName=進捗バー
#@EN@ The ProgressBar component is used to create a progress indicator.    Progress Bar component consists of three progress bar designs: &quot;Simple  Determinate&quot;, &quot;Indeterminate&quot; and a &quot;Busy&quot; indicator
ProgressBar_shortDescription=ProgressBar コンポーネントを使用して、進捗インジケータを作成できます。このコンポーネントは 3 つの進捗バーで構成され、&quot;Simple Determinate&quot;、&quot;Indeterminate&quot;、&quot;Busy&quot; インジケータがあります
#@EN@ toolTip Text
ProgressBar_toolTip_displayName=ツールチップテキスト
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
ProgressBar_toolTip_shortDescription=HTML 要素の title 属性の値を設定します。指定したテキストは、マウスカーソルがこの HTML 要素上に置かれたときにツールチップとして表示されます。 
#@EN@ Failed State Text
ProgressBar_failedStateText_displayName=失敗ステータステキスト
#@EN@ Text to be displayed along with an icon when the task fails
ProgressBar_failedStateText_shortDescription=タスクの実行に失敗したときにアイコンと共に表示するテキスト
#@EN@ Value
ProgressBar_value_displayName=値
#@EN@ The current value of this component
ProgressBar_value_shortDescription=このコンポーネントの現在の値
#@EN@ Bar Width
ProgressBar_width_displayName=バーの幅
#@EN@ Number of pixels for the width of the progress bar animation
ProgressBar_width_shortDescription=進捗バーアニメーションの幅 (ピクセル単位)
#@EN@ Converter
ProgressBar_converter_displayName=コンバータ
#@EN@ Converter instance registered with this component.
ProgressBar_converter_shortDescription=このコンポーネントに登録されているコンバータのインスタンス。
#@EN@ ProgressBar Type
ProgressBar_type_displayName=進捗バータイプ
#@EN@ Type of progress bar
ProgressBar_type_shortDescription=進捗バーのタイプ
#@EN@ Refresh Rate
ProgressBar_refreshRate_displayName=再表示レート
#@EN@ The number of milliseconds between updates to the progress bar
ProgressBar_refreshRate_shortDescription=進捗バーの更新間隔 (ミリ秒単位)
#@EN@ Rendered Flag
ProgressBar_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
ProgressBar_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Status Text
ProgressBar_status_displayName=ステータステキスト
#@EN@ Text to be displayed at the bottom of the progress bar, for the status of the operation. 
ProgressBar_status_shortDescription=進捗バーの最下部に表示する、処理状態を示すテキスト。 
#@EN@ Progress
ProgressBar_progress_displayName=進捗
#@EN@ An integer that indicates the completion percentage of the task. 
ProgressBar_progress_shortDescription=タスクの完了パーセンテージを示す整数。 
#@EN@ Component Identifier
ProgressBar_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
ProgressBar_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Image Url
ProgressBar_progressImageUrl_displayName=画像 URL
#@EN@ URL to an image to use instead of the default image for the progress indicator. 
ProgressBar_progressImageUrl_shortDescription=進捗インジケータのデフォルト画像の代わりに使用する画像の URL。 
#@EN@ HTML Template
ProgressBar_htmlTemplate_displayName=HTML テンプレート
#@EN@ Alternative HTML template to be used by this component. 
ProgressBar_htmlTemplate_shortDescription=このコンポーネントで使用される代替 HTML テンプレート。 
#@EN@ CSS Style Class(es)
ProgressBar_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this  component is rendered. 
ProgressBar_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Bar Height
ProgressBar_height_displayName=バーの高さ
#@EN@ Number of pixels for the height of the progress bar animation.  The default is 14
ProgressBar_height_shortDescription=進捗バーアニメーションの高さ (ピクセル単位)。デフォルトは 14 です
#@EN@ Log Message
ProgressBar_logMessage_displayName=ログメッセージ
#@EN@ Text to be displayed in a text area at the bottom of the   progress bar component
ProgressBar_logMessage_shortDescription=進捗バーコンポーネントの最下部のテキスト領域に表示するテキスト
#@EN@ Is overlayAnimation
ProgressBar_overlayAnimation_displayName=オーバーレイアニメーション
#@EN@ Set to true to display the operation progress text superimposed on the  progress bar animation
ProgressBar_overlayAnimation_shortDescription=True に設定すると、進捗バーアニメーションの上に処理の進捗状況に関するスーパーインポーズテキストを表示できます
#@EN@ description
ProgressBar_description_displayName=説明
#@EN@ Text to describe the operation that is monitored by the progress bar
ProgressBar_description_shortDescription=進捗バーがモニターする処理を説明するテキスト
#@EN@ Visible
ProgressBar_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
ProgressBar_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ CSS Style(s)
ProgressBar_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this  component is rendered. 
ProgressBar_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Tab Index
ProgressBar_tabIndex_displayName=タブ索引
#@EN@ Position of this element in the tabbing order of the current document.  Tabbing order determines the sequence in which elements receive  focus when the tab key is pressed
ProgressBar_tabIndex_shortDescription=現在のドキュメントのタブ順でのこの要素の位置。タブ順序によって、Tab キーが押されたときに要素がフォーカスを得る順序が決まります
#@EN@ Task State
ProgressBar_taskState_displayName=タスクの状態
#@EN@ A string representing the state of the task associated with this progress bar.  Valid values are:  not_started  running  paused  resumed  stopped  canceled  failed  completed 
ProgressBar_taskState_shortDescription=この進捗バーに関連付けられたタスクの状態を表す文字列。有効な値は、「not_started」、「running」、「paused」、「resumed」、「stopped」、「canceled」、「failed」、「completed」です
#@EN@ Orderable List
OrderableList_displayName=並べ替え可能なリスト
#@EN@ The OrderableList component creates a list with buttons allowing the user to   change the order of the list items.   This tag renders an OrderableList component
OrderableList_shortDescription=OrderableList コンポーネントは、ユーザーがリスト項目の順序を変更することを可能にするボタンを含むリストを作成します。このタグは OrderableList コンポーネントを描画します
#@EN@ List
OrderableList_list_displayName=リスト
#@EN@ The object that represents the list of items
OrderableList_list_shortDescription=項目のリストを表すオブジェクト
#@EN@ Tool Tip
OrderableList_toolTip_displayName=ツールチップ
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
OrderableList_toolTip_shortDescription=HTML 要素の title 属性の値を設定します。指定したテキストは、マウスカーソルがこの HTML 要素上に置かれたときにツールチップとして表示されます。 
#@EN@ Value
OrderableList_value_displayName=値
#@EN@ The current value of this component
OrderableList_value_shortDescription=このコンポーネントの現在の値
#@EN@ Number of Items to Display
OrderableList_rows_displayName=表示項目数
#@EN@ The number of rows to display, which determines the length of the   rendered listbox
OrderableList_rows_shortDescription=表示する行数。この行数によって、描画されるリストボックスの長さが決まります
#@EN@ Label on Top
OrderableList_labelOnTop_displayName=ラベルを上に
#@EN@ If this attribute is true, the label is rendered above the  component
OrderableList_labelOnTop_shortDescription=この属性が True の場合、ラベルはコンポーネントの上に描画されます
#@EN@ Multiple
OrderableList_multiple_displayName=複数
#@EN@ Flag indicating that the application user can make select  	more than one option from the listbox. 
OrderableList_multiple_shortDescription=アプリケーションユーザーが、リストボックスから一度に複数のオプションを選択できることを示すフラグ。
#@EN@ Disabled
OrderableList_disabled_displayName=使用不可
#@EN@ Flag indicating that activation of this component by the user is not currently permitted. 
OrderableList_disabled_shortDescription=ユーザーによるこのコンポーネントの起動が、現在許可されていないことを示すフラグ。 
#@EN@ CSS Style Class(es)
OrderableList_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
OrderableList_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ List Label
OrderableList_label_displayName=リストラベル
#@EN@ If set, a label is rendered adjacent to the component with the  value of this attribute as the label text. 
OrderableList_label_shortDescription=設定すると、この属性の値をラベルテキストに持つラベルがコンポーネントの近くに描画されます。 
#@EN@ Move Top and Bottom
OrderableList_moveTopBottom_displayName=先頭および末尾へ移動ボタン
#@EN@ If this attribute is true, the Move to Top and Move to Bottom  buttons are shown
OrderableList_moveTopBottom_shortDescription=この属性が True の場合、「先頭へ移動」と「末尾へ移動」ボタンが表示されます
#@EN@ CSS Style(s)
OrderableList_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
OrderableList_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Visible
OrderableList_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
OrderableList_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ Label Level
OrderableList_labelLevel_displayName=ラベルレベル
#@EN@ Sets the style level for the generated labels
OrderableList_labelLevel_shortDescription=生成されるラベルのスタイルレベルを設定します
#@EN@ Read-only
OrderableList_readOnly_displayName=読み取り専用
#@EN@ If this attribute is set to true, the value of the component is  rendered as text, preceded by the label if one was defined. 
OrderableList_readOnly_shortDescription=この属性が True の場合、コンポーネントの値はテキストとして描画され、ラベルが定義されている場合はラベルが前に付きます。 
#@EN@ Tab Index
OrderableList_tabIndex_displayName=タブ索引
#@EN@ Position of this element in the tabbing order for the current  document
OrderableList_tabIndex_shortDescription=現在のドキュメントのタブ順でのこの要素の位置
#@EN@ Text Field
TextField_displayName=テキストフィールド
#@EN@ The TextField component renders input HTML element.    TextField Component class represents text input element.    As part of the dynamic behavior, TextField supports auto-validation, where  entered data is automatically validated through the ajax call to the server.  When validating data through the ajax-based mechanism, the UPDATE_MODEL_VALUES  stage of the lifecycle is skipped ( see processUpdates). 
TextField_shortDescription=TextField コンポーネントは、HTML 入力要素を描画します。TextField コンポーネントクラスは、テキスト入力要素を表します。動的動作の一部として、TextField は autoValidation をサポートしています。入力されたデータはサーバーへの AJAX 呼び出しを通じて自動的に検証されます。AJAX の機能に基づくデータの検証時には、ライフサイクルの UPDATE_MODEL_VALUES ステージは省略されます （processUpdates を参照)。 
#@LC@ ### New message ###
#@EN@ Submit Form
TextField_submitForm_displayName=送信フォーム
#@LC@ ### New message ###
#@EN@ Flag indicating whether pressing enter in this text field would allow  browser to submit the enclosing form ( for all input fields with the exception of TextArea  which uses enter key to open a new line)        If set to false, the browser will be prevented from submitting the form on enter in all circumstances.  If set to true, the form will be submitted on enter in all circumstances.  The default value for this attribute is &quot;false&quot;, i.e.  default browser auto submit feature will be disabled
TextField_submitForm_shortDescription=このテキストフィールドで Enter キーを押したときに、ブラウザがフォームを送信するかどうかを示すフラグ。新規行を開くために Enter キーを使用する TextArea 以外のすべての入力フィールドに適用されます。False に設定すると、ブラウザは、どんな状況で Enter キーを押されてもフォームを送信しません。True に設定すると、どんな状況で Enter キーを押されてもフォームを送信します。この属性のデフォルト値は &quot;False&quot; で、デフォルトのブラウザの自動送信機能は無効になっています。
#@EN@ AutoValidate
TextField_autoValidate_displayName=AutoValidate
#@LC@ ### New message ###
#@EN@ Attribute indicating to turn on/off the autovalidate functionality of the TextField.  Autovalidate would trigger the AJAX request to the validator on the component.  Setting autoValidate neccessitates that component is ajaxified, and so it will  be accomplished automatically when autoValidate is set to true.    Autovalidate will submit the content of the text field for server side processing that  will be processed using JSFX partial lifecycle cycle
TextField_autoValidate_shortDescription=TextField の autovalidate 機能のオンまたはオフを示す属性です。autovalidate 機能は、コンポーネント上のバリデータへの AJAX 要求を引き起こします。autoValidate を設定するには、コンポーネントが ajaxify されている必要があります。これにより、autoValidate が True に設定されたときに自動的に実行できるようになります。autoValidate は、テキストフィールドの内容をサーバー側で処理するために、JSFX 部分ライフサイクルを使用して送信します。
#@EN@ Components
TextField_notify_displayName=コンポーネント
#@EN@ The comma separated list of absolute client IDs to notify during  text field events.    Currently, this feature is only supported by label and alert components
TextField_notify_shortDescription=テキストフィールドイベント中の通知に使用する絶対クライアント ID をコンマで区切ったリスト。現在は、この機能はラベルコンポーネントおよび警告コンポーネントでのみサポートされています。
#@EN@ Field
Field_displayName=フィールド
#@EN@ Represents an input field whose content will be included when the surrounding  form is submitted. 
Field_shortDescription=周囲のフォームが送信されるときに、その内容が取り込まれる入力フィールドを表します。 
#@EN@ Double Click Script
Field_onDblClick_displayName=ダブルクリックスクリプト
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
Field_onDblClick_shortDescription=このコンポーネント上でマウスがダブルクリックされたときに実行するスクリプトコード。 
#@EN@ Trim
Field_trim_displayName=トリム
#@EN@ Flag indicating that any leading and trailing blanks will be  trimmed prior to conversion to the destination data type.  Default value is true. 
Field_trim_shortDescription=対象のデータタイプに変換する前に、前後の余分な空白をすべて削除することを示すフラグ。デフォルト値は True です。 
#@EN@ Key Press Script
Field_onKeyPress_displayName=キー押下スクリプト
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
Field_onKeyPress_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押して放したときに実行するスクリプトコード。 
#@EN@ Text Selected Script
Field_onSelect_displayName=テキスト選択スクリプト
#@EN@ Scripting code executed when some text in this  component value is selected. 
Field_onSelect_shortDescription=このコンポーネント値のテキストが選択されたときに実行するスクリプトコード。 
#@EN@ Focus Script
Field_onFocus_displayName=フォーカススクリプト
#@EN@ Scripting code executed when this component  receives focus
Field_onFocus_shortDescription=このコンポーネントがフォーカスを得たときに実行するスクリプトコード
#@EN@ Columns
Field_columns_displayName=文字数
#@EN@ Number of character columns used to render this  field
Field_columns_shortDescription=このフィールドの描画に使用する文字数。
#@EN@ Key Up Script
Field_onKeyUp_displayName=キーアップスクリプト
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
Field_onKeyUp_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを放したときに実行するスクリプトコード。 
#@EN@ Mouse Up Script
Field_onMouseUp_displayName=マウスアップスクリプト
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
Field_onMouseUp_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを放したときに実行するスクリプトコード。 
#@EN@ CSS Style Class(es)
Field_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this  component is rendered. 
Field_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ CSS Style(s)
Field_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this  component is rendered. 
Field_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Click Script
Field_onClick_displayName=クリックスクリプト
#@EN@ Scripting code executed when a mouse click  occurs over this component. 
Field_onClick_shortDescription=このコンポーネント上でマウスがクリックされたときに実行するスクリプトコード。 
#@EN@ Blur Script
Field_onBlur_displayName=フォーカスオフスクリプト
#@EN@ Scripting code executed when this element loses focus. 
Field_onBlur_shortDescription=このコンポーネントがフォーカスを失ったときに実行するスクリプトコード。 
#@EN@ Mouse Down Script
Field_onMouseDown_displayName=マウスダウンスクリプト
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
Field_onMouseDown_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを押したときに実行するスクリプトコード。 
#@EN@ Tool Tip
Field_toolTip_displayName=ツールチップ
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers  over the HTML element. 
Field_toolTip_shortDescription=HTML 要素の title 属性の値を設定します。指定したテキストは、マウスカーソルがこの HTML 要素上に置かれたときにツールチップとして表示されます。 
#@EN@ Value
Field_value_displayName=値
#@EN@ The current value of this component
Field_value_shortDescription=このコンポーネントの現在の値
#@EN@ Maximum Length
Field_maxLength_displayName=最大長
#@EN@ The maximum number of characters that can be entered for this field. 
Field_maxLength_shortDescription=このフィールドに入力可能な最大文字数。 
#@EN@ Required
Field_required_displayName=必須
#@EN@ Flag indicating that an input value for this field is mandatory, and  failure to provide one will trigger a validation error. 
Field_required_shortDescription=このフィールドへの値の入力を必須にすることを示すフラグで、入力が失敗すると妥当性検査エラーを発生させます。 
#@EN@ Disabled
Field_disabled_displayName=使用不可
#@EN@ Flag indicating that the user is not permitted to activate this  component, and that the component's value will not be submitted with the  form. 
Field_disabled_shortDescription=ユーザーがこのコンポーネントをアクティブにすることを禁止し、コンポーネントの値がフォームで送信されないことを示すフラグ 
#@EN@ Mouse Out Script
Field_onMouseOut_displayName=マウスアウトスクリプト
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
Field_onMouseOut_shortDescription=このコンポーネントの外にマウスカーソルが移動したときに実行するスクリプトコード。 
#@EN@ Mouse In Script
Field_onMouseOver_displayName=マウスインスクリプト
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
Field_onMouseOver_shortDescription=このコンポーネント内に、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ Mouse Move Script
Field_onMouseMove_displayName=マウス移動スクリプト
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
Field_onMouseMove_shortDescription=コンポーネント内で、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ Text
Field_text_displayName=テキスト
#@EN@ Literal value to be rendered in this input field.  If this property is specified by a value binding  expression, the corresponding value will be updated  if validation succeeds. 
Field_text_shortDescription=この入力フィールドに描画されるリテラル値。このプロパティーが値バインド式によって指定される場合、妥当性検査が成功すると対応する値が更新されます。 
#@EN@ Label
Field_label_displayName=ラベル
#@EN@ If set, a label is rendered adjacent to the component with the  value of this attribute as the label text. 
Field_label_shortDescription=設定すると、この属性の値をラベルテキストに持つラベルがコンポーネントの近くに描画されます。 
#@EN@ Value Change Script
Field_onChange_displayName=値変更スクリプト
#@EN@ Scripting code executed when the element  value of this component is changed. 
Field_onChange_shortDescription=このコンポーネントの値が変更されたときに実行するスクリプトコード。 
#@EN@ Visible
Field_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page. 
Field_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます。 
#@EN@ Key Down Script
Field_onKeyDown_displayName=キーダウンスクリプト
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
Field_onKeyDown_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押したときに実行するスクリプトコード。 
#@EN@ Label Level
Field_labelLevel_displayName=ラベルレベル
#@EN@ Sets the style level for the generated label, provided the  label attribute has been set
Field_labelLevel_shortDescription=label 属性が設定されている場合に、生成されるラベルに対するスタイルレベルを設定します
#@EN@ Read Only
Field_readOnly_displayName=読み取り専用
#@EN@ Flag indicating that modification of this component by the  user is not currently permitted, but that it will be  included when the form is submitted. 
Field_readOnly_shortDescription=ユーザーによるこのコンポーネントの変更が現在許可されていないが、フォームの送信時にコンポーネントを含めることを示すフラグ。 
#@EN@ Tab Index
Field_tabIndex_displayName=タブ索引
#@EN@ Position of this element in the tabbing order of the current document.  Tabbing order determines the sequence in which elements receive  focus when the tab key is pressed
Field_tabIndex_shortDescription=現在のドキュメントのタブ順でのこの要素の位置。タブ順序によって、Tab キーが押されたときに要素がフォーカスを得る順序が決まります
#@EN@ Checkbox Group
CheckboxGroup_displayName=チェックボックスグループ
#@EN@ The CheckboxGroup component is used to display a group of checkboxes  in a grid layout. 
CheckboxGroup_shortDescription=CheckboxGroup コンポーネントを使用して、グリッドレイアウトにチェックボックスのグループを表示できます。 
#@EN@ HTML Template
CheckboxGroup_htmlTemplate_displayName=HTML テンプレート
#@EN@ Alternative HTML template to be used by this component. 
CheckboxGroup_htmlTemplate_shortDescription=このコンポーネントで使用される代替 HTML テンプレート。 
#@EN@ Value
CheckboxGroup_value_displayName=値
#@EN@ The current value of this component
CheckboxGroup_value_shortDescription=このコンポーネントの現在の値
#@EN@ Text Selected Script
CheckboxGroup_onSelect_displayName=テキスト選択スクリプト
#@EN@ Scripting code executed when some text in this  component value is selected. 
CheckboxGroup_onSelect_shortDescription=このコンポーネント値のテキストが選択されたときに実行するスクリプトコード。 
#@EN@ Value Change Script
CheckboxGroup_onChange_displayName=値変更スクリプト
#@EN@ Scripting code executed when the element  value of this component is changed. 
CheckboxGroup_onChange_shortDescription=このコンポーネントの値が変更されたときに実行するスクリプトコード。 
#@EN@ Focus Script
CheckboxGroup_onFocus_displayName=フォーカススクリプト
#@EN@ Scripting code executed when this component  receives focus
CheckboxGroup_onFocus_shortDescription=このコンポーネントがフォーカスを得たときに実行するスクリプトコード
#@EN@ Visible
CheckboxGroup_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
CheckboxGroup_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ Columns
CheckboxGroup_columns_displayName=文字数
#@EN@ Defines how many columns may be used to lay out the check boxes.  The value must be greater than or equal to one
CheckboxGroup_columns_shortDescription=チェックボックスのレイアウトに使用する列数を指定します。値は 1 以上である必要があります
#@EN@ Blur Script
CheckboxGroup_onBlur_displayName=フォーカスオフスクリプト
#@EN@ Scripting code executed when this element loses focus. 
CheckboxGroup_onBlur_shortDescription=このコンポーネントがフォーカスを失ったときに実行するスクリプトコード。 
#@EN@ Hyperlink
Hyperlink_displayName=ハイパーリンク
#@EN@ Use the webuijsf:hyperlink tag to display a HTML hyperlink to a URL, or a  link that submits a form
Hyperlink_shortDescription=webuijsf:hyperlink タグを使用して、URL への HTML ハイパーリンクまたはフォームを送信するリンクを表示できます
#@EN@ Double Click Script
Hyperlink_onDblClick_displayName=ダブルクリックスクリプト
#@EN@ Scripting code executed when a mouse double click  occurs over this component. 
Hyperlink_onDblClick_shortDescription=このコンポーネント上でマウスがダブルクリックされたときに実行するスクリプトコード。 
#@EN@ Key Press Script
Hyperlink_onKeyPress_displayName=キー押下スクリプト
#@EN@ Scripting code executed when the user presses and releases a key while  the component has focus. 
Hyperlink_onKeyPress_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押して放したときに実行するスクリプトコード。 
#@EN@ Shape
Hyperlink_shape_displayName=形状
#@EN@ The shape of the hot spot on the screen (for use in client-side image   maps)
Hyperlink_shape_shortDescription=画面上のホットスポットの形状 (クライアント側の画像マップに使用)。
#@EN@ Target
Hyperlink_target_displayName=ターゲット
#@EN@ The resource at the specified URL is displayed in the frame that is   specified with the target attribute
Hyperlink_target_shortDescription=指定された URL のリソースは、target 属性で指定されたフレーム内に表示されます。
#@EN@ Focus Script
Hyperlink_onFocus_displayName=フォーカススクリプト
#@EN@ Scripting code executed when this component  receives focus
Hyperlink_onFocus_shortDescription=このコンポーネントがフォーカスを得たときに実行するスクリプトコード
#@EN@ URL Lang
Hyperlink_urlLang_displayName=URL 言語
#@EN@ The language code of the resource designated by this hyperlink. 
Hyperlink_urlLang_shortDescription=このハイパーリンクで指定されたリソースの言語コード。 
#@EN@ Key Up Script
Hyperlink_onKeyUp_displayName=キーアップスクリプト
#@EN@ Scripting code executed when the user releases a key while the  component has focus. 
Hyperlink_onKeyUp_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを放したときに実行するスクリプトコード。 
#@EN@ Mouse Up Script
Hyperlink_onMouseUp_displayName=マウスアップスクリプト
#@EN@ Scripting code executed when the user releases a mouse button while  the mouse pointer is on the component. 
Hyperlink_onMouseUp_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを放したときに実行するスクリプトコード。 
#@EN@ CSS Style Class(es)
Hyperlink_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Hyperlink_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ CSS Style(s)
Hyperlink_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Hyperlink_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ URL
Hyperlink_url_displayName=URL
#@EN@ Absolute, relative, or context relative (starting with &quot;/&quot;) URL to the   resource selected by this hyperlink
Hyperlink_url_shortDescription=このハイパーリンクで選択されるリソースへの絶対 URL、相対 URL、またはコンテキスト相対 (&quot;/&quot; から始まる) URL
#@EN@ Click Script
Hyperlink_onClick_displayName=クリックスクリプト
#@EN@ Scripting code executed when a mouse click occurs over this component.  If the component submits the form (by using the action attribute), the   script that you use with the onClick attribute should not return from   the function
Hyperlink_onClick_shortDescription=このコンポーネント上でマウスがクリックされたときに実行するスクリプトコード。コンポーネントが action 属性を使ってフォームを送信する場合、onClick 属性で使用するスクリプトは、関数から復帰してはなりません
#@EN@ Blur Script
Hyperlink_onBlur_displayName=フォーカスオフスクリプト
#@EN@ Scripting code executed when this element loses focus. 
Hyperlink_onBlur_shortDescription=このコンポーネントがフォーカスを失ったときに実行するスクリプトコード。 
#@EN@ Mouse Down Script
Hyperlink_onMouseDown_displayName=マウスダウンスクリプト
#@EN@ Scripting code executed when the user presses a mouse button while the  mouse pointer is on the component. 
Hyperlink_onMouseDown_shortDescription=マウスカーソルがコンポーネント上にある状態で、ユーザーがマウスボタンを押したときに実行するスクリプトコード。 
#@EN@ Tool Tip
Hyperlink_toolTip_displayName=ツールチップ
#@EN@ Sets the value of the title attribute for the HTML element.  The specified text will display as a tooltip if the mouse cursor hovers   over the HTML element. 
Hyperlink_toolTip_shortDescription=HTML 要素の title 属性の値を設定します。指定したテキストは、マウスカーソルがこの HTML 要素上に置かれたときにツールチップとして表示されます。 
#@EN@ Value
Hyperlink_value_displayName=値
#@EN@ The current value of this component
Hyperlink_value_shortDescription=このコンポーネントの現在の値
#@EN@ Type
Hyperlink_type_displayName=タイプ
#@EN@ The MIME content type of the resource specified by this component. 
Hyperlink_type_shortDescription=このコンポーネントで指定されたリソースの MIME コンテンツタイプ。 
#@EN@ Disabled
Hyperlink_disabled_displayName=使用不可
#@EN@ Flag indicating that clicking of this component by the user is not  currently permitted
Hyperlink_disabled_shortDescription=ユーザーがこのコンポーネントをクリックすることが、現在許可されていないことを示すフラグ
#@EN@ Mouse Out Script
Hyperlink_onMouseOut_displayName=マウスアウトスクリプト
#@EN@ Scripting code executed when a mouse out movement  occurs over this component. 
Hyperlink_onMouseOut_shortDescription=このコンポーネントの外にマウスカーソルが移動したときに実行するスクリプトコード。 
#@EN@ Mouse In Script
Hyperlink_onMouseOver_displayName=マウスインスクリプト
#@EN@ Scripting code executed when the user moves the  mouse pointer into  the boundary of this component. 
Hyperlink_onMouseOver_shortDescription=このコンポーネント内に、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ Mouse Move Script
Hyperlink_onMouseMove_displayName=マウス移動スクリプト
#@EN@ Scripting code executed when the user moves the mouse pointer while  over the component. 
Hyperlink_onMouseMove_shortDescription=コンポーネント内で、ユーザーがマウスカーソルを移動したときに実行するスクリプトコード。 
#@EN@ HTML Template
Hyperlink_htmlTemplate_displayName=HTML テンプレート
#@EN@ Alternative HTML template to be used by this component. 
Hyperlink_htmlTemplate_shortDescription=このコンポーネントで使用される代替 HTML テンプレート。 
#@EN@ text
Hyperlink_text_displayName=テキスト
#@EN@ The text to be displayed for the hyperlink. 
Hyperlink_text_shortDescription=ハイパーリンクに表示するテキスト。 
#@EN@ Visible
Hyperlink_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
Hyperlink_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ Key Down Script
Hyperlink_onKeyDown_displayName=キーダウンスクリプト
#@EN@ Scripting code executed when the user presses down on a key while the  component has focus. 
Hyperlink_onKeyDown_shortDescription=コンポーネントにフォーカスがある状態で、ユーザーがキーを押したときに実行するスクリプトコード。 
#@EN@ Tab Index
Hyperlink_tabIndex_displayName=タブ索引
#@EN@ Position of this element in the tabbing order of the current document
Hyperlink_tabIndex_shortDescription=現在のドキュメントのタブ順でのこの要素の位置
#@EN@ Text Area
TextArea_displayName=テキスト領域
#@EN@ The TextArea component is used to create a multiple-line input field for  text.  As part of the dynamic behavior, TextArea supports autoSave: when enabled,  the content of the TextArea will be saved / submitted via ajax call to the server  every number of autoSave milliseconds
TextArea_shortDescription=TextArea コンポーネントを使用して、複数行のテキスト入力フィールドを作成できます。動的動作の一部として、TextArea は autoSave をサポートしています。有効にすると、TextArea の内容は保存され、AJAX 呼び出しを通じて、autoSave で設定された時間（ミリ秒）ごとにサーバーに送信されます
#@LC@ ### New message ###
#@EN@ Submit Form
TextArea_submitForm_displayName=送信フォーム
#@LC@ ### New message ###
#@EN@ SubmitForm attribute is disabled for TextArea.  TextArea uses enter key to open new line.    
TextArea_submitForm_shortDescription=SubmitForm 属性は、TextArea では無効です。TextArea では、Enter キーは新規行を開くために使用します。    
#@EN@ Maximum Length
TextArea_maxLength_displayName=最大長
#@EN@ The maximum number of characters that can be entered for this field. 
TextArea_maxLength_shortDescription=このフィールドに入力可能な最大文字数。 
#@EN@ Rows
TextArea_rows_displayName=行数
#@EN@ Number of rows used to render the textarea
TextArea_rows_shortDescription=テキスト領域の描画に使用する行数
#@EN@ AutoSave
TextArea_autoSave_displayName=autoSave
#@LC@ ### Update message ###
#@EN@ Attribute indicating to turn on/off the Auto-save  functionality of the TextArea.    Auto-save will submit the content of the modified textArea for server side  processing that will be processed using JSFX partial lifecycle cycle.  Only modified data will be submitted, that is textArea data will be  submitted every autoSave milliseconds only if it has been modified within  last interval.     AutoSave is specified in milliseconds
TextArea_autoSave_shortDescription=TextArea の Auto-save 機能のオンまたはオフを示す属性です。Auto-save 機能は、textArea の変更内容をサーバー側で処理するために、JSFX 部分ライフサイクルを使用して送信します。つまり、textArea のデータは、autoSave で設定されたミリ秒ごとにチェックされ、変更があった場合にのみ、変更されたデータだけが送信されます。AutoSave はミリ秒単位で指定します
#@EN@ Link
Link_displayName=リンク
#@EN@ The Link component is iused to insert information into the &lt;head&gt;   element, such as links to external stylesheets. 
Link_shortDescription=Link コンポーネントを使用して、&lt;head&gt; 要素に外部スタイルシートへのリンクなどの情報を挿入できます。 
#@EN@ Mime type
Link_type_displayName=MIME タイプ
#@EN@ Specifies the MIME type of the target URL
Link_type_shortDescription=ターゲット URL の MIME タイプを指定します
#@EN@ Rel
Link_rel_displayName=関係
#@EN@ Defines the relationship between the current document and the   targeted document
Link_rel_shortDescription=現在のドキュメントとターゲットドキュメントとの関係を定義します
#@EN@ Media Type
Link_media_displayName=メディアタイプ
#@EN@ Specifies the type of display device for which the referenced document   is designed
Link_media_shortDescription=参照先ドキュメントのデザインの前提となっている表示デバイスのタイプを指定します
#@EN@ URL
Link_url_displayName=URL
#@EN@ The absolute or relative target URL of the resource. 
Link_url_shortDescription=リソースの絶対または相対ターゲット URL。 
#@EN@ Rendered Flag
Link_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Link_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Charset
Link_charset_displayName=文字セット
#@EN@ Defines the character (charset) encoding of the target URL
Link_charset_shortDescription=ターゲット URL の文字 (文字セット) エンコーディングを定義します
#@EN@ URL Language
Link_urlLang_displayName=URL 言語
#@EN@ Defines the ISO language code of the human language used in the target   URL file
Link_urlLang_shortDescription=ターゲット URL ファイルで使用される自然言語の ISO 言語コードを定義します
#@EN@ Component Identifier
Link_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
Link_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ MastFooter Section
MastFooter_displayName=マストフッターセクション
#@EN@ @author deep 
MastFooter_shortDescription=@author deep  
#@EN@ Corporate Image Height
MastFooter_corporateImageHeight_displayName=企業画像の高さ
#@EN@ The height to use for the Corporate Image, in pixels
MastFooter_corporateImageHeight_shortDescription=企業画像に使用する高さ (ピクセル単位)
#@EN@ Corporate Image Width
MastFooter_corporateImageWidth_displayName=企業画像の幅
#@EN@ The width to use for the Corporate Image URL, in pixels
MastFooter_corporateImageWidth_shortDescription=企業画像に使用する幅 (ピクセル単位)
#@EN@ CSS Style Class(es)
MastFooter_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
MastFooter_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Visible
MastFooter_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
MastFooter_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ CSS Style(s)
MastFooter_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
MastFooter_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Corporate Image Description
MastFooter_corporateImageDescription_displayName=企業画像の説明
#@EN@ The description for the Corporate Image, used as alt text for the image. 
MastFooter_corporateImageDescription_shortDescription=企業画像の代替テキストとして使用する説明。 
#@EN@ Rendered Flag
MastFooter_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
MastFooter_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Corporate Image URL
MastFooter_corporateImageURL_displayName=企業画像の URL
#@EN@ The url to the image file to use for the Corporate Image
MastFooter_corporateImageURL_shortDescription=企業画像に使用する画像ファイルの URL
#@EN@ Component Identifier
MastFooter_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
MastFooter_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Legend
Legend_displayName=説明
#@EN@ The Legend component displays a legend to explain icons used in a page. 
Legend_shortDescription=Legend コンポーネントは、ページ中で使用するアイコンに関する説明を提供します。 
#@EN@ Value
Legend_value_displayName=値
#@EN@ The current value of this component
Legend_value_shortDescription=このコンポーネントの現在の値
#@EN@ CSS Style Class(es)
Legend_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
Legend_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Legend Text
Legend_text_displayName=説明のテキスト
#@EN@ The explanatory text that is displayed in the legend
Legend_text_shortDescription=説明に表示するテキスト
#@EN@ Converter
Legend_converter_displayName=コンバータ
#@EN@ The converter attribute is used to specify a method to translate native  property values to String and back for this component
Legend_converter_shortDescription=converter 属性を使用して、このコンポーネントの native プロパティー値を文字列に変換し、元に戻すメソッドを指定できます
#@EN@ Legend Position
Legend_position_displayName=説明の位置
#@EN@ Specifies the position of the legend
Legend_position_shortDescription=説明の位置を指定します
#@EN@ Visible
Legend_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
Legend_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ CSS Style(s)
Legend_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
Legend_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Rendered Flag
Legend_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Legend_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Component Identifier
Legend_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
Legend_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Script
Script_displayName=スクリプト
#@EN@ The Script component is can be used to refer to a Javascript file, by using   the url attribute
Script_shortDescription=Script コンポーネントを使用し、 url 属性で JavaScript ファイルを参照できます
#@EN@ Type
Script_type_displayName=タイプ
#@EN@ Indicates the MIME type of the script
Script_type_shortDescription=スクリプトの MIME タイプを示します
#@EN@ URL
Script_url_displayName=URL
#@EN@ Defines the absolute or relative URL to a file that contains the   script
Script_url_shortDescription=スクリプトを含むファイルの絶対 URL または相対 URL を定義します
#@EN@ Rendered Flag
Script_rendered_displayName=描画フラグ
#@EN@ Use the rendered attribute to indicate whether the HTML code for the  component should be included in the rendered HTML page
Script_rendered_shortDescription=rendered 属性を使用して、描画される HTML ページにコンポーネントの HTML コードを含めるかどうかを指定できます
#@EN@ Charset
Script_charset_displayName=文字セット
#@EN@ Defines the character (charset) encoding of the target URL.  See iana.org for a complete list of character encodings. 
Script_charset_shortDescription=ターゲット URL の文字 (文字セット) エンコーディングを定義します。文字エンコーディングの詳細については、iana.org を参照してください。 
#@EN@ Component Identifier
Script_id_displayName=コンポーネント識別子
#@EN@ The component identifier for this component
Script_id_shortDescription=このコンポーネントのコンポーネント識別子
#@EN@ Alarm Status
AlarmStatus_displayName=アラームステータス
#@EN@ The AlarmStatus component is used to display alarm information in the   Masthead component.    @deprecated See tld documentation for more information on how to create   alarmStatus without using the alarmStatus component. 
AlarmStatus_shortDescription=AlarmStatus コンポーネントを使用して、Masthead コンポーネントにアラーム情報を表示できます。@deprecated alarmStatus コンポーネントを使用しないで alarmStatus を作成する方法の詳細については、TLD のマニュアルを参照してください。 
#@EN@ Number of Major Alarms
AlarmStatus_numMajorAlarms_displayName=中度アラーム数
#@EN@ The number of major alarms, to display next to the appropriate icon. 
AlarmStatus_numMajorAlarms_shortDescription=中度アラームの数。適切なアイコンの横に表示されます。 
#@EN@ Value
AlarmStatus_value_displayName=値
#@EN@ The current value of this component. 
AlarmStatus_value_shortDescription=このコンポーネントの現在の値。 
#@EN@ Double Click Script
AlarmStatus_onDblClick_displayName=ダブルクリックスクリプト
#@EN@ Scripting code executed when a mouse double click occurs over this   component. 
AlarmStatus_onDblClick_shortDescription=このコンポーネント上でマウスがダブルクリックされたときに実行するスクリプトコード。 
#@EN@ Major Icon
AlarmStatus_majorIcon_displayName=中度アイコン
#@EN@ The key identifier for the theme image to use for the major alarms icon. 
AlarmStatus_majorIcon_shortDescription=中度アラームアイコンに使用するテーマ画像のキー識別子。 
#@EN@ Number of Down Alarms
AlarmStatus_numDownAlarms_displayName=停止アラーム数
#@EN@ The number of down alarms, to display next to the appropriate icon. 
AlarmStatus_numDownAlarms_shortDescription=停止アラームの数。適切なアイコンの横に表示されます。 
#@EN@ Critical Alarms
AlarmStatus_criticalAlarms_displayName=重度アラーム
#@EN@ Specify if the critical alarm count should be displayed
AlarmStatus_criticalAlarms_shortDescription=重度アラーム数を表示するかどうかを指定します
#@EN@ Minor Icon
AlarmStatus_minorIcon_displayName=軽度アイコン
#@EN@ The key identifier for the theme image to use for the minor alarms icon. 
AlarmStatus_minorIcon_shortDescription=軽度アラームアイコンに使用するテーマ画像のキー識別子。 
#@EN@ Number of Critical Alarms
AlarmStatus_numCriticalAlarms_displayName=重度アラーム数
#@EN@ The number of critical alarms, to display next to the appropriate icon. 
AlarmStatus_numCriticalAlarms_shortDescription=重度アラームの数。適切なアイコンの横に表示されます。 
#@EN@ CSS Style Class(es)
AlarmStatus_styleClass_displayName=CSS スタイルクラス
#@EN@ CSS style class(es) to be applied to the outermost HTML element when this   component is rendered. 
AlarmStatus_styleClass_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイルクラス。 
#@EN@ Major Alarms
AlarmStatus_majorAlarms_displayName=中度アラーム
#@EN@ Specify if the major alarm count should be displayed
AlarmStatus_majorAlarms_shortDescription=中度アラーム数を表示するかどうかを指定します
#@EN@ Minor Alarms
AlarmStatus_minorAlarms_displayName=軽度アラーム
#@EN@ Specify if the minor alarm count should be displayed
AlarmStatus_minorAlarms_shortDescription=軽度アラーム数を表示するかどうかを指定します
#@EN@ Critical Icon
AlarmStatus_criticalIcon_displayName=重度アイコン
#@EN@ The key identifier for the theme image to use for the critical alarms icon. 
AlarmStatus_criticalIcon_shortDescription=重度アラームアイコンに使用するテーマ画像のキー識別子。 
#@EN@ Icon
AlarmStatus_icon_displayName=アイコン
#@EN@ The identifier of the desired theme image. 
AlarmStatus_icon_shortDescription=使用するテーマ画像の識別子。 
#@EN@ Visible
AlarmStatus_visible_displayName=表示
#@EN@ Use the visible attribute to indicate whether the component should be  viewable by the user in the rendered HTML page
AlarmStatus_visible_shortDescription=visible 属性を使用して、描画された HTML ページにコンポーネントを表示するかどうかを指定できます
#@EN@ CSS Style(s)
AlarmStatus_style_displayName=CSS スタイル
#@EN@ CSS style(s) to be applied to the outermost HTML element when this   component is rendered. 
AlarmStatus_style_shortDescription=このコンポーネントの描画で一番外側の HTML 要素に適用する CSS スタイル。 
#@EN@ Text Position
AlarmStatus_textPosition_displayName=テキストの位置
#@EN@ Specifies where the text will be placed relative to the image
AlarmStatus_textPosition_shortDescription=テキストの配置先を画像に対する相対位置で指定します
#@EN@ Down Alarms
AlarmStatus_downAlarms_displayName=停止アラーム
#@EN@ Specify if the down alarm count should be displayed
AlarmStatus_downAlarms_shortDescription=停止アラーム数を表示するかどうかを指定します
#@EN@ Number of Minor Alarms
AlarmStatus_numMinorAlarms_displayName=軽度アラーム数
#@EN@ The number of minor alarms, to display next to the appropriate icon. 
AlarmStatus_numMinorAlarms_shortDescription=軽度アラームの数。適切なアイコンの横に表示されます。 
#@EN@ Down Icon
AlarmStatus_downIcon_displayName=停止アイコン
#@EN@ The key identifier for the theme image to use for the down alarms icon. 
AlarmStatus_downIcon_shortDescription=停止アラームアイコンに使用するテーマ画像のキー識別子。 
