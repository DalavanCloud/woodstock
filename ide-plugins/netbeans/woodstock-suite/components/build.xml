<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See harness/README in the NetBeans platform -->
<!-- for some information on what you could do (e.g. targets to override). -->
<!-- If you delete this file and reopen the project it will be recreated. -->
<project name="org.netbeans.modules.visualweb.woodstock.webui.jsf" default="netbeans" basedir=".">
  <description>Builds, tests, and runs the project org.netbeans.modules.visualweb.woodstock.webui.jsf.</description>
  <import file="nbproject/build-impl.xml"/>

  <property name="master.project.dir" value="../../../../master"/>

  <target name="release">
    <!-- Choose a file that is most likely to be updated during development -->
    <property name="output.timestamp.file"
              value="${cluster}/modules/ext/webui-jsf-dt.jar"/>
    
    <uptodate property="master.build.not.required"
              targetfile="${output.timestamp.file}">
      <srcfiles dir="${master.project.dir}/dist"/>
    </uptodate>
    <echo message="Output timestamp file is up to date: ${master.build.not.required}"/>
    <echo message="  output.timestamp.file=${output.timestamp.file}"/>
    <antcall target="do-release"/>
  </target>

  <target name="do-release" unless="master.build.not.required">
    <echo message="Building ${master.project.dir}"/>
    <ant dir="${master.project.dir}"
      target="dist" inheritall="false" inheritrefs="false"/>
    <echo message="Done building ${master.project.dir}"/>

    <!-- Copy the all dependent jars -->
    <copy todir="${cluster}/modules/ext">
      <fileset dir="${master.project.dir}/dist">
        <include name="dojo-*.jar"/>
        <include name="jsf-extensions-*.jar"/>
        <include name="json*.jar"/>
        <include name="prototype-*.jar"/>
        <include name="webui-jsf*.jar"/>
        <include name="*theme*.jar"/>
      </fileset>
    </copy>

    <!-- Copy javadoc and source zips -->
    <copy todir="${cluster}/docs/">
      <fileset dir="${master.project.dir}/dist">
        <include name="webui-jsf-*.zip"/>
      </fileset>
    </copy>
  </target>

  <target name="clean" depends="projectized-common.clean">
    <echo message="Cleaning ${master.project.dir}"/>
    <ant dir="${master.project.dir}"
      target="clean" inheritall="false" inheritrefs="false"/>
    <echo message="Done cleaning ${master.project.dir}"/>
  </target>
</project>
